undefined
undefined says @everyone We'll use this channel for discussions on how developers can leverage the Axelar network for their applications. Feel free to ask us any questions.

Developer docs: https://docs.axelar.dev/roles/dev
Axelar SDK: https://github.com/axelarnetwork/axelarjs-sdk
Satellite web app: https://github.com/axelarnetwork/axelar-web-app
undefined says Pinned a message.
undefined says Hey @GeorgeIstanbul, moving your dev question here: https://discord.com/channels/770814806105128977/770814806105128980/954794523890941982

We've been updating the SDK and the backend so I think the previous inputs aren't valid anymore, make sure to try with the latest version. While currently we intend for developers to use the JS SDK to simplify the integration, @Canh T can help look into your issue to get it to work directly.
undefined says Hi
undefined says I was checking axelard cli and couldn't figure out how to deploy smart contract.
undefined says Wish anyone could give me some guide?
undefined says What smart contract do you want to deploy?
undefined says Talking about testnet here, just testing some CosmWasm contract.
undefined says HI!
undefined says Cosmwasm isn't enabled on Axelar yet
undefined says Oh, can I deploy smart contract to axelar at all?
undefined says Not on the Axelar network itself for now. We're prioritizing cross chain communication between smart contracts on other chains rn.
undefined says I see, hmm...
undefined says Ok, thanks.
undefined says Nice!
undefined says helloo guys
undefined says üëã
undefined says Hello, I am curious. You have bunch of vacancies on the website. Is it still actual information ?üôÇ
undefined says It's a shame the frontend is built in react. If it were Vue js I'd have applied for a dev role in a heartbeat
undefined says Yes, feel free to apply!
undefined says Hi there. Is there any specifications for address generation for axelar?
undefined says Probs bech32 w/ 'axelar' as the HRP no?
undefined says Please use #üëã‚îÇgm for these messages. We consider messages like this outside of #üëã‚îÇgm as spam.
undefined says How can i get some AXL tokens. Looking to run a validator on Axelar
undefined says https://faucet.testnet.axelar.dev/ You can use #üë∑‚îÇtestnet for that.
undefined says not sure what you mean here.  can you give an example?
undefined says Hello, man. This Position for example on Axelar website: https://apply.workable.com/axelar/j/E27FDDC8D8/
https://axelar.network/careers
undefined says You're welcome to apply!
undefined says What about mainnet?
undefined says Is there any guides or help on setting up the validator
undefined says validator guide here https://docs.axelar.dev/roles/validator/setup
undefined says validator need AXL tokens, but now AXL token is not publicly issued. that's a problem
undefined says mainnet is still in rollout phase.  mainnet tokens have not yet been distributed and mainnet validator delegations are handled by Axelar Foundation.  Token distribution will happen in the coming weeks/months pending proper procedure.

You can spin up a testnet validator with tokens from the testnet faucet.  https://faucet.testnet.axelar.dev/

This channel is for developer discussion only.  Please keep validator discussion in other channels such as #üë∑‚îÇtestnet .  Thanks!
undefined says how can i get the AXL token?
undefined says you can get the AXL token when its up for trading on a exchange
undefined says As far as i know it's no possible at the moment
undefined says i cant swap on uniswap.
undefined says Please keep the communication in the relevant channels. use #üîó‚îÇgeneral 
As for your question, Axl tokens are not yet tradable.  Because there is no exchange -dex,cex- listings yet/no liquid
undefined says Hey all, this a the channel for developers to ask their questions about the tech and get answers from the engineering team. Any non technical questions will be deleted to keep this channel focused! Please ask satellite questions in the #üì°‚îÇsatellite and CL questions to the #coinlist-faq channel. Thanks!
undefined says hello, is the AXL token native on the blockchain?
undefined says Section 4.3 of the white paper, "Properties of Threshold Signatures", only discusses *desirable* properties but not how Axelar solves them in practice. Where can I read up on how Axelar addresses robustness, for example?
undefined says hi all, do u have sdk docs?
undefined says ok find it
undefined says Hi, I want to become AXL validator. Should I use `gaiad` or something else?
undefined says Have you a grant or incentive to developers to build dapp on Axelar?
undefined says check this msg üôÇ
https://twitter.com/axelarcore/status/1507333397944881156?s=20&t=78tEX6xXapKFMPBMie3GDQ
undefined says Also just announced @ #AvalancheSummit hackathon: General Message Passing.

Build cross-chain dApps that are decentralized and uncensorable, and can call functions on any chain. 
Check it out: https://bit.ly/37ULVk1.

And ... Challenge & bounties for this hackathon: https://bit.ly/36mC9qF.
undefined says Hi all, I‚Äôm a developer willing to participate in the grant program. Is there anybody out there who could give me at least a few ideas for a project that would really fit the ecosystem and solve some real problem?
undefined says If somebody is looking for a dev, I‚Äôm also ready to join the team.
undefined says you can develop something yourself)üòÅ
undefined says Bump
undefined says Do you idea when I can buy public sale and which DEX will sell
undefined says The public sale is over. Sold on Coinlist. It will be unlocked on May 11 and you can get it from there when it is listed on global exchanges.
undefined says Is there anything with Axelar yet that will allow my DAP to conduct cross chain communications yet?
undefined says I am looking for a solution that is very secure, as I will be dealing with some extremely high value NFTs
undefined says So far, at least 5 or 6 teams at #AvalancheSummit are adding interoperability to their projects using Axelar. For them, we came up with some criteria for our bounties: 

1.*How well does it work?* 1 to 5: 1 = no cross-chain activity is possible; 5 = end-to-end functionality with minimal bugs. ü™≤ 

2. *How creative is your implementation of interoperability?* 1 to 5: 1 = It's something we've definitely seen done before; 5 = It's not something we've ever even *thought* of before. ü§Ø 

3. *Does it meet user demand?* 1 to 5: 1 = We seriously doubt anyone will use this; 5 = this solves a problem that a lot of people already have. üôå
undefined says Where is the Axelar Satellite testnet dapp?
undefined says ok, https://bridge.testnet.axelar.dev/
undefined says @galen  will anyone from the team be on site tomorrow at avalanche summit before submission time (12.00)?
undefined says Yeah u bet. @Foivos will be there.
undefined says Do not offer it here 
Use otc market
undefined says Delete your message please:)
undefined says Guys, is https://axelarscan.io/ down for you too?
undefined says Hi, we encounter an issue when migrating and configuring the domain name for axelarscan.io.
Please temporarily use the below URLs to access the dashboards.
```
mainnet: https://dsnxqv10kqxyh.cloudfront.net 
testnet: https://d38l6q9bb0li3u.cloudfront.net
```
undefined says Awesome, thank you.
undefined says Hey, is there source code of this video https://www.youtube.com/watch?v=pAxuQ7PIl8g ?
undefined says update: the DNS issue has been fixed. Y'all can now visit the explorers via https://axelarscan.io and https://testnet.axelarscan.io, as usual. üôÇ
undefined says Bump #2. Where can one read about robustness in Axelar?
undefined says Hey, apologies, missed the message earlier. The Axelar network design is quite generic and agnostic in the signature scheme being used. The whitepaper talks about Threshold signatures specifically which can be used for optimizing gas costs for signature verification on external chains. But for most of the EVM chains we currently support, a multisig scheme is not that expensive, so we use that. The network design allows us to customize which signature scheme and corresponding safety/liveness thresholds to use per chain. For e.g. in the case of Bitcoin, we used a threshold scheme with really high safety thresholds (over 5/6 validators by stake would be needed for registering keys). Although we don't have a lot of docs on this yet, exact params can be found here: https://github.com/axelarnetwork/axelar-core/blob/main/x/tss/types/params.go#L38=
As we add more validators on the network and implement further optimizations, we can tune these thresholds via governance.
undefined says Why detectTransferOnDestinationChain is deprecated?
undefined says What happened if cross chain contract call is failed on the destination chain
undefined says It's no longer needed for cross-chain asset transfer flow.  @Canh T can elaborate
undefined says Should have the same effect as an ordinary failed contract call -- tx reverted, gas consumed.  For cross-chain calls, Axelar's job is merely to call the contract on the dest chain with the given payload.  Whether that call succeeds or fails is beyond our scope.
undefined says Did the bridged token refunded or it is forever lost if contract call failed
undefined says Are you talking about the new cross-chain contract call functionality (with token), or merely cross-chain asset transfer like in Satellite?

For cross-chain contract calls my understanding is that the token is always delivered to the destination contract address.  What happens to the token after that is up to the contract.  One hopes that the contract offers a way to do something with the tokens even if the contract call that accompanied the delivery of those tokens fails.  @Kiryl can clarify.
undefined says Yup that is correct. If contract call has failed and TX got reverted, then token mint gets reverted too, and token goes back to the gateway and minting approval becomes true again. So you can retry calling the contract again or implement a refund strategy instead and mint the token and refund it. So token never gets lost
undefined says Ah so that's different from what I said! Thanks @Kiryl !
undefined says How can we know the transaction body to submit to gateway contract for retrying? How can refund strategy be implemeted?
undefined says What is the replacement for detecting deposit on destination address?
undefined says we won't have one. when we implemented this originally, it was an internal method to our own webapp that we realized is not relevant to the SDK, so we deprecated it. to detect an event on the destination chain, you can subscribe to the relevant block explorer for that destiation chain directly
undefined says Listening for event on the destination chain right?
undefined says hey gm everyone!
undefined says dropped a message on general and was sent here üòÑ "hey folks, is it possible to use axelar to relay messages between chains? for example, reading ethereum data on polygon?" was taking a look at documentation but got a bit lost, so figured I might simply ask here for some suggestion
undefined says I've got a collection on ETH and I want to deploy a claimable token on polygon. I want to refer to Mainnet data so owners of the NFTs can claim on polygon, so basically calling balanceOf and ownedTokenByIndex from polygon, or preemptively sync data on polygon referring to Ethereum. Do you guys have any idea on that?
undefined says @Kiryl or @Foivos might be able to suggest the right approach here.
undefined says It is totally possible with the new protocol we are going to release soon. The communication between chains happens asynchronously, so you can send any command cross chain, but you can't read data on chainA from the other chainB within your contract. So you would need to chainB to write data to chainA, so it can be accessed within contracts on chainA. I hope this makes sense for your case
undefined says It does! FX portals, a feature of polygon, does exactly that, but their implementation is confusing and if a write tx on target chain fails, you won't sync both chains
undefined says they do have another option which I'll try next
undefined says https://docs.polygon.technology/docs/develop/l1-l2-communication/ethereum-to-matic/
undefined says this just uses statesync
undefined says You need to have a contract in ETH chain that check balance and call axelar to claim NFT on polygon.
undefined says so do I have to deploy a contract on axelar that keeps track of balances and deploy a contract on polygon referring to axelar that will call that contract?
undefined says You only need to deploy on ETH and polygon. Red star indicate contract that you need to deploy
undefined says User will interact with Balance checker on ETH to get their NFT on Polygon.
undefined says https://www.youtube.com/watch?v=pAxuQ7PIl8g&t=2659s

+ get started building here: https://docs.axelar.dev/roles/dev
undefined says @everyone here's a short thread on how to get started building a cross-chain application. https://twitter.com/sergey_nog/status/1510422754272878593 
And don't forget to checkout the grants program! https://axelar.network/multichain-grant-axelerator-program
undefined says Pinned a message.
undefined says Hello, I have some 2 questions
1. Is general message passing (GMP) support for non-evm chain (ex. Terra)
2. Is there support for token in Terra (ex. aUST, ANC, etc.) ?
undefined says @sergey Hello Sergey! 

Do u know about Zerion https://twitter.com/zerion_io ? They implemented a Socket bridge ( https://www.socket.tech/ ) which chooses between Hop.Exchange, Multichain (prev. Anyswap), Polygon Bridge, Hyphen by Biconomy and Arbitrum Bridge to transfer tokens from one network to another in the safe, cheapest and fastest way. 

It works for a large number of major networks already. I tested, everything works quickly and without bugs, the interface is simple and userfriendly. I asked the guys on the team in discord about adding Axelar, and they said it would be cool to do this. Maybe a partnership like this would be of interest to the Axelar team?

I have one of the team members' contacts and a short message about the partnership from him. Can I send it to you in the dm?
undefined says not right now, but planning to support passing between ibc / evm chains.
undefined says sure. let's DM.
undefined says ËØ∑ÈóÆÂú®Âì™Êâ´Á†ÅÂëÄÔºü
undefined says Please use #üá®üá≥ÔΩúchinese or #üáØüáµÔΩújapanese
undefined says hi
undefined says hey üëã
undefined says Is the project party there
undefined says :AxelarX:
undefined says I have nothing else to do. I just want to inquire about the external address of the token purchased by coinlist? Or send a coinlist wallet
undefined says Dear administrator
undefined says Please ask Coinlist related questions in #coinlist-faq
undefined says @All
undefined says I would like to contribute on Axler Node
undefined says Run validator or masternod e, any one guide me please .. i have hardware resources in cloud and physical server
undefined says Hey, you can start on the testnet. Here are the official docs  üëâ  https://docs.axelar.dev/roles/node/join
Also please use the #üë∑‚îÇtestnet channel for that.
undefined says Hey everyone, was just wondering about these two new functions `approveContractCall()` and `approveContractCallWithMint()`: https://github.com/axelarnetwork/axelar-cgp-solidity/blob/fef94197e803cdf91b13cd1d93e4b126fc54bb3c/src/AxelarGatewayMultisig.sol#L365-L409

Does it work the same way as `mintToken()` and `burnToken()` above it? Can't seem to find where the `contractAddress` and `payloadHash` get called, only events emitted.
undefined says these new functions allow you to pass arbitrary payloads across chains and execute any contract on the destination chain: [and pass token with instructions to execute commands on the destination chains]. https://axelar.network/develop-cross-chain-apps-general-message-passing

take a look at some of the examples here and play with the local environment. https://github.com/axelarnetwork/axelar-local-dev
undefined says thanks .can i join main net ? and how much reward ? can earn and how many coin need staking .
undefined says Axelar selected suitable testnet validators among the participants of the testnet. Those individuals and companies who were selected as testnet validators went through an application process and eventually received tokens to become mainnet validators. So as of now, you'd have to start in the testnet and become a validator there.
undefined says So I don‚Äôt need any token to stack ? And can any one help me to setup
undefined says How many node you have on test net . Where I can see
undefined says You need to look more at undocumented gateway address
ETH Ropsten testnet 0x7358799e0c8250f0b7d1164824f6dd5ba31c9cd6
AVAX testnet 0x4ffb57Aea2295d663B03810a5802ef2Bc322370D
undefined says Yeah was just hoping to dig into how the call actually happens on the destination gateway contract. Looking in to those functions I see:

```
    function _approveContractCall(
        bytes32 commandId,
        string memory sourceChain,
        string memory sourceAddress,
        address contractAddress,
        bytes32 payloadHash
    ) internal {
        _setContractCallApproved(commandId, sourceChain, sourceAddress, contractAddress, payloadHash);
        emit ContractCallApproved(commandId, sourceChain, sourceAddress, contractAddress, payloadHash);
    }
```

In the function implementation, `_setContractCallApproved()` looks like just for idempotency check, then straight to emitting an event, but no destination contract call
undefined says Thanks Chom! Guess I'll have to wait for the verified contract
undefined says It's already verified.
undefined says I guess that the axelar validator pick emitted event -> sign transaction -> axelar relayer submit the transaction in the destination chain.
undefined says Your destination contract will have to implement the Executable interface. An Axelar relayer or your own relayer can listen to the ContractCall approval event on the gateway contract on the destination chain, and then call the `execute` method of Executable interface with the payload which will trigger your application contract. See:
Interface: https://github.com/axelarnetwork/axelar-cgp-solidity/blob/main/src/interfaces/IAxelarExecutable.sol
Example app: https://github.com/axelarnetwork/axelar-cgp-solidity/tree/main/src/test
We'll add more docs shortly on the whole flow.
undefined says For all our bug bounty hunters out there, we're running a 5-day audit contest with Code4rena for our smart contracts. There are $50k in rewards that'll be paid out fully, so even if you find something small, you're guaranteed a bounty! Check it out here and share it with your fellow bounty hunter friends: https://twitter.com/code4rena/status/1512052823395082243
undefined says Stefan, my validator in testnet has been working for a long time. How can I join the mainet? I have the server capacity. My moniker's name is Redbooker
undefined says Axelar selects suitable testnet validators among the participants of the testnet. Those individuals and companies who were selected as testnet validators went through an application process and eventually received tokens to become mainnet validators. So as of now, you'd have to proof yourself in the testnet and become a validator there. In the long-run, I believe, everyone with the required technical skills will be able to join the mainnet as a validator.
undefined says I completed all the tasks in testnet and launched the validator in testnet without delegation of tokens from the project. As I understand it, now I need to wait for an official invitation to the testnet validators?
undefined says Yes
undefined says Is there an administrator?  I just transferred 381ust from polygon network to teraa of keplr wallet. It shows that it is successful, but my keplr wallet has not received the account. What is going on?  I checked the transaction record and showed that the intermediate payment address is this: 0x845314B6c8061f980f258f950105e54D64556a01.  After receiving this address, the corresponding 381UST was not redeemed to my keplr address, who can help me?
undefined says 
undefined says https://polygonscan.com/tx/0xab8ecc2586f10a8485c03cefc80fcdcb535fcc305247b90c0c1edeba0e23ea8f
undefined says 
undefined says 
undefined says Feel free to open a support ticket via https://axelar.zendesk.com/hc/en-us/requests/new. One of our support engineers will investigate and try to help you.
undefined says https://axelar.zendesk.com/hc/en-us/requests/378
undefined says I have completed the problem report as required and guided. This is the link. There is no function to add photo screenshots in the appeal form. I can't upload photos.  your response.
undefined says Your ticket has been answered and funds are in your wallet as well.
Also please use the #üì°‚îÇsatellite for Satellite related discussion in the future.
undefined says hello I just found out Axelar, I need some guidance with a project. What I want to do is programmatically send USDT from Binance smart chain to Terra USD. I understand Axelar can do that but i cannot find any reference in the docs to do the same. Any help is appreciated!!
undefined says Hello! Currently, the Satellite app does not support the Binance smart  chain
undefined says Ah I see, can you guide me as to what other tool I can use and how does Terra bridge UI works, I found axelar in their dependencies and figured that's what they have been using
undefined says BCS is not on the list atm, but will be added shortly. You can view how to program the network and get started with a local dev environment here: https://docs.axelar.dev/
undefined says thank you!
undefined says Heads up devs, our bug bounty program is currently ongoing! There is still time to hunt for vulnerabilities & earn some nice rewards along the way. Remember that KYC is required, critical vulnerabilities earn up to 10% of economic damage & high-priority vulnerabilities ($10K to $200K at risk) earn bounties of $5K to $20K.


Go to https://immunefi.com/bounty/axelarnetwork/ if you‚Äôre interested in more information regarding the program. Happy hunting!
undefined says –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –£ –º–µ–Ω—è –≤–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–µ–π LUNA –Ω–∞ 3 —ç—Ç–∞–ø–µ, –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å.
undefined says Please keep this channel in English. We have a dedicated Russian speaking community chat - #üá∑üá∫ÔΩúrussian
undefined says 
undefined says Urgent: Axelar testnet is not working for terra to evm bridge since your GMP rollout on testnet. Over 1000 people are waiting to try out AxelarSea at this moment.
undefined says @galen @sergey @Foivos @Kiryl
undefined says I have bridged many tokens yesterday but not received yet
undefined says https://finder.terra.money/testnet/tx/BD3B60A8928A9F7990570263F59D9C570AAEDC1EA581BA13E8465094D4FC9190
undefined says Looks like there are some issues with IBC transfers from Terra, Axelar testnet never got the transfer, I'll ping the relayers
undefined says hi))iam developer, and i am integrating axelar to our crypto platform,and i have one issue with address generation ,can anybody help me??
undefined says ye, what's the issue?
undefined says thanks for replying,where can i find example of address generation logic??
undefined says Hi, I'm trying to run the sample code but got error not found `@axelar-network/axelar-cgp-solidity/src/gas-receiver/AxelarGasReceiver.sol`, I checked the github seems the `AxelarGasReceiver` is not there as well, any thoughts on this?
undefined says see https://docs.axelar.dev/dev
undefined says on the local dev net? let me check
undefined says Hi @sergey , it's more like the code which affected on both local and testnet I think, thanks. [**UPDATE**]: I've removed all `AxelarGasReceiver` relevant code from the `ExecutableSample` contract, and deployed to both FUJI and Fantom Testnet, things looks works fine üòÄ
undefined says Hello
I am cosmos expert.
Anyone need cosmos developer, please DM me.
undefined says Hi! The axelar gas receiver relevant code does not work yet but it will be required in a few days, the example code and code on testnet is a bit out of sync, but this shouldn't happen still, how did you set up you environment? Did you install @axelar-network/axelar-cgp-solidity separately from the rest at any point?
undefined says I just tried on remix to deploy the code to Testnets, did not try them on local dev env yet. But anyway, no matter compile the contract code via remix or on local env it should always be failed as there is not a `AxelarGasReceiver.sol` file in either `src/utils` or `src/gas-receiver`
undefined says axelar-local-dev uses a different branch (https://github.com/axelarnetwork/axelar-cgp-solidity/tree/feat/gas-receiver) that has the gas-receiver.
undefined says ah, all right, I'll look into it soon, thanks
undefined says BTW: what does the gasReceiver do? any docs there?
undefined says will push docs shortly. but essentially, by default, your transaction will be delivered to the destination chain but not executed. Anyone can then pay gas and execute it. You can setup your own services to do this based on our implementations. Alternatively, if you get users to pay gas to the `gasReceiver` contract directly, our executors/relayers will listen for this fee and execute on your behalf. So users will only pay once on the source chain and forget about it.
undefined says hello need a bit help here
undefined says i want to swap token to moonbeam network for coins like usdt,usdc, ether , bitcoin how can i use axelar assets for that. Do i need it to integrated it in my smart contract or in backend node using some sort of api to make the exchange happen
undefined says Do you want to accomplish this as an end user or as a developer? https://satellite.axelar.network/ is the ideal solution for end users.
undefined says Yes as a developer @Stefan
undefined says Can anyone tell me how can i use axelar assets to swap token from 1 chain to other
undefined says Do i need to create a smart contract and add the assests
undefined says Or there is a way that i can call some api of axelar to make it work with simplicity just by integrating an api call to my backend
undefined says @galen
undefined says Can u help me out with this buddy
undefined says This may help. Generates a destination-chain deposit address on any connected chain. User can send funds from anywhere, even a CEX. https://docs.axelar.dev/dev/sdk/axelarjs-stable
undefined says Thanks bud really appreciate that
undefined says Hey devs, something new over on the Axelar homepage you might be interested in is our new segment about Adding interoperability to your Dapps. 

Just head over to https://axelar.network/ where you can find examples on several use cases like showing how you can use Axelar General Message Passing to take an NFT cross-chain, without bridges.
undefined says anybody here could help out to see why the balance of the UST in the recipients wallet on target chain are still 0 even after the cross-chain transfer? I cloned the repo of `https://github.com/axelarnetwork/axelar-local-gmp-examples`, and run the `call-contract-with-token` example
undefined says and any reasons why not hiding the gasReceiver relevant code to the gateway contract? just like move the `gasReceiver.receiveGasNative` to `callContract` func in the gateway contract, so we don't need to replicate the gasReceiver code everywhere
undefined says BTW: This is Victor from NAMA Finance, and glad to be meet you all here and cannot wait to learn more and build something cool on top of Axelar üòÄ üôè, also very pleased to be part of this community
undefined says I have some seemingly basic issue with trying to use `Any` attributes of Protobuf responses. Can you help me sort out how to get a `BaseAccount` object from the response to this gRPC call?
```    queryClient := xauthtypes.NewQueryClient(c.conn)
    res, err := queryClient.Account(ctx, &xauthtypes.QueryAccountRequest{Address: address})
```

`res` is a `QueryAccountResponse` object.
undefined says Hey Victor! The reason `call-contract-with-token` was not working for you. Is we just recently introduced `gasReceiver` to local dev environment and it expects gas to be paid in order the transaction to be relayed to the destination contract. And not all our examples are paying to the gas receiver yet. So we will update it soon.

The reason `gasReceiver` is not a part of the gateway is to separate concerns and for funds holded in the gateway to be separate from the gas fees. We are not aiming to be the main transaction relayer and open for other to provide relaying services to call contracts on the destination chain
undefined says This example was broken as it was not paying for gas, it is fixed now.
undefined says Thanks @Kiryl @Foivos , yeah, that example is working as expected now üôè
undefined says @Kiryl  one more question about the gas fees, what if I as a user paid more than the needed, are they gonna return to the msg sender directly or we do have some other options to deal with this situation? Also could I use AXL token to pay the tx fee? thanks
undefined says Just raised a PR, updated the external github links to the examples repo on the developer page, I'd appreciate if anybody could have a quick review on it. Thanks
undefined says Thanks!
undefined says The newly built node, version 0.17.0, starts from the snapshot and reports an error
undefined says Is there any way to talk to developer teams? I would like to offer integrating new blockchain with Axelar network.
undefined says The gas receiving model is a work in progress, we are thinking of adding refund functionality in the future but initially we'll assume the app had the user pay an amount close enough to the actual amount that that should not be an huge issue. The way gas receiving works is for now abstract enough that you could pay in anything, whatever you payed in is converted to the native currency of the destination chain and is used to derive the gas limit that will be set there.
undefined says Also the app could provide an option for the user to execute their tx on the destination chain themselves, the process won't be as seemless but it will be cheaper for the user.
undefined says got it, totally makes sense, thanks @Foivos
undefined says In order to maintain relay functionality to ropsten testnet, we would like to request that you donate as much rETH as possible to our relayer address 0x7a5e9086a8fadc97b776e89f2ec7e1787a442ee2 because it has become difficult to keep the balance high enough using currently available methods. We are now considering alternative networks so we will keep you posted as this evolves.
undefined says Hi team! Our Thai folk @moswat just let us know that there is a problem with the TVL value shown in the axelarscan. As highlighted in the images, it seems like TVL from Mertika is more accurate than Axelarscan.
undefined says not sure how much it's required to use, but i've donated almost 3 rETH, hopefully that would help :). Yeah, maybe an alternative network would be better as it's a little bit hard to get rETH on RopstenüòÄ
undefined says thanks for flagging this. lemme check and update it.
undefined says Greetings axelar developers 

https://stellaswap.medium.com/cosmos-moonbeam-bridge-how-to-bridge-atom-to-moonbeam-5b90ba1f7559

Does anyone by chance have the source code for how this was performed using Axelar to bridge?

https://github.com/stellaswap 

Tried to look here to no avail. Thanks
undefined says what specifically are you looking for? you can take a look at the SDK if you want to move assets: https://docs.axelar.dev/dev/sdk/axelarjs-alpha
undefined says Let me check this out. Specifically, I‚Äôm trying to bridge ERTP assets from Agoric  (tendermint/cosmos consensus layer) to ETH testnet.
undefined says we haven't connected Agoric testnet yet. Is ERTP already there? we could connect our testnets pretty easily.
undefined says Yes, ERTP assets are functional on their testnet, though no production yet
undefined says nice let us take a look. we just need to setup an IBC connection on testnets and deploy the token for it on Ropsten.
undefined says That‚Äôs awesome, thanks. Let me know!
undefined says To be clear, ERTP is Agorics class of assets (like ERC 20) rather than a single asset in of itself. The actual token the Agoric team wants setup is called RUN
undefined says The cosmos denom on our chain is `urun`. 6 decimals.
undefined says got it. thanks. anyone runs IBC relayers for your testnet?
undefined says Let me see.
undefined says So various people have done it in the past, though not currently. We can stand one up. 

this link might be helpful 

https://github.com/dckc/ibc-lab/blob/master/hermes.config

Someone from the Agoric team I‚Äôm working with who has run it in the past is joining the chat, could provide some more info
undefined says hm... I'm trying to use those notes tonight, but I can't `create-channel`:
```
2022-04-22T01:48:13.334959Z ERROR ThreadId(01) Failed ConnConfirm ConnectionSide { chain: ProdChainHandle { chain_id: ChainId { id: "agoricdev-10", version: 10 }, runtime_sender: Sender { .. } }, client_id: ClientId("07-tendermint-1"), connection_id: Some(ConnectionId("connection-1")) }: failed during a transaction submission step to chain id agoricdev-10: gRPC call failed with status: status: Unknown, message: "account sequence mismatch, expected 6, got 5: incorrect account sequence", details: [], metadata: MetadataMap { headers: {"content-type": "application/grpc", "x-cosmos-block-height": "45211"} }
```
undefined says Can any cosmos chain permissionlessly integrate itself with axelar or is their an application process for being included in the network?
undefined says IBC is permisionless and then we'll need to deploy token contracts on EVM chains for it, which is a gov command on the network. working towards making it fully permisionless. which chain do you want to integrate?
undefined says The relayer implementation does run into those errors sometimes. Let me know if you need any config params on the Axelar testnet side.
undefined says actually, yeah, that might be really handy
undefined says Here you go: ```
[[chains]]
id = 'axelar-testnet-lisbon-3'
rpc_addr = 'https://axelartest-rpc.quickapi.com:443'
grpc_addr = 'https://axelartest-lcd.quickapi.com:443'
websocket_addr = 'ws://axelartest-rpc.quickapi.com:443/websocket'
rpc_timeout = '15s'
account_prefix = 'axelar'
key_name = '[account name]'
store_prefix = 'ibc'
max_gas = 3000000
gas_price = { price = 0.00005, denom = 'uaxl' }
gas_adjustment = 0.1
clock_drift = '15s'
trusting_period = '112hours'
trust_threshold = { numerator = '1', denominator = '3' }
```
undefined says thanks!
undefined says is there a faucet for `uaxl`?
undefined says https://faucet.testnet.axelar.dev/
undefined says And you can find more resources here: https://docs.axelar.dev/resources/testnet
undefined says ah. yes... that last one looks familiar. thanks again!
undefined says @Milap I could use help finding docs on how to do IBC transfers from the command line.
I think we got a relayer set up (between an Agoric stagenet and cosmos testnet) but Keplr says `failed to fetch the channel` when I try to add the relevant Destination Chain.
undefined says maybe I'll have better luck relaying to Axelar...
undefined says To add Agoric support to our network, you'd have to create an IBC channel directly between Agoric and Axelar testnets. To do an IBC transfer
`axelard tx ibc-transfer transfer transfer [channel] [account] [amount] --from [sender]`
undefined says cool... I expect I can substitute `agd` for `axelard` to start with...
undefined says I'll try your generosity one more time...
undefined says Do you know an explorer for cosmos testnet IBC connections? Or a way to list them?
We got a `channel-17` as a channel id; I don't see how that's possible, given that cosmos testnet -> axlear is `channel-238`.
Is this config out of date?
```
[[chains]]                                                               
id = 'cosmoshub-testnet'
rpc_addr = 'https://rpc.testnet.cosmos.network:443'
...
```
undefined says @Milap ^ ?
undefined says We had an IBC connection with the vega testnet. I believe theta testnet is the new one (which you're likely connecting?). We haven't migrated to that cosmoshub testnet yet. I recommend connecting Agoric and Axelar testnets directly instead.
undefined says roger.
undefined says Hi, I'm at the EthHackathon and planning to use Axelar bridge. Can someone confirm the security model?
Technically, bribing Axelar will allow to mint IBC tokens in all IBC connected chains. So if we assume Ethereum -> Axelar -> Cosmos chain, then assuming Ethereum security is the strongest, then attacking axelar will compromise all Cosmos chains?
undefined says any cosmos chain can mint tokens and propagate IBC tokens to any other cosmos chain... In this case, you rely on the stack that's built to deal with interop. validators / relayers can disconnect certain paths as they wish. stop relaying traffic, freeze, etc. can always spin up a separate instance of the axelar-network that is unique to certain paths / flows / use-cases.
undefined says gm
undefined says Ho
undefined says #üåê‚îÇdev-tavern Hi, i think my info will be important for you. As for mainnet on Osmosis site - sometimes site was down, it was 3-5 times. Maybe it was only with me, but who knows.... other sites works well. thx and good luck)
undefined says Hi guys, do you have an example of transferring from Solana to Terra or viceversa?
undefined says solana is not connected yet.
undefined says Thanks for the answer @sergey
undefined says i want to sugget integrating new blockchain with Axelar network
undefined says How does axelar functions as a bridge. How it knows when to burn and when to mint and how it is done can someone help me with that
undefined says How did axelar added coins like usdt, usdc and other coins
undefined says here's a starter intro that might be helpful: https://axelar.network/an-introduction-to-the-axelar-network
undefined says Hi all! for the sendToken function, where can I find the strings "destinationChain" for each chain?
undefined says Hey guys! This is Fav from Hats Finance. Who may i contact regarding a Bug Bounty vault proposal?
undefined says can use these strings 
`Ethereum
Avalanche
Fantom
Polygon
Moonbeam`. 

any capitalization.
undefined says DM me.
undefined says DMed, thanks
undefined says Is there any update on when the message passing (https://twitter.com/axelarcore/status/1513986193259741184) will be on Mainnet?
undefined says I am trying to make contract calls with token transfers on testnet but the tokens do not appear on the destination chain. Is it required to pay fees? What could be the reason that it is not working?
undefined says this friday.
undefined says on testnet yes, our relay services assume you pay the gas fee to the gas receiver contract.
undefined says hi there, I was looking at the assets list on polygon mainnet and noticed that some of the assets like USDC is using the axelar wrapper instead of the official USDC token in Polygon https://polygonscan.com/token/0x2791bca1f2de4661ed88a30c99a7a9449aa84174, does it means that it's not supported? moving tokens from ethereum to polygon will bridge them to axlUSDC instead of the official one?
undefined says I found this contract https://github.com/axelarnetwork/axelar-local-gmp-examples/blob/main/examples/call-contract-with-token/DistributionExecutable.sol should I use it to pay the fees?
undefined says Also what's the gas receiver address on Ropsten?
undefined says Are the relay services open source?
undefined says I get `panic: unknown field "gateway_code" in types.Params` when I start a testnet node with `0.17.0`. What is the latest working version?
undefined says 10 rETH sent, good luck and lfg guys
undefined says 
undefined says Hi,

I am a full-stack developer focused on blockchain development on Solana, Terra, Polygon, Fantom, and Ethereum. I have a lot of hands-on experience with DEFI DApps, NFT Marketplace development and I have good knowledge of Metaverse as well. My strongest skill sets are Rust, GoLang, Solidity, Web3.js, Terra.js, React.js, Unity, Unreal Engine, and DevOps. 

At the moment, I am looking for a blockchain full stack development role, and I am wondering if you have any position regarding my skill sets.
If so, I would like to discuss more details with you.

Best wish,
undefined says You're welcome to apply here: https://axelar.network/careers
undefined says Gas receiver address on each testnet is `0xbE406F0189A0B4cf3A05C286473D23791Dd44Cc6`
The gas receiver version that was deployed is: https://github.com/axelarnetwork/axelar-cgp-solidity/tree/bc6948114fc775499b0502ceccf0bc5c942b1ea8/src/gas-receiver
undefined says @Rodin10 (Will never DM first!)
undefined says hi i used the terra bridge
undefined says with axelar and my tokens have not shown up
undefined says sent from terra to ethereum
undefined says Please open a ticket on https://axelar.zendesk.com/hc/en-us/requests/new and someone will help you out!
undefined says thank you so much
undefined says any experience with that route? or how long a bridge transaction should take with axelar? maybe your guess on the high end
undefined says just so i can sleep with some kind of insight. i havent gotten any info just directed to another inbox
undefined says An estimated time should have been shown when you made the transfer.
undefined says Your tokens will definitely show up, no worries about that
undefined says okay thank you for your help ill send the ticket. have a good night
undefined says Thanks, same to you!
undefined says just want to be clear i did not use satelite i used the terra bridge
undefined says they give an axelar option
undefined says i dont have a trace ID that it is asking for
undefined says ugh im so worried
undefined says this ticket is asking all about stuff i dont have the answers to
undefined says ü•≤
undefined says Just provide all the information you do have, like the destination address, the tx hash on terra etc.
undefined says Hi all! Just finished reading all of axelar's docs and wanting to understand if the callcontract function would work with NFTs. Currently building an NFT aggregator using proton contracts (think NFT containers or parent NFTs storing child NFTs inside them) and was curious if Axelar could facilitate ownership of NFTs across chains? So say for example, the NFT Parent is built on Ethereum and has ownership over children NFTs on multiple chains i.e. NEAR, XTZ, SOL, etc
undefined says The application gets to define the message in whichever way it wants. We have an example for cross-chain NFT transfer: https://docs.axelar.dev/dev/get-started#more-examples
undefined says Oh shit
undefined says This is great
undefined says The latest working version is 0.17.0. Did you use manaual setup?
undefined says I followed the steps in here https://docs.axelar.dev/node/join. So basically using  the axelerate-community repo. I ran `KEYRING_PASSWORD=my-secret-password ./scripts/node.sh -a v0.17.0` and got the error. Is there another way?
undefined says Yes. I follow manual instraction and install node succesfull. 
https://docs.axelar.dev/validator/setup/manual
undefined says Thank u ser, I will try that!
undefined says Did you upgrade your gas receiver? It likely broke my contract.
undefined says 
undefined says 
undefined says 
undefined says GMP from Fantom, Polygon -> Avax not working
undefined says A transaction has been executed. Too much delay!
undefined says But from Fantom -> Avax still missing
undefined says That's right. The Gas Receiver contract got upgraded to accept gas refund address today. Please use the latest interface from the branch https://github.com/axelarnetwork/axelar-cgp-solidity/blob/feat/gas-receiver/src/interfaces/IAxelarGasReceiver.sol
It we be a part of the upcoming release
undefined says What should we use to vote for the proposal for fee?
undefined says Does anyone have some Axl to send me?  I want to participate in the proposals
undefined says axelar1dz53asl35g3zx06mlvrwau7gj4m3l8jlc96p05
undefined says Can we still run test net and become a validation ?
undefined says Then you. An move us to MainNet
undefined says How it will be select ? So it‚Äôs not guarantee even if I run test net or main net ..? Can be validation and get reward # I have all resources
undefined says Please advice
undefined says Hi guys, do you have plans to add Solana? any date?
undefined says Guys pleas help me
undefined says Does anyone have some Axl to send me?  I want to participate in the proposals
undefined says axelar1dz53asl35g3zx06mlvrwau7gj4m3l8jlc96p05
undefined says Hi @Netspace, please refer to the post from Gus: 
> Validators must first establish a track record of good performance on testnet before Foundation will consider them for mainnet at this stage of the rollout. Of course, after mainnet AXL tokens are distributed anyone is free to acquire AXL tokens and set up their own mainnet validator.
https://discord.com/channels/770814806105128977/799299951078408242/960761854018334780

In addition, you can see the criteria to be selected as the mainnet validator here: https://discord.com/channels/770814806105128977/869602423247892511/930544431797526548
undefined says There is no info about this right now. Please stay tuned for all future updates from team. :AxelarW:
undefined says Could someone in here connect me to the team's security contact please?
undefined says Feel free to ask in here, I'm happy to forward your inquiry.
undefined says you can email security@axelar.network
undefined says @sergey What is the exact role/purpose tofnd server in any asset transaction scenario?
undefined says Tofnd is responsible for multiparty cryptography. It stores keys and signs msgs.
undefined says @hz what do you mean by messages? Are those tx's?
undefined says cross-chain transactions. i.e. say a user wants to send a transaction (asset transfer) from chain A to chain B. when axelar network validators validate the transaction on the source chain A, they co-sign a message/transaction that is relayed and executed on the destination chain B.
undefined says Who should I talk to?
undefined says https://medium.com/@axelar-foundation/an-overview-of-axl-token-economics-4dc701c9054d
undefined says Please don't ping team members for basic questions about investment opportunities, ICOs, etc.
undefined says @sergey @hz Whats the purpose of tss signing just to relay message/tx as every validator is voting for deposit tx after validating deposit to cross certain threshold based on voting?
undefined says While validators vote to confirm a deposit tx, if Axelar's gateway contract on the destination EVM chain have to mint/release the token amount to send to the recipient. This command is only authorized to be submitted by the validators, this is where tofnd is used to sign the command and the gateway contract verifies the signatures. See example flows mentioned here: https://github.com/axelarnetwork/axelar-cgp-solidity
undefined says Hi, I have a question, what value should I put in the commandId box. and How i can get commandId from where ?
undefined says An application only needs to implement the IAxelarExecutable interface: https://github.com/axelarnetwork/axelar-cgp-solidity/blob/main/src/interfaces/IAxelarExecutable.sol
Take a look at our docs: https://docs.axelar.dev/dev/gmp
undefined says hey everyone
undefined says i have a quick question
undefined says how many validators in total are on the axelar network?
undefined says and is there a way i can see how owns those validators
undefined says @0xPanda just concerned about potential centralization would appreciate any clarity @Axelar Network @Axelar Help
undefined says see https://axelarscan.io/validators. most are external validators based on permisionless PoS.
undefined says Thanks!
undefined says I was also curious about the governance model
undefined says @sergey is there any documentation that outlines what functions governance serves? Main concern is if there‚Äôs any functionality impacting users funds
undefined says We do not have detailed doc on these, will definitely add them for transparency. 
In general, we inherit the cosmos sdk gov model https://docs.cosmos.network/master/modules/gov/, which allow us to upgrade the network, change on chain parameters, etc.
Apart from that, we have a restricted multisig function to temporally freeze a chain, i.e. pause the transfer from/to that chain. 
None of these would affect user funds.
undefined says ah thanks!
undefined says is there any documentation on censorship resistance?
undefined says i wasnt able to find anything detailing it on the docs online but i may have missed something
undefined says am publishing some research so sorry for the questions. Also any details on independence of nodes would be appreciated, where no central authority could control node functionality
undefined says I was looking now at the relevant docs (https://docs.axelar.dev/dev/gmp) and it's unclear to me how exactly the user pays gas fees for executing with the callContract method.  

The closest information I could find was documentation cross-chain asset transfer fees (https://docs.axelar.dev/resources/mainnet).  In this instance it is clear that the fee is subtracted from the bridged asset.  How is this done in the more general callContract instance where additional gas fees need to be paid?  

Also, a related note that crossed my mind - is there documentation around how the Axelar network is managing the fact that fees are being collected in underlying assets whereas transaction fees are being paid in native chain tokens?
undefined says don't have docs on this, but the censorship resistance also follows the cosmos model at the core consensus layer. that is, anyone can join and validate (assuming they get enough stake delegated to them), send transactions. assuming at least one validator includes the transaction, it will be accepted by the network. 

a key point of axelar network is that relaying is permisionless and not trusted for safety at all. so no censorship is possible as users go cross-chain. i.e. anyone can take a transaction from the source chain chain, confirm it on axelar, relay it to destination chain.
undefined says Given a `Tendermint::Types::Block` how can I find the transaction hashes for the transactions in the block? Or, better: how can I get the data that would be returned from a `Cosmos::Tx::V1beta1::GetTxRequest` call but only having the data from the block retrieved by a all to `Cosmos::Base::Tendermint::V1beta1::GetBlockByHeightRequest`?

I'm asking as the `GetTxResponse` contains details I need but I can't call this without already having a transaction hash.

ETA: Problem solved. Just hash it myself from the block's data:
```Digest::SHA2.new(256).hexdigest(block.data.txs[0]).upcase```
undefined says see some examples: 

https://github.com/axelarnetwork/axelar-local-gmp-examples/blob/main/examples/call-contract-with-token/DistributionExecutable.sol

https://github.com/axelarnetwork/token-linker-example#readme
undefined says essentially, if you want to transfer a token via the network, the fee is subtracted at the network level. 

now, for contract calls, we can't estimate the complexity of the calls. so you have two options: 
1) send the call to the gateway directly, and setup your own relayers between the gateway and axelar network, and executor services on the destination chain to actually execute the transfer. OR

2) pay to the gas receiver contract that our services are monitoring and will execute the transaction for you [if you're transferring the token with the call, the token fixed fee will still be subtracted at the network level atm]. you'll be able to pay the gas fee in any token eventually [even in the token that you transfer]. it's an independent contract that sits on top of the gateway.
undefined says `commandId` is emitted by the destination gateway when cross-chain call was approved. So the gateway will emit `ContractCallApproved` or `ContractCallApprovedWithMint` where `commandId` will be the first parameter in the event.
undefined says hi
undefined says Why polygon to avax and fantom (...other chains) take around half an hours? That is incredibly long!
undefined says it shouldn't. give us more context, TXs ids, and we'll check.
undefined says Ty, token-linker example is just what I was looking for.
undefined says Source chain TX: Polygon
https://mumbai.polygonscan.com/tx/0xd085b2dbd8a9e90e6692df1d24ed2996b81106557c643127fe7261037f2d21d0
At Apr-30-2022 09:51:48 AM +UTC

Destination chain TX: Avax
https://testnet.snowtrace.io/tx/0xcaa93938a90e682b5a6f53d5724ab2d57f1badd2a4865851df8a7513512580cb
At Apr-30-2022 10:10:59 AM +UTC

Token ID 67606 (Same token ID = linked transaction)

That clearly 20 minutes, very long waiting time.
undefined says so polygon requires 150 confirmations at the moment. This is due to the safety / liveness issues polygon experienced last few months.
undefined says so your transaction was confirmed at 10.09 (https://mumbai.polygonscan.com/block/26145020), and subsequently executed at 10.10
undefined says so axelar executed it immediately.
undefined says we could reduce the confirmation height for polygon, but it's a bit dangerous. we can take a look again if the issues with polygon network persist.
undefined says OK, if we know the cause that polygon need 150 confirmations to be safe from reorganization we can inform our user to wait for about half and hours in exchange for security.
undefined says Block times on Polygon mainnet are much quicker (1-2 s vs 10s on Polygon testnet) so you shouldn't see as big of a delay there.
undefined says Can WETH on Polygon be deposited to an Axelar contract and bridged to Osmosis?
undefined says On testnet, you can transfer WETH from Ethereum Ropsten testnet to any other chain and then transfer that Axelar wrapped token again via Axelar network. Non Axelar wrapped WETH on Polygon can't be transferred via the Axelar network if that's what you were asking. Token contracts can be found here: https://docs.axelar.dev/resources/testnet#assets
undefined says will be added on mainnet shortly also.
undefined says Excellent!  Yeah, I would like to do on mainnet.  The Osmosis community is very excited to get started with more functionality from your platform and we have a lot of confidence in your team.

I'm sure you're working as quickly as you can!
undefined says hey @Axelar Network , who should I contact for on-chain dev position?
undefined says i am a blockchain developer looking for new opportunities.
undefined says hey, please visit the the career page. Applications are processed through here: https://axelar.network/careers.
undefined says got it
undefined says can any one tell me how the axelar token transfer works with the AxelarJs as i would like to convert token from 1 chain to another and want to know how it works.
undefined says here's a starter intro that might be helpful: https://axelar.network/an-introduction-to-the-axelar-network
undefined says The token transfer functionality that AxelarJS SDK provided is via the `generateDepositAddress` function. Here's how it works:  
  
1. The sdk will talk to our backend service to submit a `generate-deposit-address` transaction to the Axelar network, the output is the unique address for the given parameters:  
- source chain  
- destination chain  
- destination address  
- asset to transfer (we use common_key that defined here https://github.com/axelarnetwork/axelarjs-sdk/blob/0.5.0-alpha.14/src/assets/testnet.assets.ts ‚Üê this is for testnet, just for example)  
  
2. Submit your token to that generated deposit address  
- if your source chain is cosmos-based chain, you have to ibc-transfer to axelar's generated deposit address.  
- if your source chain is evm-based chain, you have to call `transfer` function of `erc20` contract to axelar's generated deposit address.  
  
3. Once your deposit transaction has enough confirmation, the axelar network will automatically validate your deposit transaction. If it is valid, then our network will relay your transaction differently depends on the destination chain:  
- if the destination chain is cosmos-based chain, then our network will be using ibc-transfer to transfer token to the given destination address in step 1.  
- if the destination chain is evm-based chain, then our network will submit `execute` transaction to the `AxelarGatewayContract` at the destination chain to send the token to given destination address. (here's the list of the gateway contracts on each chain https://docs.axelar.dev/resources/mainnet)
undefined says Here's our doc on how you use our sdk the generate the deposit address https://docs.axelar.dev/dev/tokens#1-install-axelar-sdk
  
Once you get the deposit address, then you send the token to that address. After that, you just wait the token to be arrived at your destination address at the destination chain.
undefined says one more question do we have wordpress plugin for axelar
undefined says No, we didn't have it, but anyone can build on top of axelar by either using sdk or talking to our gateway contracts üôÇ
undefined says thanks bud really appreciate ur help
undefined says üëçüèª
undefined says will this work with the api call that i am trying to integrate. https://github.com/axelarnetwork/axelar-local-gmp-examples/blob/main/examples/send-token/index.js
undefined says There are two ways to trasnfer tokens:
- deposit-address: use our JS SKD to generate an address which will automatically route tokens as specified. Works from any chain.
- send-token: use ethers-js or solidity to send tokens directly to any chain. Only works from evm chains.
both of these have examples in the repo you linked named appropriately.
undefined says thanks bud really appreciate ur help
undefined says regarding the second method we can create a contract and then call the abi to interact with the chain on axelar network to make a token swap happen right. but i will only work with evm compatiable chains @Foivos
undefined says how to implement deposit address through js sdk
undefined says do i need to call the deposit address and pass the details to get a deposit address and them make a transfer.
undefined says yes, you can learn from this https://docs.axelar.dev/dev/tokens#1-install-axelar-sdk
undefined says can we  add a contract address as receiving end to receive token instead of a wallet address through axelar transfer call.
undefined says here is a situation to elaborate how i want it to work suppose i have ether on ethereum network and i want to convert it to moonbeam network and then want them directly into my smart contract address so that i can do the further steps.
undefined says for your situation, you should be looking at general message passing concept here. https://docs.axelar.dev/dev/gmp

with this concept, you can send token from the source chain to the smart contract at the destination chain and implement your custom logic in `_executeWithToken` function.

The only limitation is your source chain and destination chain must be evm-based chains that we supported.
undefined says general message passing is already deployed on both testnet and mainnet, so go ahead and try it out!
undefined says I understand Axelar is looking to create a solution to make BTC usable in DeFI.  I‚Äôm trying to understand the difference between Axelar‚Äôs approach and Thorchain‚Äôs.  I was recently told ‚Äú‚Ä¶Thorchain uses real assets instead of pegged assets.‚Äù  Apologies, if I‚Äôm asking in the wrong channel and I‚Äôm more than happy to read any article/interview to understand the difference, If there is one‚Ä¶. Thanks!
undefined says Thorchain is a pure DEX, i.e. you transfer native tokens on one chain and you get native tokens on another chain. Axelar is building a decentralized interoperability layer that can move arbitrary data from one chain to another (in the confines of the chain's abilities). This includes, but is not restricted to tokens. So while you can easily build a DEX on top of Axelar you can also build any other cross-chain app that you come up with
undefined says Hi, guys! I'm trying to get more comfortable with Axelar and am trying to run the Sample Scripts from
https://github.com/axelarnetwork/axelar-local-gmp-examples .
However after installing and building everything I get to the point where I have to run 
`node scripts/createLocal`
 which gives me back the following error `Error: Cannot find module '../build/TokenDeployer.json'`. I have checked Can someone please help me out here?
undefined says a workaround approach is go to the folder of `node_modules/@axelar-network/axelar-local-dev` and run `npm run build` command there, once it's done then go back to `axelar-local-gmp-examples` and run the example code, it should be running as expected without any error
undefined says It works! Thanks!
undefined says fix it
undefined says Hello üëã
undefined says guys why does the IAxelarExecutable.sol executewithToken function require a payload
undefined says what is the payload used for
undefined says and i am dealing with few errors in solidity smart contract while inheriting IAxelarGasReceiver.sol and IAxelarExecutiable.sol
undefined says cuz there is no complete solution given for the https://docs.axelar.dev/dev/tokens as i am  trying to call sendToken function on IAxelarGateway.sol
undefined says this is the error : 11 | constructor(address gateway_) {
| ^ (Relevant source part starts here and spans across multiple lines).
Note: Missing implementation:
--> token swap/axelar-cgp-solidity-main/src/interfaces/IERC20.sol:37:
undefined says The payload is the arbitrary data that you can pass from the source chain to the destination chain.  here's our code example: https://docs.axelar.dev/dev/gmp#note-regarding-the-payload üôÇ
undefined says The function you need to call is `callContractWithToken`, not `sendToken`.
undefined says If you just want to send some tokens with `sendToken`, you don't need to implement a smart contract on the destination chain, the tokens will arrive to the destination address directly.
undefined says but i need to call the smart contract right to send Token and i am creating a custom smart contract through which i want to interact with the sendToken function and then send the token to the destination address.
undefined says i am inheriting the IAxelarGateway.sol contract to call the sendToken function through a website ui to make a token swap
undefined says On the source chain, from your smart contract or dapp, you just need to call the `sendToken` method on the gateway contract on the source chain, i.e you do not need to inherit the Gateway contract: https://docs.axelar.dev/resources/testnet
See the docs and example here:
https://docs.axelar.dev/dev/tokens#call-sendtoken
https://github.com/axelarnetwork/axelar-local-gmp-examples/blob/main/examples/send-token/index.js
undefined says You don't need to inherit `IAxelarGateway` or `IAxelarGasReceiver`. You only need to inherit `IAxelarExecutiable` in order to receive `callContract` or `callContractWithToken` on the destination chain.
Please see this example to see what needs to be done on the source and destination chain https://github.com/axelarnetwork/axelar-cgp-solidity/tree/main/src/gmp-test
undefined says why test tfranfer on satellite is taking more than 5 minutes
undefined says Devs: Join us at 3:30pm Eastern Time for a live walk-through of Axelar‚Äôs secure cross-chain communication capabilities, courtesy of the #MITBitcoinExpo hackathon. https://www.youtube.com/watch?v=aoBOJm8rBMI
undefined says hi, it depends on source/destination network conditions. For example, Ethereum transactions might take a bit longer.
undefined says Hi could you check https://testnet.snowtrace.io/tx/0xc017c4f0672055fad3f32bf6a01f1364f220ed2f8ab77ff4b96c8208d691d8f4

A GMP request from AVAX to Fantom
It has not been unlocked on Fantom for more than 30 minutes
undefined says https://testnet.ftmscan.com/address/0xE2b0aE4a147dBD47AABE229d5fD491Ae3fEa8780

It should unlock here
undefined says @sergey @Milap @Foivos
undefined says looks like the GMP transfers are stuck at the gateways. Please wait for the team to investigate.
undefined says Hi, is the problem fixed? As I know gateways should be submitted batch signed cross chain tx from validators. Your validators failed to sign or your relayer failed to submit batched tx across the chain?
undefined says I'm looking into it, I'll post any updates I have here
undefined says Your satellite also down
undefined says Stuck on generating one time deposit address forever
undefined says your transaction should've been executed now https://testnet.axelarscan.io/gmp?txHash=0xc017c4f0672055fad3f32bf6a01f1364f220ed2f8ab77ff4b96c8208d691d8f4
We are having some issues with our broadcaster keys on testnet at the moment, that's also why satellite is unresponsive. We are working on a fix
undefined says satellite is working again now too, sorry for the inconvenience!
undefined says https://moonbase.moonscan.io/tx/0x560cc389820598f2b97182b37c670f6697765d852d1fecb9dedb8df8f15fa2c4#eventlog

Can you check this transaction? Moonbeam to Polygon It is not executed for more than 1 hours.
undefined says https://testnet.snowtrace.io/tx/0x089b24661e39ec5079eb26d2b4af1f3b5d523e7e219e57b9c4c9202f6df2ab62

Me too. But from Avalanche to Polygon
undefined says hi @Chom & @parametprame, most GMP transfers have been successfully relayed and executed, except ones in which the destination chain is Polygon. Team is working on a fix. Thank you for reporting the issue.
undefined says Heya peeps! Was using axelar network for bridging usdc. The docs have addresses of axlUSDC instead of USDC on some chains, does that mean I'll receive aclUSDC instead of USDC on that chain?
undefined says yeah same question for me, I bridged DAI, I get nothing, neither DAI nor wrapped DAI
undefined says ok I checked status and it's stuck at batch sign
undefined says What happened?
undefined says is this batch sign to be done by team manually?
undefined says You should notify me once polygon problem fixed
undefined says Sure, will definitely do when I get an update.
undefined says you'll receive axlUSDC but you can swap that for USDC through DEXs [via a contract call, if needed]. on mainnet, there are pools setup between axlUSDC and USDC across chains.
undefined says Polygon is fixed now. The rpc endpoint we've been using for the mumbai testnet is no longer publicly accessible, so we needed to switch to a different one
undefined says The missing transfer was due to a UI issue. Fixing it soon
undefined says Here are some axlUSDC pools: https://discord.com/channels/770814806105128977/770814806105128980/971135587883028510
undefined says @Chom @parametprame Polygon Mumbai is fixed: https://discord.com/channels/770814806105128977/955655587260170272/972753033073147934
undefined says HelloÔºå I am Hardin of Terminet - Staking+Web3 infrastructure service provider.
undefined says I have a few questions and would like someone to help answer them, thanksÔºÅ
Is it still possible to join axelar main network validators?
What is the Axelar Validator stake threshold and how many validators are there?
How do I get an AXL?
undefined says can check about delegation program
https://discord.com/channels/770814806105128977/869602423247892511/930544431797526548
currently 42 validators; https://axelarscan.io/validators
undefined says Does this mean that new validators need to join testnet-2 first and meet the above requirements before they can have a chance to join the main network?
undefined says 
undefined says The main network has less than 50 verifiers, can I just deploy nodes to join, but how do I get 1AXL for staking?
undefined says correct!
undefined says > Validators must first establish a track record of good performance on testnet before Foundation will consider them for mainnet at this stage of the rollout.  Of course, after mainnet AXL tokens are distributed anyone is free to acquire AXL tokens and set up their own mainnet validator.

so, you must be confirmed* by the team to create a validator (so to get tokens)
undefined says Thanks a lot, can I participate in testnet-2 now and is there a tutorial for that?
undefined says pleasure! check #üë∑‚îÇtestnet
undefined says Do you have any API to track GMP status such as
- Source chain transaction picked
- Signing transaction
- Submitted to destination chain gateway and waiting for relayer
- GMP request executed on destination chain
undefined says https://testnet.axelarscan.io/gmp;
undefined says Yes, you can try this:
```
https://testnet.api.gmp.axelarscan.io/?method=searchGMP&txHash={callContractTxHash}
```
The API route provides each GMP transfer status. Please note that it's underdevelopment. So, please be aware that there might be some delayed updates and inaccurate tracking when there're errors on the execution side.
undefined says Any issues on the bridge?
Stuck on step 3 for over 1 hour now
undefined says Keeps on saying confirming
undefined says did the transfer arrive? we've had some issues with missing events, so the frontend might not show the correct status
undefined says 
undefined says Your testnet get deposit address is down again
undefined says Hmm, we'll take a look
undefined says How long do I need to run the testnet-2 before I can apply for the main network? how to apply?
undefined says Guys can i know the validator-operator-address (valoper) if the validator is not even created yet ??
undefined says check #üë∑‚îÇtestnet
undefined says Regarding becoming the main net validator:
* You need to become a validator on testnet first
* You need to establish a track record of good performance
* We manually select the validators on an individual basis
* We will contact you if you fit our selection criteria
* There is a lot of demand to become the main net validator, please understand that we can‚Äôt onboard everyone
undefined says ok, thanks! hopefully this process won't take too long, because the hardware configuration as recommended by the documentation will consume a relatively high server cost.
undefined says we look forward to becoming a mainnet validator and becoming deeply involved in contributing to the Axelar ecosystem development
undefined says Helpü§ö
undefined says My $24 transaction stuck...
Tx.hash on matic-0x8ea73204d42a025a56d45287fabe847bce076b2fb9af34136a561cd206bd99af
undefined says to what chain were you sending this and what is the destination address?
undefined says @Canh T
Matic network and address-0x3630f939a35C52957143e7Ad45F31Ce486715416 T#3863
undefined says what was the destination chain for this tx?
undefined says @Canh T  matic (poligon)
undefined says so you sent from polygon to polygon?
undefined says @Canh T  no sorry I'm sending Terra chain to poligon
undefined says @Canh T  Terra hash tx- FA74803EDA1467EBCB18DFB5A0403A3AF3055CADE7ABACB25DBB548646983E8D
undefined says this tx was over 3 months ago so hard to dig up. Terra is the source chain? The deposit tx looks like a deposit you made into a polygon account?
undefined says i'm confused. please file a ticket here: https://axelar.zendesk.com/hc/en-us/requests/new and will have the team help out
undefined says I was testing sattelite axelax
undefined says @Canh T  ok, thanks..I'm trying
undefined says Hi - is this where I can help if the money I sent via bridge.terra.money via Axelar from terra to MetaMask Avalanche network‚Ä¶the transaction shows as success but the receiver address shown looks like your address and the money never made it my wallet
undefined says Can someone please help? I can provide Tx details
undefined says Tx - D78723A761D539927D4BA4D7234F8D5157824669353657E645B822EC5D4C10F5
undefined says @Canh T can you please help? Or anybody else?
undefined says here is the corresponding xfer of funds to avalanche: https://snowtrace.io/token/0x260bbf5698121eb85e7a74f2e45e16ce762ebe11?a=0x8c9da54167027da237cb7336cc03f65d54905069
undefined says Thanks @Canh T what does it mean if i still have not received it?
undefined says Ok nvm
undefined says Got it! Thank you so much!
undefined says Hey, I'm from Candle - An EVM-compatible L2 chain similar to Polygon, and we'd love to integrate with Axelar if possible. What's the process? Thanks.
undefined says Hi Sams, I've forwarded your message to the team.
undefined says Thanks man, how do I get put in touch?
undefined says The team will reach out!
undefined says I saw your code on GitHub. Would it hurt for me to submit a PR to integrate it?
undefined says hey guys, what are the testnet names for the networks? and mainnet as well? I see you use network names to specify target
undefined says can't see it in the docs
undefined says you mean in the send contract? the list of mainnet is here: https://docs.axelar.dev/resources/supported
undefined says Hello, I want to run a node using the new setup-node.sh scripts. An error occurs when running the script. Tell me what can I do in this case?
undefined says Where can i get Axelar?
undefined says Run without `sudo`? As the error says, it can't find `curl`
undefined says And you can ask questions pertaining running a node in the `testnet` channel
undefined says HelloÔºåWhat are the main projects Axelar is currently funding?
Does Axelar accept applications for NFT wallets, domain name systems, node tools, etc.?
undefined says Here's more info about the grant submissions: https://axelar.network/axelar-cross-chain-grant-program-announces-18-winners
We're still accepting more submissions that use the Axelar network üôÇ
undefined says I mean to specify a target network in smart contracts
undefined says when can use terra bridge?
undefined says @Canh T I keep making payments to payoff my loan on Anchor to free up my sAVAX but the payment are not going through‚Ä¶.not sure if that‚Äôs something you‚Äôd have any idea about but I figured I try.
undefined says You'll have to ask Terra about it
undefined says I have a question regarding the threshold signatures used in Axelar - it is my understanding that every node holds a share of the TSS keys, so no 1 node can execute a mint & create new tokens or execute a cross-chain function call without consensus. The added benefit is that this also keeps gas fees low as only 1 signature needs to be verified.

However, imagine a theoretical scenario where the majority of nodes lose their keys - does that mean that all tokens locked in the bridge are now lost forever?

I understand that this is extremely unlikely to occur.
undefined says Did testnet support AVAX, is it wavax-wei?
undefined says https://testnet.snowtrace.io/tx/0x5bd271feeaadf68fa53a11b0c9f9bfc04f9ef0590613a51b3e6c4847c9147cfb
undefined says This transaction failed with unknown reason
undefined says Internal tx show that your gateway does something to unknown contract and it has failed
undefined says Yoyoyoyo
undefined says what did you try to do?
undefined says Call contract with token and send wavax
undefined says 
undefined says 
undefined says OK, It should be "WAVAX"
undefined says WAVAX is working
undefined says https://testnet.axelarscan.io/gmp/0x610c169e16acad08ca5d8b6402bfc3ad5456e69221efc35f112aabbadf743486

This transaction is not getting executed for half an hours
undefined says so i noticed my bridge of luna didnt go through the other day. i am in the https://axelarbridger.com/ transaction recovery tool, wondering how long this will take?
undefined says 
undefined says Yes the token symbol is called `WAVAX` . The gateway is a proxy contract so it's delegated the call to the implementation contract with address `0x8af8...` and then it failed because of the wrong token symbol
undefined says It is half a day now
undefined says we'll look, but we're also extending an API that you can tap into to relay / confirm transactions [either you can do it as a service or enable it on your front-end for users].  in a multi-tenant system once every thousands of TXs maybe be missed occasionally due to multiple conditions [e.g. RPC connections on chains].
undefined says hi,  sorry to keep you waiting.
team has investigated the issue and found that the testnet relayer ran out of funds when the tx was relayed to the avalanche gateway. the issue was fixed now.
undefined says Satelite wallet doesn't work now. It's stuck in this interface all the time.
undefined says Please help solve the problem.
undefined says Same here, seems to be down
undefined says Did you have the same problem?
undefined says yeah, seems to be everyone
undefined says All we can do is wait.
undefined says hey, we are checking now
undefined says It's ready for normal use. Thank you very much.
undefined says Hello, new to Axelar but early Cosmonaut. Can you build a layer 2 Dapp with Axelar on any chain? I've got a community project that I'm looking to build a layer 2 for
undefined says yep, you can build on any chain and use cross-chain protocols to compose with other dapps / chains. today's list of supported chains is shown here: axelarscan.io and more coming.
undefined says I hope Solana soon! ü§ûüèª
undefined says Looks like a lot of Luna and ust is moving cross chain
undefined says Thank you!  I'll do some more research into how to get started. I
undefined says From the proposals I've been voting in with OSMO, all the pools  for Luna and ust were removed. Now thanks to Axelar which is what brought me here, we have wbtc/osmo pools as well as USDC and DAI instead of UST. OSMO is looking very strong as an exchange to withstand the selling volume it took from the attack
undefined says Hello, our company DOBBY LABS is seeking new partners to cooperate with. We provide a complex team of blockchain developers who can assist with Smart Contract development, NFT development, Blockchain security, Front-end & Back-end, etc. Our developers are mainly focused on Solidity smart contracts and are comfortable working with any EVM compatible blockchain, such as: Ethereum, Binance Smart Chain, Polygon, Fantom and Avalanche. Development on Solana using Rust is not a problem for us as well. If you see some possibilities in our future cooperation, do not hesitate to contact me. Thank you üôÇ
undefined says Hi, I'm buliding a web3/climate change project and we're looking to do message passing between Celo and Polygon. Will this be possible via Axelar?
undefined says Yes will be possible!
undefined says You have a problem.  If you withdraw axlUSDC from junoswap it sends it to your Axelar Keplr wallet.  Once it is there the USDC is stuck because you can‚Äôt get AXL tokens to move your money
undefined says We've reported the issue to Junoswap
undefined says Thanks
undefined says how can I have my own endpoint? If i run a node, it would have an api like the one used in js sdk?
undefined says With your own node you can access the basic rpc api (https://axelartest-lcd.quickapi.com/static/swagger/). The  axelarjs-sdk sits on top of it, you can change it's config to use your own node instead of the public rpc node
undefined says Hey everyone, it's Cody from Andromeda... we're a Terra Refugee project looking for a new home. We've identified Axelar as a very key part to what we're trying to achieve. Is there anyone here that we could talk to about integration points?
undefined says gm axelar team! here's a sneak peak of Axelar bridge UI/UX on https://app.shapeshift.com: https://www.figma.com/proto/08E0cAjAQ5YzyhC1oFMfSD/Bridge?node-id=23%3A3011&scaling=min-zoom&page-id=0%3A1&starting-point-node-id=23%3A3011&show-proto-sidebar=1

please let us know if you spot any issues with this flow or have any suggestions for improvement!
undefined says @james_friel | Axelar @Jake | Axelar
undefined says That's awesome to hear. Let's connect to discuss further.
undefined says James, we have a call set up with Jake tomorrow
undefined says Want to join that one with us?
undefined says Perfect, he's too quick for me.
undefined says I'll join. Looking forward to it.
undefined says Hello everyone i want learn Axelar
undefined says some one can tell me how where to start
undefined says ??
undefined says Here's a starter intro that might be helpful: https://axelar.network/an-introduction-to-the-axelar-network. In addition, both https://axelar.network/ and https://axelar.academy/ are great starting points.
undefined says Hi.
I want to  transfer some tokens from my  local running cosmos-SDK-based chain with my local running Ethereum chain to provide a POC for my employer. Can someone pls help me out? Will I have to run a local instance of Axelar as well? where can I learn more about this ?
undefined says Hi I'm looking for the developer recruiter? met someone on the Axelar team at permissionless, figured this would be best place to follow up
undefined says here's a good place to start https://axelar.network/careers. Feel free to mention your contact at Permisionless
undefined says Hello everyone! Our company DOBBY LABS is seeking new partners to cooperate with. We provide a complex team of blockchain developers who can assist with Smart Contract development, NFT development, Blockchain security, Front-end & Back-end, etc. Our developers are mainly focused on Solidity smart contracts and are comfortable working with any EVM compatible blockchains. Solana blockchain is not a problem for us as well. I am seeking a responsible person from this server (admin/moderator) or interested person, who can discuss possibilities of cooperation with me.
undefined says You might instead take a look at the Axelar local dev environment
high-level docs: https://docs.axelar.dev/dev/get-started
examples: https://github.com/axelarnetwork/axelar-local-gmp-examples/
local dev env repo: https://github.com/axelarnetwork/axelar-local-dev

You cannot run public Axelar against your local chains because Axelar validators would need to explicitly support your local chains and vote on events for those chains.

In principle you could spin up an entirely local instance of Axelar and run against that, but that's a lot of work.  We do not have publicly available resources for that.
undefined says Well then what should I go for, is there any way I can connect our chain to axelar or axelar testnet via IBC 
I'm currently trying to transact  some Ropsten Eth - > Axelar - > Our chain
undefined says Perhaps you could set up your own IBC relayer from an Axelar-supported cosmos chain C to your chain then perhaps you could do Ropsten Eth -> C via Axelar and then C -> your chain via IBC.

Unfortunately it's not very practical to use public Axelar networks (mainnet, testnet) to transfer tokens to/from your local chain.  Can't you use an Axelar-supported testnet chain instead?
undefined says Thanks Gus
undefined says Hello everyone
undefined says Am starting learning using Axelar
undefined says and i create a project by using the guide line in the github repo
undefined says but got some issue about this
undefined says i install the axelar local dev but got this error when i run the file
undefined says this is the code
undefined says // axelarTest.js
const axelar = require('@axelar-network/axelar-local-dev');

(async () => {
    const chain1 = await  axelar.createNetwork();
    const [ user1 ] = chain1.userWallets;
    const chain2 = await  axelar.createNetwork();
    const [ user2 ] = chain2.userWallets;

    await chain1.giveToken(user1.address, 'UST', 1000);

    console.log(`user1 has ${await  chain1.ust.balanceOf(user1.address)} UST.`);
    console.log(`user2 has ${await  chain2.ust.balanceOf(user2.address)} UST.`);

    // Approve the AxelarGateway to use our UST on chain1.
    await (await chain1.ust.connect(user1).approve(chain1.gateway.address, 100)).wait();
    // And have it send it to chain2.
    await (await chain1.gateway.connect(user1).sendToken(chain2.name, user2.address, 'UST', 100)).wait();
    // Have axelar relay the tranfer to chain2.
    await  axelar.relay();

    console.log(`user1 has ${await chain1.ust.balanceOf(user1.address)} UST.`);
    console.log(`user2 has ${await chain2.ust.balanceOf(user2.address)} UST.`);
})();
undefined says please someone can help me ?
undefined says hey @Danipro, will take a look. this is one of our simple sendToken examples. what errrors do you see?
undefined says Hello @Danipro, We try changing 'UST' to 'aUSDC', see if it works
undefined says Also check out https://github.com/axelarnetwork/axelar-local-gmp-examples
undefined says just realized you were running the code snippet from the readme for axelar-local-dev. just updated the readme for that repo with Foivos's change, so if u just pull again, the updated example should work.
undefined says I think I'll go with OSMOSIS as an intermediary between Axelar and my chain , Thanks for the help
undefined says I can't get my NGM currency balance
undefined says not sure what the issue is. try again and open the inspector console for satellite to see if you see any issues/warnings? i just tried myself and balance gets loaded fine
undefined says guys hello,
I created an ibc channel for `evmos_9000-4 <> axelar-lisbon`. I can transfer ibc from evmos to axelar. However, it is not possible to transfer from axelar to evmos.

when I run;
``` axelard tx ibc-transfer transfer transfer channel-10 \
>   evmos1cfq73cx5xjn6re9jakw6j8y3qwt4h0t0r323d8 \
>   10000uaxl \
>   --from=axelar \
>   --chain-id axelar-testnet-lisbon-3 \
>   --fees 500uaxl
Enter keyring passphrase:
Error: rpc error: code = InvalidArgument desc = invalid Bech32 prefix; expected evmos, got axelar: invalid request
Usage:
```
I got this
```Error: rpc error: code = InvalidArgument desc = invalid Bech32 prefix; expected evmos, got axelar: invalid request```
channels are open https://testnet.mintscan.io/evmos-testnet/relayers

Could there be a problem with this version of axelard? `v0.19.0`
undefined says i don't remember we having to specify the chain-id. Can you try removing that flag?
undefined says ```Error: rpc error: code = InvalidArgument desc = invalid Bech32 prefix; expected evmos, got axelar: invalid request
Usage:
  axelard tx ibc-transfer transfer [src-port] [src-channel] [receiver] [amount] [flags]```
undefined says `expected evmos, got axelar` üòÖ
undefined says ok added `--node http://127.0.0.1:36657` but now I get this one; 

`Error: cannot provide both fees and gas prices`
undefined says I was able to send uaxl to that address using channel-13 instead. Check if it received the funds
undefined says @Terr https://testnet.mintscan.io/evmos-testnet/txs/EDC1CF336B4350DD25112016942A6D821C5CFAE5AA5FE7733837E27FCF3404A8
undefined says I think the issue really was the channel id. Try using channel-13 instead of channel-10
undefined says what's your full command ?
undefined says `axelard tx ibc-transfer transfer transfer channel-13 evmos1cfq73cx5xjn6re9jakw6j8y3qwt4h0t0r323d8 10000uaxl --from=axelar --fees 5000uaxl`


```Error: rpc error: code = NotFound desc = rpc error: code = NotFound desc = port-id: transfer, channel-id: channel-13: channel not found: key not found```
undefined says i used the command

```
axelard tx ibc-transfer transfer transfer channel-13 evmos1cfq73cx5xjn6re9jakw6j8y3qwt4h0t0r323d8 10000uaxl --from validator --gas auto --gas-adjustment 1.2
```
undefined says what do you get if you execute `axelard q ibc channel channels` ? Is any of the elements something like this:

```
- channel_id: channel-13
  connection_hops:
  - connection-13
  counterparty:
    channel_id: channel-10
    port_id: transfer
  ordering: ORDER_UNORDERED
  port_id: transfer
  state: STATE_OPEN
  version: ics20-1
```
undefined says here is full output https://pastebin.pl/view/3684fd45
undefined says And why can't I see the ibc channel here? https://testnet.mintscan.io/axelar-testnet/relayers
undefined says it seems like the output is not consistent with waht I see. In my end I see this element

```
- channel_id: channel-13
  connection_hops:
  - connection-13
  counterparty:
    channel_id: channel-10
    port_id: transfer
  ordering: ORDER_UNORDERED
  port_id: transfer
  state: STATE_OPEN
  version: ics20-1
```
undefined says do you have any idea what is causing this?
undefined says i can see the channels here: v
undefined says https://testnet.mintscan.io/evmos-testnet/relayers
undefined says i can see too
undefined says but can't see here https://testnet.mintscan.io/axelar-testnet/relayers
undefined says yeah, strange
undefined says üòî
undefined says if someone needs -`axelar-testnet-casablanca-1`-

grpc: `rpc.axelar-casablanca.testnet.run:9096`
rpc: https://rpc.axelar-casablanca.testnet.run
rest: https://api.axl.testnet.run
undefined says also worked for me `045AD8D2B52E01C13B6680396BA1A7CEC17ACDE1273450C36CD722FD46B8672D`
undefined says Hi everyone! I am an independent developer working on Cosmwasm and something related. I do want to contribute to IBC tests. To make my projects better, I really do care about knowing other project plans. I've been wondering if there is anyone here knows when ICS-27 implementation will be done.
undefined says I am not sure if this is the discord to message but the axelar tether on terra 2.0 has spelt tether wrong and put theter instead - my OCD cannot handle this
undefined says @obeatz  that's critical! üòÜ  Where do you see this?
undefined says Hahaha Ik its not an exploit but needed to be said - I messaged someone on terraswap and I think they have submitted a request to change it
undefined says gm axelarians. i know it's early, but curious whether there are any plans or ongoing discussions around affiliate programs for sharing a % of protocol revenues with interfaces or protocols that drive volume
undefined says where do i change from pruned to archive node in the config file?
undefined says for the archive node you can use an archive snapshot. and edit the app.toml
```pruning="nothing"
pruning_keep_recent="0"
pruning_keep_every="0"
pruning_interval="0"```
undefined says btw why archive?
undefined says if you want to run a relayer etc. you can do it with custom pruning too.
undefined says We want all the history, idk. I‚Äôm just an intern
undefined says Hi Devs, 
This is Ali from Pylons-Tech [ https://github.com/Pylons-tech/pylons ] , We are working towards bringing ERC20 tokens to our chain via the Axelar Network . 
We've setup an ibc-relayer between axelar-lisbon-3 and our test-net . IBC transfer between these two are working as they should, however we are facing some issues getting Ropsten WETH to Axelar via test-net satellite . 
Transactions go through from our account to the deposit account but funds are never received in our Axelar address . 
Please guide us towards resolving this issue
undefined says How many validators currently need to sign messages to execute cross-chain requests? For TSS, t+1 parties are needed for KeyGen and Sign. Curious as to what t+1 is currently equal to?
undefined says we'll need to register the path on the axelar network. we'll relay it to the team. @Jo√£o
undefined says depends on the operation: key-rotations need to be authorized by majority of stake on the network. individual cross-chain commands are validated by majority of top 20 validators delegated by stake. https://axelarscan.io/participations
undefined says https://axelarscan.io/participations shows 83.33% for keygen and 66.67% for sign. Would those percentages apply for the total set of validators or only the majority of the top 20 as you mentioned?
undefined says Can someone please reach out to me, and/or connect me to an Ecosystem Development / Developer Relations specialist?

Our dApp is built on top of the NEAR Protocol. We are looking to integrate with Axelar Network to develop the ability to accept payment from other chains (Avalanche/ETH).
undefined says is your dapp on top of near or aurora? @Jake | Axelar
undefined says Hello there, I hope I am not late but I would like to seek your guidance and support on becoming validator, any direction and assistance is wholeheartedly appreciatedü§ó
undefined says just a reminder in case you still need more rETH on Ropsten, https://faucet.paradigm.xyz/ this faucet is dripping 100 ETH on Ropsten now
undefined says Thanks! Saw this earlier and we are already using it! üôè
undefined says Hey guys, im sorry to bother you with noobish questions, but I am getting confused in the docs. I am trying to learn about Axelar to be able to programmatically get deposit addresses in order to transfer tokens around cosmos (at first). First I installed the CLI, configurated an public RPC, and tried to use 'axelard tx axelarnet link', getting 'Error: rpc error: code = NotFound desc = rpc error: code = NotFound desc = account axelar1c... not found: key not found'. After reading through Discord and Docs, I got into the conclusion that in order to be able to use the CLI to use 'link' to get deposit addresses I need to be a Validator. Is that true or I am getting it wrong?
Then I read about the AxelarJS sdk, but Im starting to think that I will face the same problem as with the CLI...
Also, I have a question about deposit addresses generated (through Satellite). Are they really temporal? As I understand, they are temporal addresses getting monitored by Axelar Relayers, but after getting a deposit they stop being monitored? Monitoring keeps going on if they never get a deposit? Can they be reused? I tried to look for answers in the docs, but couldnt get it clear.
Thanks a lot for reading my questions, will be thankful for any tips or direction. gn!
undefined says hey @Windsurfer : great questions. 

* you don't need to be a validator to get a deposit address. you can do it from any node. did you send funds to your key ? can you check it's balance? 
* axelar sdk should similarly work. it doesn't need a node to be installed locally. 
* typically the keys are not ephemeral, but our relayers only monitor deposits to them for 24h at the moment. we might extend it. during certain upgrades, deposit addresses expire [as with an upgrade that's scheduled for tomorrow as we notified]. 
* we're adding another way to generate deposits deterministically, where the addresses shouldn't expire and you'll be able to locally generate them for EVM chains only. 
* also, you can call the EVM gateways directly [via the gas receiver if you want us to relay]. 

can you tell me a bit more about your use-case?
undefined says Hello. Does Axelar actually currently support Cosmos based networks or any non-EVM networks? The Assets page shows what networks are supported, the validator lists show nicely the list of validators, their holdings per network and what networks they support, but none of these mention non-EVM networks
undefined says Where can I get more info about other potential chains?
undefined says hi guys. I was wondering if I can get feedback on some developers' thoughts. I'm currently working on a project which is secure L1 with built-in KYC. I want to set a precedent for both regulation and user-friendly blockchain with a wide range of options and different KYC tiers that will allow restricting transactions from tier 1 (or lower) addresses. So if you wanna stay anon you definitely could but if you want to pay taxes and use "clear" money with insurance you can verify yourself. And imagine this solution has 1400 TPS, fixed fee, and entry point nodes income. And we're almost ready for testnet. WDYT about such solutions? And what do you want to see in it as users?
undefined says yes many cosmos-based networks are supported including osmosis, cosmos hub, juno, etc. see the list here: https://axelarscan.io/
undefined says Hello! Can any token be sent through Axelar or just tokens from a permissioned list?
undefined says > How can a token be listed on Satellite? 
It takes less than 10 minutes to integrate a new EVM chain with all other interconnected chains on the Axelar network so setting it up is simple but the team also wants to ensure that each new chain is fully supported and has enough liquidity. For this reason, only chains with enough liquidity are listed on Satellite. The Axelar team meets the final decision about adding a chain to Satellite. Perhaps this will be decided via governance in the future (I do not know this).
undefined says Thank you.
undefined says üëç
undefined says **Welcome to the #üåê‚îÇdev-tavern channel.**

Use this channel for technical questions about Axelar network and technical discussion of projects related to Axelar and cross-chain communication. Feel free to share code snippets, talk about what you're building and seek out help with challenges. 

‚ïº‚ïæ‚ïº‚ïæ‚ïº‚ïæ‚ïº‚ïæ‚ïº‚ïæ‚ïº‚ïæ‚ïº‚ïæ‚ïº‚ïæ‚ïº‚ïæ‚ïº‚ïæ‚ïº‚ïæ‚ïº‚ïæ‚ïº‚ïæ‚ïº‚ïæ‚ïº‚ïæ‚ïº‚ïæ‚ïº

üîó **DEVELOPER RESOURCES:**
üíª | Documentation ‚Üí https://docs.axelar.dev/
üîç | Block Explorer ‚Üí https://axelarscan.io/
undefined says Pinned a message.
undefined says NICEüî•
undefined says Hi! Can anyone help me to find axlUSDC and axlUSDT tokens smart contract addresses on Terra chain?
undefined says I mean in TerraStation it's allowed to add these tokens to wallet, but token addresses is not shown. Does anyone know them?
undefined says 
undefined says Why transaction is failing and success continuously, but now it is always failing üò¶
undefined says 
undefined says Internal transaction indicate the failing of WAVAX transfer
undefined says This code is not changed and working perfectly in the past
undefined says could you please send the snowtrace url of this attach,
maybe I can check for more information.
undefined says https://testnet.snowtrace.io/txs?a=0x8d013ac025c8f949cafe11f935f24130d3330008&p=3
undefined says There are multiple transactions here
undefined says The revert error complains about `ERC721: operator query for nonexistent token`. This seems to be related to the application logic instead?
https://testnet.snowtrace.io/tx/0xf01aaab32d7944f1fc8881165232f8a35b2447a54c757231d1d00fe15abc14a8
undefined says Note that the testnet Avalanche gateway is `0xC249632c2D40b9001FE907806902f63038B737Ab`. The call to that occurs earlier in the screenshot and completes successfully. It seems to fail at a later call in the application code.
https://testnet.snowtrace.io/tx/0xf01aaab32d7944f1fc8881165232f8a35b2447a54c757231d1d00fe15abc14a8#internal
undefined says https://testnet.snowtrace.io/tx/0x12de48991152a0f1b33029671c0c3c6291d153958d7641a3b0afc4319104ac48

But this transaction revert with unknown reason
undefined says 
undefined says Unknown error one that happened all the time is missing these two rows compared to ERC721 not exists.
undefined says this transaction shows `Gas Used by Transaction is 99+% from gasLimit`, which means gas is not enough. Btw last week, the relayer retried with another execute by removing the overrides (it changed gasLimit from 170k -> 220k). So for now, I'd suggest paying with higher gas. Soon, we will provide a method for paying new gas, and then the executor will retry another execution. Also, users can decide whether to pay new gas at the source chain or execute it themselves at the destination chain on axelarscan.
https://testnet.axelarscan.io/gmp/0x527c5f809e3b87e887ecc4707d17dc81f47f9307509818e0a8d40f46c81c3d41
undefined says It's working now after increasing gas
undefined says Can I know the total amount of axlUSDC tokens issued to the entire network?
undefined says I want to know if the axlUSDC token is overissued
undefined says Can we bridge custom tokens to Cosmos based networks with Axelar?
undefined says Both custom erc20s and 721s
undefined says Hi guys ! I'm trying to test axelar-local-dev https://github.com/axelarnetwork/axelar-local-dev following readmy. But it seems like balance after changes only for sender, receiver still have 0. Is it correct behavior ?
undefined says Do you have an API to check GMP status / get data for exection?
undefined says those methods will be available in the Axelar SDK soon. cc.@Canh T
undefined says that doesn't sound right.  can you post a screenshot and we'll take a look?
undefined says Not at this time.  Axelar currently supports only the tokens listed here https://docs.axelar.dev/resources/mainnet#assets
undefined says I'm not aware of a convenient way to do this.  Probably the best way is to look at each axelusdc token contract on each EVM chain and add up the total supplies from each chain https://axelarscan.io/assets
undefined says Hey ab12. You can check it by checking the balances and supplies of according ERC20 contracts.
We have about $40M USDC locked in the gateway on Ethereum
https://etherscan.io/address/0x4F4495243837681061C4743b74B3eEdf548D56A5
About a million is issued almost on every other supported EVM chain
https://moonscan.io/token/0xCa01a1D0993565291051daFF390892518ACfAD3A
https://ftmscan.com/token/0x1B6382DBDEa11d97f24495C9A90b7c88469134a4
https://snowtrace.io/token/0xfaB550568C688d5D8A52C7d794cb93Edc26eC0eC
https://polygonscan.com/token/0x750e4C4984a9e0f12978eA6742Bc1c5D248f40ed
The rest of the token (~$35M) is issued on the cosmos chains we support, mainly Osmosis. But their block explorers do not have an easy way to see that total value, so we are currently working on such tools.
You can see some of it here
https://axelarscan.io/
undefined says https://docs.axelar.dev/dev/gas-receiver
Is getGasPrice api for main net or test net?
undefined says yes. pls replace the `api_url` with the following url:
mainnet: `https://api.gmp.axelarscan.io`
testnet: `https://testnet.api.gmp.axelarscan.io `
undefined says 
undefined says Thanks for reporting.  Looks like a bug in the README.  I posted an issue https://github.com/axelarnetwork/axelar-local-dev/issues/10 .  In the meantime you can take a look at the local dev examples in this repo: https://github.com/axelarnetwork/axelar-local-gmp-examples
undefined says How do I get tokens like aUSDC on testnets to try out the bridge? Can I mint aUSDC on Ropsten?
undefined says bug fixed.  pull latest main.  amounts should have been in atomic units---100 is too low for transfer.  Thanks!
undefined says Looks like you can get USDC on Ropsten from testnet token swappers.  This article is helpful https://ethereum.stackexchange.com/questions/103919/good-ropsten-usdc-faucets

(USDC is native to Ropsten so it's not called aUSDC there)
undefined says I'll look into that, thanks! In the meantime, I tried to send 0.05 WETH from ropsten to moonbase.
https://docs.axelar.dev/dev/tokens#3-execute-sendtoken-on-the-gateway

While ropsten took my 0.05 WETH (https://ropsten.etherscan.io/tx/0x744a0c5f2001b4d122102047a9a4ca77805c5b4abf58c8db111ed8c87089e545), I'm not sure what happened next. Was `moonbase` not the right input for the destination network?
I'm not sure how to use the Axelar explorer to see if my transaction went through or how to check if there's something I can execute on moonbase.
undefined says I also tried sending some WETH through Satellite, but I don't believe it went through. Is WETH configured properly on Moonbase Alpha?
undefined says @Samurai_Quest I can reproduce the same issue, currently troubleshooting the problem
undefined says and @Ilya Lukyanov can you send the deposit and/or destination addresses you specified on these transactions? looks like this is testnet. we can debug.
undefined says Both the deposit and the destination addresses for these transactions were
0x0394c0EdFcCA370B20622721985B577850B0eb75

*edit: for my transactions
undefined says I tried the same thing with WDEV from moonbase to ropsten, and the transaction came through after a couple of hours
undefined says How do I know which assets I can generate a deposit address for through the SDK? So far I've only been able to generate for uusd (which isn't a token I've heard of- could it be all the stablecoins combined?).
undefined says Hey, you can query assets registered for each chain here:
https://axelartest-lcd.quickapi.com/static/swagger/#%2FQueryService%2FAssets
And also see the full config here:
https://github.com/axelarnetwork/axelarjs-sdk/blob/0.6.0-alpha.8/src/assets/testnet.assets.ts
undefined says Hi all, I read you documentation but I didn't see a faucet for IBC chains (Cosmos). Is it possible to get testnet aUSDC tokens  on Cosmos/Terra ?
undefined says You can post here or DM me your address where we can send aUSDC. We don't have a faucet for that yet.
undefined says Hello, I have a question re xchain token transfers using Axelar. Once the validators sign a tx to send an equivalent amount of tokens to the user's withdrawal address, who actually takes that msg and posts in on the destination blockchain?
undefined says Specifically, step 7 as shown here:
undefined says Anyone can do it. Relaying is permisionless across axelar network and all interconnected chains. We run some relayers now, expose API calls to relay to end-users, etc.
undefined says Ah so they're performed by relayers, cool
Are they incentivized in anyway?
undefined says not at the moment.
undefined says There's one more aspect that I would love to get your opinion on. I noticed that the Axelar VS is relatively small compared to other chains. Are there plans of progressively decentralizing? If I understand correctly, increasing the size of the VS would also increase the security of TSS no?
undefined says Quick thread on one-click cross-chain swaps via Osmosis & Axelar: https://twitter.com/axelarcore/status/1538117495835574274
undefined says Is axelar to polygon down?
undefined says 
undefined says I have seen these transaction to polygon not got executed for more than 8 hours
undefined says fixed it. some rpc issues. sorry for inconvenience. ü•≤
undefined says Hey, I'd kindly like to test my dapp locally to see how the  cross chain contract calls affect it, like how one would interact with a locally forked node, is this possible?
undefined says you can start here, and see the "examples" repo on github. it explains how to setup a local dev environment to test cross-chain calls. https://docs.axelar.dev/dev/get-started
undefined says thanks
undefined says @sergey Is there any guide on how to onboard IBC chain? I found a youtube video on How to onboard EVM chain - Avalance. However, I did not find anything related to IBC chain for this.
undefined says setting up an IBC connection is similar to other chains. But the chain would need to be activated following it by a committee. what network are you trying to connect? testnet is best for this to start.
undefined says testnet Kujira harpoon-4. Is it possible for me to setup this?
undefined says I have already opened IBC Relayer between Axelar testnet-1 and Kujira testnet
undefined says Did it take a long time? üòä
undefined says Do you have any stuck messages?
I think GMP is working good now.
https://testnet.axelarscan.io/gmp/search
undefined says @Sirapop Once a Deposit Address is created, can it be used multiple times? If yes, is there a limit on how many times it can be used? I just tested this on testnet, I was able to transfer 2 times without any issues.
undefined says ok i will try again
undefined says Deposit addresses are meant to be one time use. While the current implementation can allow them to be reused (we'll auto-confirm them for a day after they're generated), this can change suddenly in the future, so I recommend always generating a new one before making a transfer.
undefined says Got it. Thank you.
undefined says Forgot to mention that we only monitor the deposit addresses for a day after they're generated, so those won't be auto-confirmed after that.
undefined says Was this issue ever fixed?
undefined says Lots of the Testnet moonbeam transactions have yet to pass the batch stage. Also tried using satellite and got this as a result:
undefined says Hi, I've written smart contract using cosmwasm for around 1 year. Is there anybody looking for cosmwasm developer?
undefined says hey Axelar team, do you think it's possible for Axelar validators to send some messages after finalization of each block? (the messages should be extended to the finalized block)
undefined says Not sure what you mean exactly, Axelar is based on the Cosmos SDK and uses Tendermint consensus, so we benefit from instant finality, i.e each block being produced is already finalized.
undefined says Guys, does anyone know how to include ``@axelar-network/axelarjs-sdk`` into reactjs app? I am getting lot of module errors. If I use it separately, this works at command line. But, I want to integrate this in a reactjs web app so that I can generate a deposit address and display the address on the web page each time when a ``generate address`` button is clicked. Also, is there any online API just to generate address and get the address? @Milap @sergey
undefined says Since I am unable to generate deposit address realtime, is it fine to update the deposit address manually every 6 hours? And, in these 6 hours, no matter how many transfers happens, all will go through without issues? I am asking this specifically for Mainnet. @Milap @sergey @permissionless
undefined says @Canh T
undefined says Hey team ! Trying to launch tests from `axelarj-sdk` and it seems `getDepositAddress` using testnet's environment resourceUri for requests like `localhost:4000/...`. Is there any additional guide or step I am missing ?
undefined says hey, it should actually work right out hte box for a react app. so the module errors are concerning. can you share:
1. what version of the SDK are you using?
2. any chance you can share your repo with me, so i can check myself?
undefined says when you instantiate the `AxelarAssetTransfer` module, can you try using { environment: "testnet" } instead?

"local" woul dbe using a local instance of the downstream microservices, which you may not have
undefined says Hey, thank you for replying. Well, I have not yet uploaded to my github. I will do that later. However, this is the version that I am using ```"@axelar-network/axelarjs-sdk": "^0.6.0-alpha.15"```
undefined says And, as soon as I add the following to ``App.js`` file```import { AxelarAssetTransfer } from '@axelar-network/axelarjs-sdk';```
undefined says I get pollyfill errors related to webpack version 5.
undefined says For example, this is the first error.
undefined says ```Module not found: Error: Can't resolve 'crypto' in '/root/project2/node_modules/@cosmjs/crypto/build'
BREAKING CHANGE: webpack < 5 used to include polyfills for node.js core modules by default.
This is no longer the case. Verify if you need this module and configure a polyfill for it.

If you want to include a polyfill, you need to:
    - add a fallback 'resolve.fallback: { "crypto": require.resolve("crypto-browserify") }'
    - install 'crypto-browserify'
If you don't want to include a polyfill, you can use an empty module like this:
    resolve.fallback: { "crypto": false }
WARNING in ./node_modules/@axelar-network/axelarjs-sdk/dist/src/assets/devnet.assets.js
Module Warning (from ./node_modules/source-map-loader/dist/cjs.js):
Failed to parse source map from '/root/project2/node_modules/@axelar-network/axelarjs-sdk/src/assets/devnet.assets.ts' file: Error: ENOENT: no such file or directory, open '/root/project2/node_modules/@axelar-network/axelarjs-sdk/src/assets/devnet.assets.ts'```
undefined says Its easy to replicate the issue. I am using NodeJs version 16.  ```npx create-react-app project
cd project
npm install @axelar-network/axelarjs-sdk@alpha
cd src
# add the following in App.js file
import { AxelarAssetTransfer } from '@axelar-network/axelarjs-sdk';
cd ..
npm run start```
undefined says @Canh T
undefined says thanks, will check
undefined says Hi @Aries | Synergy Nodes Thank you for reporting the bug. Are you trying to install ```@axelar-network/axelarjs-sdk``` in a create-react-app ?
undefined says yup.
undefined says and trying to use in reactjs app.
undefined says ```@axelar-network/axelarjs-sdk@alpha```
undefined says alpha
undefined says I've encountered this error before. This happens if you use the latest create-react-app which ships with webpack 5 (that does not include the polyfills that ```@cosmsjs``` needs, i believe.
undefined says The easiest way to fix it is to install the missing packages. so ```npm i crypto-browserify``` Could you please try it out to see if that fixes the problem?
undefined says Ya, I have tried this already. It did not solve.
undefined says Do you have the same error or something different after installation?
undefined says Let me check.
undefined says yup same errors.
undefined says Okay, thanks for letting us know. I will try to reproduce the error on my side now.
undefined says thank you.
undefined says Hey @Aries | Synergy Nodes I was able to reproduce the issue. There are a couple of ways to fix this. The easiest would be to downgrade the react-scripts package as opposed to ejecting the app or using craco/react-rewired
undefined says Just enter ```npm uninstall react-scripts                                              ‚úò INT 12s
npm install react-scripts@4.0.3```
undefined says That should fix all the polyfill issues
undefined says Thank you. I will give it a try and let you know the result.
undefined says Yes, this fixed the issue. Thank you. I will re-upload the code and test it out. If there are any issues, I will let you know. Thank you again. üôÇ
undefined says @vladwulf Yes, I confirm that the code is working. üôÇ
undefined says Fantastic!
undefined says Hi , is the lisbon testnet working , I've added it via testnet.satellite 
the denoms on my keplr wallet keep loading and give an error after a while, Can't do any transactions on-chain or ibc .
undefined says Just checked w/ testnet team, connections to Cosmos chains aren't working at the moment. Should be fixed later today, I'm told.
undefined says Also, we upgraded the docs this a.m.: 

- Better flow for build-test-deploy & sample dApps at /dev/get-started.
- How-to / when-to use AxelarJS SDK.
- Step-by-step w/ Axelar Gas Services when executing General Message Passing calls.

Check it out, post feedback here. üëá  https://docs.axelar.dev üôè
undefined says I'm new to Axelar and have questions: are standard tokens (based on OpenZeppelin contracts) already migratable across chains via Axelar network, or do they need to contain Axelar-specific code (added before they are deployed of course) in order for them be migratable?
undefined says you could wrap a existing erc-20, or deploy a cross-chain enabled erc-20 via a token linker like this: https://github.com/axelarnetwork/axelar-local-gmp-examples/tree/main/examples/cross-chain-token
undefined says Yes that example is exactly what I was looking at, and I saw that an openzeppelin contract wasn't being used, and there is some extra code in the token contract, which led me to ask the question. So for already-deployed token contracts that many people are already using, is the only solution for migratability to wrap it, or are there any other options?
undefined says In the nft-linker example I noticed that an OpenZeppelin contract is used for the token contract, and there is an external mint function added, which is called in NftLinker.sol: https://github.com/axelarnetwork/axelar-local-gmp-examples/blob/main/examples/nft-linker/ERC721Demo.sol
undefined says So is it just this added mint function that makes the ERC721 token migratable across chains via Axelar network? Should there be an access control modifier e.g. onlyRole() to ensure only NFTLinker can call it?
undefined says Yes, for an existing token, you'll need to lock/unlock it on the chain where it's deployed in a separate contract  [and mint/burn the erc-20 on all other chains you want it on]. Essentially you need to support 2 operations either in the erc-20* variant itself [we'll put one live soon] or deploy as wrapper contracts. We can also write some examples if you think it'd be helpful. 

To help auth your contracts across chains, take a look at the constant address deployer: https://docs.axelar.dev/dev/solidity-utilities. You can build the a wrapper contract and deploy its instance across multiple chains with the same address. Then, when you receive a message, you validate that it came from the same address as the contract itself [as you add more chains, no extra work is required]. You can use the Axelar gateway to authenticate the [source chain, source address] tuple of each packet. Does that make sense?
undefined says Great
undefined says Thanks, yes more examples would definitely be helpful.
undefined says I'll check ConstAddressDeployer, looks useful for maintaining the same address on multiple chains.
undefined says I'm actually about to deploy an NFT contract to mainnet, but just before I do it I want it to be "Axelar-ready" (for migratability). So following the nft-linker example would adding this code make it Axelar-ready?

    function mintByLinker(uint256 tokenId) external  onlyRole(LINKER_ROLE) {
        _mint(_msgSender(), tokenId, 1, "");
    }
undefined says Yeah this seems viable, but seems like only linker can call this method, and then token will be minted to the message sender which is the linker. I am not sure if it's the desired outcome.
To be Axelar-ready all you need is to make you contract implement the IAxelarExecutable interface as described here
https://docs.axelar.dev/dev/gmp/overview
undefined says _msgSender() would be the user (who requested migration via the dapp), wouldn't it, as opposed to msg.sender which would be the linker?
undefined says Yes thanks for explaining, I see in the nft-linker example that NftLinker.sol implements IAxelarExecutable interface, whereas the NFT token contract doesn't, but it needs to have a mint function that NftLinker can call.
undefined says Guys, anyone able to send me a couple of aUSDC testnet tokens for testing purpose? @Milap @sergey @Rok | Qubelabs . My testnet-1 address is ``axelar1jcrrt0l5fcaqrgv3czaw5hmhvr6ycyt97xqqv4``.
undefined says done: https://testnet.axelarscan.io/tx/933F1CC04F37076C581EE07595991CBC42EEC256D4ED5430C686DE3BF8079906
undefined says Thank you.
undefined says @Canh T Also, I have one more question.
undefined says On the mainnet, if I want to operate on IBC relayer from Axelar to an other chain, I will have to pay for fees in AXL tokens only? Or can I pay fees in any other tokens? Cause, right now AXL tokens are not available for purchase and if I have to open a IBC relayer from Axelar mainnet, it wont work. right?
undefined says i believe that's right but will let others on the team confirm.
undefined says separate question, are you running a testnet relayer for kujira? we're seeing some ibc transfer timeout issues and wondering if you can check if the relayer is online. will DM you with some related questions, if so
undefined says Hi @Axelar Help , what are the recommended URLs for axelar testnet (`axelar-testnet-lisbon-3`) of the following (using examples below from https://docs.axelar.dev/resources):
```
rpc_addr = 'https://axelartest-rpc.quickapi.com:443'
grpc_addr = 'https://axelar-testnet-grpc.qubelabs.io:9090'
websocket_addr = 'wss://axelartest-rpc.quickapi.com:443'
```

The GRPC and websocket addresses are not working when I ping them.
undefined says Hey Axelar team ! Was there recent changes to http server ? Seems like `/transfer-assets` post endpoint now responses with 400
undefined says Hey there, I'm trying to create a `sendToken` demo, so I've been trying to transfer WDEV from moonbase alpha to ropsten. While I received the WDEV, I can't seem to see a transaction on Axelar's Testnet explorer. Am I looking in the right place?
https://testnet.axelarscan.io/transfers/search?sourceChain=moonbeam

Also, it looks like a lot of transactions haven't had the sign batch step finished. Is that to be expected?
undefined says we don't recommend a single service, per say. if some don't work, you can try others, but let us know if you see issues throughout for all those provided in the docs.
undefined says in mainnet? you weren't trying moonbeam by chance, were you? we had disabled that given their maintenance window, but should be online now. if not moonbeam, let me know if you continue to see issues. and if so, pls send some info so we can help to debug
undefined says i spot checked a couple of the latest ones, and it looks like the transfers actually went through but the block scanner is not reflecting that. i'll mention to the team.
undefined says Hi guys, 
I received my first testnet aUSDC on Terra today. While trying to get my aUSDC balance on my frontend and I saw that the denom is: ibc/F91EA2C0A23697A1048E08C2F787E3A58AC6F706A1CD2257A504925158CFC0F3

Will it be everytime this denom ? Will Mainnet use the same denom also ?
(Probably because aUSDC is a CW20 token and not a native one)
undefined says Great, thanks
undefined says Hey @Benoit S you are right, that's because the token isn't native to Terra. Mainnet denom will be different. You can trace denoms of ibc transfers using their hashes, e.g. for axlUSDC on mainnet:
```
terrad query ibc-transfer denom-trace B3504E092456BA618CC28AC671A71FB08C6CA0FD0BE7C8A5B5A3E2DD933CC9E4 --node https://terra-rpc.polkachu.com:443
```
returns:
```
denom_trace:
  base_denom: uusdc
  path: transfer/channel-6
```
then:
```
terrad query ibc channel client-state transfer channel-6 --node https://terra-rpc.polkachu.com:443
```
returns:
```
client_id: 07-tendermint-7
client_state:
  '@type': /ibc.lightclients.tendermint.v1.ClientState
  allow_update_after_expiry: true
  allow_update_after_misbehaviour: true
  chain_id: axelar-dojo-1
...
```
you can do something similar for your `F91EA2C0A23697A1048E08C2F787E3A58AC6F706A1CD2257A504925158CFC0F3` hash using a testnet RPC node.
undefined says There's an issue with tracking EVM to EVM transfers on the explorer. We're working on a fix.
undefined says Did not find a websocket url, is that not exposed by any service?
undefined says Still no luck, tests from `axelar-sdk` fails as well. Just removed `overwriteResourceUrl` to use Testnet's ->  AxelarJS-SDK uncaught post error (400)
undefined says we'll check. so you're trying to use testnet, and you are using SDK version 0.6.5 i assume?
undefined says it's 0.6.1
Neither testnet, nor devnet. I believe something changed on server side
undefined says 1. can you share the params you're passing into the call, and 
2. what is the resourceUrl you are using?
undefined says const destinationAddress = "0xF16DfB26e1FEc993E085092563ECFAEaDa7eD7fD";

axelar = new AxelarAssetTransfer({ environment: "testnet" });
 response = await axelar.getDepositAddress("Terra", "Avalanche", destinationAddress, "uusd");

resourceUri here I believe is  https://nest-server-testnet.axelar.dev,
undefined says all looks right at first glance. let me see if i can reproduce
undefined says You can just start tests from `axelarjs-sdk`
undefined says ok give me a while, will look this morning
undefined says it's because uusd is no longer a supported asset in testnet. i tried your query with your params and got this error:
```{
  message: 'AxelarJS-SDK uncaught post error',
  uncaught: true,
  fullMessage: 'Provided asset uusd could not be validated'
}```
undefined says so try this snippet of code instead (and update to 0.6.5 while you're at it):
```const {AxelarAssetTransfer} = require("@axelar-network/axelarjs-sdk");

const sdk = new AxelarAssetTransfer({
    environment: "testnet",
    auth: "local",
})

sdk.getDepositAddress(
    "Terra", // source chain
    "Avalanche", // destination chain
    "0xF16DfB26e1FEc993E085092563ECFAEaDa7eD7fD", // destination address
    "uausdc" // asset to transfer in atomic denom units
).then((response) => {
    console.log("deposit address",response);
}).catch((error) => {
    console.error(error);
})

```
undefined says Is there any job channel?
undefined says Thanks a lot
undefined says When I make a cross chain transaction using callContract via IAxelarGateway, how do I know what the transaction hash is?

The reason is that I want to use scripts to see transaction information (if the testnet explorer isn't working completely). I assume that these are Axelar transaction hashes that are required and not the transaction hash on the origin chain.
https://docs.axelar.dev/dev/axelarjs-sdk/tx-status-query-recovery
undefined says it would be the transaction hash of the one you generated from your account on the source chain
undefined says Hi, Any word on when authz support will come about? We have made a non-custodial staking auto compounder that supports all validators and allows percent based allocations: https://yieldmos.com
undefined says Hi team ! Is there minimal amount to send with sendToken method or what fee it takes to make transfer successfull ? Trying to transfer from ropsten to mumbai < 1 usdc, but constantly failing
undefined says there is. the mins are described here: https://docs.axelar.dev/resources/mainnet#cross-chain-relayer-gas-fee
undefined says Hello guys happy to be among you
undefined says please some one can guide me ?
undefined says am coding a token with axelar and i have follow the example on github
but i have deploy the token contract on testnet but the symbol dont appear in the different network support by axelar
undefined says Is there any documentation and examples of using Axelar with upgradeable (UUPS) contracts? I want to create an ERC20 token that'll be upgradeable and migratable via Axelar network.
undefined says can you give us specifics of your issue? what examples are you trying to follow, and what tokens have you deployed where on testnet?
undefined says i'll ask the guys. will come back if i have anything to share.
undefined says Thanks. Axelar contracts that are inherited would need to have their constructors replaced with initializers, which is easy. But I'm not sure about deployment - OpenZeppelin provides deployProxy() and upgradeProxy() for upgradeable contracts as described in https://docs.openzeppelin.com/upgrades-plugins/1.x whereas in your current examples I see deployAndInitContractConstant() (for non-upgradeable contracts).
undefined says I've just deployed upgradeable contracts onto local Avalanche and Fantom chains using deployProxy(), to try the cross-chain-token example (with deployAndInitContractConstant() commented out and addresses from thosee deployments hardcoded in).
source.contract.giveMe(amount) and destination.contract.giveMe(amount) successfully mints tokens.
But when it reaches source.contract.transferRemote(...) an error is thrown ("Error: cannot estimate gas;" which isn't really meaningful).
I hope you guys can work out the issue.
undefined says constructor(
        string memory name_,
        string memory symbol_,
        uint8 decimals_
    ) IAxelarExecutable(address(0)) ERC20(name_, symbol, decimals_) {}
undefined says there is an error here
undefined says when we deploy the contract the symbol not appear because symbol is without the _
undefined says like symbol_
undefined says üá®üá≤
undefined says I have a price Oracle smart contract running on BSC, would be possible to move the price data information from BSC to Polygon using Axelar?
undefined says Just realized I need to pick a role
undefined says Cheers from Mythaverse team
undefined says Yes.  You can make arbitrary smart contract calls (general message passing), so there are many ways to do this.  You need to set up the appropriate contracts.  See https://docs.axelar.dev/dev/gmp/overview
undefined says What're the LCD & RPC endpoints for the axelar testnet? Any popular testnet nodes that ppl know of?
undefined says listed here https://docs.axelar.dev/resources
undefined says thx
undefined says Just for my curiosity, what determines the speed of the approvals on the testnet? Some of these take less than 3 minutes whereas others say 23 hours haha

I hit the Approve button on the explorer when I get the chance, but I assume that there is a threshold that have yet to approve with me? Is there something else I have to do?
undefined says Hey all, I am trying to do an IBC transfer from Axelar to Kujira and I'm not sure where to get the axl gas from.  Can anyone explain to me where i can find this?
undefined says This is the error I'm getting. 
```
axelard tx ibc-transfer transfer transfer channel-14 \
my_kujira_address  \
2000000uusdc \
--from personal \
--fees 0.00000uaxl \
--chain-id axelar-dojo-1 


{"height":"0","txhash":"94A6A2F2BF67AA7316677BF766AD4D38164BE084DC60835DC9E7A0D1BD171D7F","codespace":"sdk","code":5,"data":"","raw_log":"0uaxl is smaller than 10uaxl: insufficient funds: insufficient funds","logs":[],"info":"","gas_wanted":"200000","gas_used":"19611","tx":null,"timestamp":"","events":[]}
```
undefined says also, does axelar support / not support secret network?
undefined says I'd imagine axelar assets should be IBC'able between the two, but I don't see it on satellite
undefined says you shouldn't transfer directly to axelar. you need to generate a deposit address that is routable through axelar to other chains. see SDK https://docs.axelar.dev/dev/tokens#b-get-a-deposit-address or CLI https://docs.axelar.dev/learn/cli [might be outdated a bit]. what are you trying to do?
undefined says gotcha, yeah I was trying to move USDC from osmosis to Kujira using IBC.  So i sent some USDC from osmosis to axelar doing
```
osmosisd tx ibc-transfer transfer transfer/channel-208 \
my_axelar_address  \
2000000ibc/D189335C6E4A68B513C10AB227BF1C1D38C746766278BA3EEB4FB14124F1D858 \
--from personal \
--fees 0.00000uosmo \
--chain-id osmosis-1 
```
and then when i tried to send it from axelar to kujira i got the gas failure.
```
axelard tx ibc-transfer transfer transfer channel-14 \
my_kujira_address  \
2000000uusdc \
--from personal \
--fees 10uaxl \
--chain-id axelar-dojo-1 
```
I didn't know i need axl, nor how difficult it would be to aquire it, I also thought i might be able to use the USDC to pay the gas, but as far as I can tell my USDC is stuck until i can get axl on the free market.
undefined says It's only $2.00 so no big deal, but i was hoping to be able to just use IBC to move USDC around instead of using the EVM bridge.
undefined says you can do it, just need to generate a special "routable" deposit address and send via IBC to it vs sending directly to Axelar.
undefined says we'll soon add an option here: https://satellite.money/?source=osmosis&asset_denom=uusdc&destination=cosmoshub
undefined says gotcha, i have used this method to send funds between other chains, and i assume it would work if i had axl, but yeah i should probably read up on the intended way  to use this chain.
undefined says Looking forward to seeing more options on satellite!
undefined says Is the axl token planned to be released on the free market at some point, or is it intended to only be used by relayers.  And if the latter, what are the other purposes of having an IBC relay setup between axelar and Kujira if not for users to relay funds?
undefined says it will be distributed to the market over the coming months. if you want to run a relayer between axelar / kujira, let's DM and we can figure it out.
undefined says axelar.network/careers
undefined says hi! I'm trying the JS SDK to transfer funds from polygon (mumbai) to avalanche (fuji). I was able to obtain a deposit address, but where can I get some testnet aUSDC?

also not sure if I'll need any AXL tokens to do this
https://docs.axelar.dev/dev/axelarjs-sdk/token-transfer-dep-addr
undefined says also, where can we find the accurate names of the tokens that can be sent? not sure where "uausdc" from the example came from
undefined says There is no faucet for aUSDC yet. Could you post your address here? One of our team can send some testnet aUSDC to the address.
undefined says please check here üëâ https://github.com/axelarnetwork/axelarjs-sdk/blob/main/src/assets/testnet.assets.ts
undefined says How's progress with this (Axelar with upgradeable contracts)?
undefined says address: 0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1
thank you so much!
undefined says thanks for this! should this be added to the documentation? I'm happy to open a PR if helpful
undefined says hey -- just want to understand what you're looking for. you're planning on shipping an upgradable contract and want to make sure it can be upgraded to work with axelar in the future? as long as you can change its codebase and instantiate the desired interfaces it should be fine. you'll need to have a "mint/burn" functionality in there that can can receive messages from other chains to authorize the corresponding actions.
undefined says ^kind of along those lines, does the JS SDK support just generic message passing without sending tokens? I wanted something more "instant" and use axelar as the cross-chain communication layer for a liquidity network
undefined says I ended up doing a transfer of WMATIC from polygon -> avax testnets. But I didn't have AVAX in my destination wallet. If a transaction is "stuck" due to insufficient fee, will supplying AVAX in the middle of a transaction fix it?
https://testnet.axelarscan.io/address/0x90f8bf6a479f320ead074411a4b0e7944ea8c9c1
undefined says yes, you can send messages without tokens. https://docs.axelar.dev/dev/gmp/overview
undefined says stuck at the destination chain? + see https://docs.axelar.dev/dev/gmp/gas-services/overview
undefined says looks like "insufficient fee" even after I got AVAX on the destination
https://testnet.axelarscan.io/address/0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1
undefined says for general cross-chain call? yes, you need to pay to the gas receiver service if you want our relay infra to execute it. see https://docs.axelar.dev/dev/gmp/gas-services/overview
undefined says FYI I'm seeing a lot of these errors when running `npm run build` and I think it's because the filename has changed to  `axelar-utils-solidity/contracts/StringAddressUtils.sol` instead of `/src/StringAddressUtils.sol`
https://github.com/axelarnetwork/axelar-local-gmp-examples
```
Error HH404: File axelar-utils-solidity/src/StringAddressUtils.sol, imported from examples/nonced-execution/NoncedExecutable.sol, not found.
```
undefined says after I updated all the paths, it worked
undefined says https://testnet.snowtrace.io/tx/0xdbc399297ead672b82d886f0b1f6227dd3d5c99f0c1fb1987dcae1a182b489ba
undefined says try to pull & install again. should be fixed now.
undefined says thank you for the drop!
undefined says yes, this worked. Thanks
undefined says @nptytn thank you and Vlad (not sure what the handle is) for responding to my questions about setting up the web examples. I responded on github with the steps I took. Also, another question is that the web app will crash due to `messageSender` and `messageReceiver` being undefined
https://github.com/axelarnetwork/axelar-local-gmp-examples/blob/main/examples-web/call-contract/utils/index.ts#L15-L24
```
Error: invalid contract address or ENS name (argument="addressOrName", value=undefined, code=INVALID_ARGUMENT, version=contracts/5.6.2)
```
undefined says nvm, pulled the latest and everything seems to work fine when following the steps here: https://github.com/axelarnetwork/axelar-local-gmp-examples/tree/main/examples-web/call-contract#instructions
undefined says great,t hanks. the `examples-web` folders are brand new so let us know here if u continue to see any issues. we're pushing fixes real-time
undefined says I know, I've been following your pushes! Thank you. I'd love to share what I'm making on top of these
undefined says actually ethereum -> polygon testnet is really slow. The default was avalanche -> moonbeam but I wanted to try some other testnets too 
https://testnet.axelarscan.io/gmp/0x87d02111c03f157a23b796db0b292b8c85b6ad19d7a10ff6017587208bf43aa5
undefined says will check your TX. 
as a side note, with the migration of ethereum to PoS, finality on Ropsten [and subsequently on the mainnet] actually increases from ~30 blocks to ~62 blocks [2 epochs]. this is already adjusted in our network parameters.
undefined says ah that makes sense, thanks. This might be an obvious question, but does this mean that most transactions will take longer on ethereum? And for this GMP transaction in particular, it looks like the ethereum side was successful but is pending on the polygon side
undefined says yes, by default transactions from ethereum will take longer. there are other "layers on top" of the network that are being built to speed this up. 
for this particular TX, I manually clicked on "approve" from the axelar scanner, but then execution failed at your destination contract. https://mumbai.polygonscan.com/tx/0x3e673e061c5449e13654314db06220ed4f39d00ca6710810b3863b12c7fbb171
the general flow is: if the TX is not relayed in the worst case, because relaying is permisionless, you can invoke an API call to trigger it OR relay even manually. From there, execution at your destination contract should handle failure modes & throw enough logs to debug. 
take a look here also: https://docs.axelar.dev/dev/gmp/gmp-tracker-recovery/monitoring
undefined says thanks for taking a look! seems like there might be not enough gas at the destination. I thought the gas for the e2e transaction could all be paid for using the native token from the source. I'll also take a closer look here
undefined says yes you can call to pay more gas on the source: https://docs.axelar.dev/dev/gmp/gas-services/increase-gas
undefined says our services will then try to re-execute it
undefined says perfect!
undefined says sometimes the status looks like not consist on the GMP tx page, and  I found it seems the Approval duration of the Mumbai transactions (10+ mins to get the tx approved) are far longer than the others, not sure what caused this as I saw some transactions triggered from avax fuji/fantom only took around 2 mins to get everything done.
undefined says Mumbai has a long confirmation heigh that the network needs to wait for. It doesn't have instant finality. Avalanche/Fantom have it, so transactions are confirmed faster.
undefined says Hey guys ! Is there any faucet for supported testnet tokens ? Or any other way to test sendToken on testnet ?
undefined says The faucet can be found here https://faucet-casablanca.testnet.axelar.dev/
undefined says Hi  @Stefan I am a Rust/Solidity/React developer, how can I resolve the issue here?
undefined says How can we help you, Max?
undefined says I am looking for a job now
undefined says You can find open job positions here:  https://axelar.network/careers.
undefined says I have replied, also can I resolve critical challenge issue here?
undefined says Which critical challenge do you mean?
undefined says This channel is dedicated to developers wishing to utilize Axelar's protocol suite to build cross-chain dApps.
undefined says Hey guys i want to have a swap functionality on my website and i would like it to be a cross chain swap can some one help me with it
undefined says My main goal is to accept any token and send them GLMR in return
undefined says Hey guys hope this is the right place to ask (was told by a mod to post here) 

I was trying to transfer usdc from kujira and used the ibc cross chain transfer in their app, it is now on axelar chain but I only just found out the token isn‚Äôt out‚Ä¶ so I can‚Äôt move the funds due to the lack of gas token.

What can I do to resolve this? This was a sale of vesting tokens and I desperately need this money. Thanks in advance for any help
undefined says Replied in #üì°‚îÇsatellite
undefined says @Stefan can u look into my question too plz
undefined says I hope someone in here can help you as I do not know how this is executed from a technical perspective.
undefined says Hey @fuu you could build this functionality into your website using the AxelarJS SDK https://docs.axelar.dev/dev/axelarjs-sdk. The process would be to allow the user to submit a GMP transaction which  sent the token to moonbeam and executed the swap for GLMR.

However we have an ecosystem project building a specific toolkit to easily integrate this functionality more seamlessly who will be releasing docs in the next couple of weeks.
undefined says asked some team members for help here
undefined says which chain do you want to go to and what is your destination address ?
undefined says https://discord.com/channels/770814806105128977/928127396119453696/996105302913065072
undefined says hi @sergey @Kate | Axelar i have dmed you, would be great if you could respond üôÇ
undefined says Feel free to ask in here if we as community members can help you as well.
undefined says Sure! The questions were - 
- How should axlUSDC flow into persistence Chain
- How to integrate Persistence as chain in satellite. (if it is the way)
- How does axelar envision movement of axlUSDC into the ibc ecosystem (should it always be routed via axelar)
- If possible how can we integrate the axl bridge UX into any other UI

Also wanted to create a channel of communication between axelar and persistence team üôÇ
undefined says `executeWithToken` can only be called by the gateway, which I find makes its gas estimation non trivial. The docs have me just overestimate the gas needed (700,000 gas is certainly enough), which works. But does Axelar have a good way of getting a closer gas price for GMP?
undefined says adding @Jake | Axelar to the thread to sync.
undefined says is it possible to use GMP with my own Executors? I want to send a cross chain message from say Ethereum to Polygon, but instead of leveraging Axelar's executors I want to submit the transaction (and pay the gas) myself
undefined says Possibly by initiating a cross chain message on ethereum -> listening to axelar's network to get the destination chain contract address/payload + proof that it was attested by all nodes -> submitting the txn myself
undefined says we don't have a service for this at the moment. we'll consider. but you can look at the history of your transactions and estimate from there. if you overpay, you'll get a refund though.
undefined says Cool. I was thinking that benchmarking was probably the solution as well, but just checking
undefined says yes, you just don't pay to the axelar gas service and send messages directly to the gateway. then you'll need to (a) get it confirmed on the axelar network yourself by posting a transaction, (b) execute it on the destination side yourself and pay gas.
undefined says Slack or tg for comms channel?
undefined says thanks for the quick reply! 
(A) I'm assuming this can be done using the  Axelar JS SDK ?
(B) Are there any examples/documents on which contract needs to be invoked on the destination chain?
undefined says (a) You don't need an SDK for this, and you can call the gateway contracts directly. https://docs.axelar.dev/dev/gmp/gmp-tokens-with-messages
(b) you would need to have some AXL tokens on the network to be able to confirm your own commands sent to the gateway. 
(c) take a look at examples here for `executors` at the destination chain. https://github.com/axelarnetwork/axelar-local-gmp-examples
undefined says Is there any way to obtain testnet token's without running validator node ?
undefined says I believe no as you need to have a testnet address which requires these commands to show:

> axelard keys show validator -a
> axelard keys show broadcaster -a
undefined says Is there any docs on `axelard` or running docker container ?
undefined says The docs can be found here: https://docs.axelar.dev/
Docs on Axelard (for generating keys): https://docs.axelar.dev/validator/setup/manual#generate-keys
There are some mentions of Docker in the docs as well.
undefined says Thanks for the reply
Apparently I wasn't clear in my question, so misconfused you from the beginning.
I'd like to test `sendToken` from my ropsten account to mumbai for example. Is there any way to obtain supported tokens and transfer them using metamask signing ?
undefined says a dropdown with our supported assets in testnet: https://docs.axelar.dev/resources/testnet#assets
undefined says @Axelar Builder In case you didn't know, Axelar has launched a Learn & Code series for our developer community! Each week we will go live on YouTube and feature hands on technical talks, as well as interactive coding workshops to showcase Axelar's features and network, and give you the chance to ask your questions and follow along in real time. 

Tomorrow marks our first Axelar Code session: "Cross-Chain Airdrops & DAO Distributions" hosted by Axelar core engineers Jacky Yuan and Vladimir Agaev. 

üîó  Link to the live stream: https://www.youtube.com/watch?v=1cKbFAE1-uw

‚è∞  Time: 5pm UTC, 1pm EST

üóìÔ∏è  Date: Thursday, July 14th
undefined says Good
undefined says And in case you missed it, here's the link to our first Axelar Learn session from last week, featuring our founder Sergey Gorbunov for a full Axelar Tech Stack Walkthrough!

üîó https://www.youtube.com/watch?v=P3dT2TJQVzU
undefined says Is there a way to obtain some of the assets ?
undefined says Hi,

I'm trying to use the JS SDK to estimage the gas cost to pay to the gas receiver but keep getting this error...
```
TypeError: err.json is not a function
    at RestService.<anonymous> (/home/space_cowboy/Workspace/lifi-contracts-staging/node_modules/@axelar-network/axelarjs-sdk/src/services/RestService.ts:39:32)
    at Generator.next (<anonymous>)
    at /home/space_cowboy/Workspace/lifi-contracts-staging/node_modules/@axelar-network/axelarjs-sdk/dist/src/services/RestService.js:8:71
    at new Promise (<anonymous>)
    at __awaiter (/home/space_cowboy/Workspace/lifi-contracts-staging/node_modules/@axelar-network/axelarjs-sdk/dist/src/services/RestService.js:4:12)
    at /home/space_cowboy/Workspace/lifi-contracts-staging/node_modules/@axelar-network/axelarjs-sdk/src/services/RestService.ts:38:28
    at processTicksAndRejections (node:internal/process/task_queues:96:5)
```
undefined says This is all I'm doing
```
const sdk = new AxelarQueryAPI({
    environment: Environment.MAINNET,
  })

  const gasFee = await sdk.estimateGasFee(
    EvmChain.POLYGON,
    EvmChain.FANTOM,
    GasToken.FTM
    50000
  )
```
undefined says Will check. Cc @nptytn
undefined says Also in the dashboard does this mean the call has been approved to be executed or waiting to be approved?
undefined says waiting to be approved. had an issue that we had to resolve this morning. how's it looking now?
undefined says All still waiting to be approved. Could be that I didn't provide enough gas...
undefined says what's the TX hash?
undefined says This is the most recent one 0x265b92dcb696930cf81311c5242fe78d555d9ba4d0166e777bfa6c4d7657543c POLYGON > FANTOM
undefined says did you call the gateway as well? you need to pay tax & call the gateway with your payload. https://polygonscan.com/tx/0x265b92dcb696930cf81311c5242fe78d555d9ba4d0166e777bfa6c4d7657543c
undefined says ```
function executeCallViaAxelar(
        string memory destinationChain,
        string memory destinationAddress,
        address callTo,
        bytes calldata callData
    ) external payable {
        Storage storage s = getStorage();

        bytes memory payload = abi.encodePacked(callTo, callData);

        // Pay gas up front
        s.gasReceiver.payNativeGasForContractCall{ value: msg.value }(
            address(this),
            destinationChain,
            destinationAddress,
            payload,
            msg.sender
        );

        s.gateway.callContract(destinationChain, destinationAddress, payload);
    }
```
undefined says This is what I'm calling
undefined says checking
undefined says Thnx
undefined says Hi, I checked this function on my side. It's working fine for me. Can you check if it still doesn't work for you? If it doesn't work, what is a version of sdk that you use?
undefined says ^0.6.10 just installed today
undefined says thanks for confirming. we were able to reproduce in 0.6.10. will address it
undefined says the relay for these functions are paused on the mainnet for an upgrade. try on the testnet first to make sure all works and then move to mainnet? the upgrade should be ready shorlty.
undefined says Ok. Thanks.
undefined says Is there a confirmed working version I can downgrade to in the meantime?
undefined says it was a Q for me sergey. @edzynda.eth it should work in testnet if you can use that for now instead
undefined says found the issue. the downstream URL that is queried in mainnet was incorrect, but we just fixed it in this version if you want to use this one for now `0.6.11-alpha.8`: https://www.npmjs.com/package/@axelar-network/axelarjs-sdk/v/0.6.11-alpha.8
undefined says ok thnx
undefined says How can i add a new chain configuration on test satellite ui? Has any doc?
undefined says :AxelarW: A reminder that our first Axelar Code session will be going live in 10 minutes!
undefined says Don't miss this: https://discord.gg/VmfVgEsn?event=996375361820569630
undefined says what chain r u intersted in adding? we don't offer the ability for users to programmaticaly add new chains atm
undefined says How can I sent manuel IBC tx using Keplr wallet on test satellite network?
undefined says I want to add this test channels. 
atlantic-1: channel-1 | connection-1 | 07-tendermint-1
axelar-testnet-lisbon-3: channel-34 | connection-30 | 07-tendermint-64
undefined says Hey, I'm trying to send a token with a contract call on the testnet (moonbase alpha origin chain). I'm trying to approve, but it gives me an error in this screen.
https://testnet.axelarscan.io/gmp/0xa41b6a75a36f06d1a2164e20b781a67955387f21ecbffba157c9bc2607d6eda9

I haven't been able to send a transaction that finishes in the destination chain, and I'm not sure why. My code seems very similar to the airdrop demo for GMP.

Transaction Hash:
`0xa41b6a75a36f06d1a2164e20b781a67955387f21ecbffba157c9bc2607d6eda9`
Smart Contract + Deployment Repo:
https://github.com/jboetticher/axelar-sdk-demo
undefined says Hey Jeremy, just looking into this tx for you
undefined says ~~You've probably already seen this, but viewing the transaction returns an error on the fantom chain
`{"jsonrpc":"2.0","id":58,"error":{"code":-32000,"message":"exceeds block gas limit"}}\n`~~

Wrong transaction haha, nevermind. I've sent too many
undefined says we're working on onboarding atlantic-1 soon, so bear with us. hoping we should have that online by the end of the week or early next.
undefined says @Canh T @nptytn @sergey thanks for the great web examples and support as I was trying it out. Here's an artifact of eth -> polygon GMP with tokens by repurposing the examples. Goal is to prototype a flow for more seamless new chain onboarding. Was running it all locally though. Testnet was a bit slower but would be more realistic with signing
https://twitter.com/thejuliawu/status/1547269731752615937
undefined says this is cool. let's chat?
undefined says yes! let me shoot you a DM
undefined says That‚Äôs cool!
undefined says What's the correct chain name for BNB chain?
undefined says Also I've tried posting a GMP TX from Ropsten > Mumbai and still can't seem to get calls to approve...
undefined says https://ropsten.etherscan.io/tx/0x1cf738a70cb2f4f07277c1ab287d64604f786a32a147990ad83eff1863dfd6f6
undefined says hey @edzynda.eth the name is `binance`
undefined says @edzynda.eth  it seems that there was not enough gas for this transfer üí∏  https://testnet.axelarscan.io/gmp/search?txHash=0x1cf738a70cb2f4f07277c1ab287d64604f786a32a147990ad83eff1863dfd6f6
You can always see the status of your calls at https://testnet.axelarscan.io/gmp -> filter by your txID
undefined says if adjusting the gas does work for you, there might be an issue with the smart contract. Here is a more detailed guide on how to debug in this case https://docs.axelar.dev/dev/gmp/gmp-tracker-recovery/error-debugging
undefined says Also, I just published the guide about debugging smart contract issue. https://docs.axelar.dev/dev/gmp/gmp-tracker-recovery/debugging-your-smart-contract Hope this guide can help you üôèüèª
undefined says hey guys, 
can someone tell me how to mint test AXL tokens for satellite.money test transactions, pls?
undefined says Hey! You can get test AXL from the faucet here https://faucet.testnet.axelar.dev/
undefined says and then with that @vientosolar you should use https://testnet.satellite.money/ instead
undefined says Thank you for the prompt reply. Can you also advise regarding network that I should use for my wallet to get test tokens?
If I followed the instruction, it is not clear for me how to get axelards available , if I am not running the validator node. 
Please let me know
undefined says :AxelarW:  New on the blog today is a walkthrough of yesterday's live Axelar Code session, showing you how to build a dApp that calls a contract and transfers tokens on Chain B from Chain A, check it out here: 

üîó  https://axelar.network/demo-tutorial-callcontractwithtoken
undefined says üõ†Ô∏è  And to rewatch the live session, here's the link to yesteday's stream:https://www.youtube.com/watch?v=1cKbFAE1-uw
undefined says These new guides look very helpful! Thanks for writing them
undefined says Hey there! No rush, but do you have any updates on this?
undefined says Apologies Jeremy, thought your previous message meant it was sorted. Looking again now.
undefined says Hey @Jeremy | PureStake  I've traced down all the details for this transaction. Just discussing with the team - we'll get back to you as soon as we have a resolution. Thanks for your patience!
undefined says Hey @Jeremy | PureStake your transaction was not delivered to Fantom from the Axelar Network because it did not meet the minimum fee. If the total amount of a token sent to a deposit address is not greater than the gas relayer fee then those deposits will wait in the queue until a future deposit brings the total above the fee. Fees are calculated like so https://docs.axelar.dev/resources/testnet#cross-chain-relayer-gas-fee

In a coming upgrade we will be simplifying the fee payment - it will be paid to the gas service contract rather than collected at Axelar Network.
undefined says Thanks for the help! I'll be sure to make the change.
undefined says Is there a good comparison between Axelar, Wormhole, and Layer zero?
undefined says I only found this: https://twitter.com/gjuneja1/status/1508486838906155009?s=21&t=PN0M9FIdtOmp0Tm8lOxshg
undefined says Here are a couple of comparisons: 
- Messari comparison: https://twitter.com/MessariCrypto/status/1544334385595523074
- 0xPostman comparison: https://0xpostman.medium.com/part-2-cross-chain-security-models-compared-c4f91107cad4
- Layer Zero: https://twitter.com/sergey_nog/status/1511364631603863555 
- AnySwap: https://medium.com/@chomtana001/bridges-deep-technical-comparison-axelar-special-use-case-axelar-cbridge-zklink-anyswap-hop-e901f9c67946
undefined says I still can't get a single TX to execute. Even when I overpay for gas the TX just stays waiting for approval...
https://ropsten.etherscan.io/tx/0x3fb1ebfe76bb9d972c518a86ba5ea3016720805aa020ad63af2bcdc5672e14ad
undefined says I have no idea what could be wrong
undefined says Ok now I get a failed execution I guess but there's nothing anywhere that shows why it failed or a TX hash to check out in Tenderly...
undefined says the error on axelarscan https://testnet.axelarscan.io/gmp/0x3fb1ebfe76bb9d972c518a86ba5ea3016720805aa020ad63af2bcdc5672e14ad does suggest there may be an issue on the destination smart contract: 0x230dAB2C23d42b42251a0Be629e14b4b26Ff0d83. you can debug on tenderly but you have to verify it on mumbaiscan first. https://mumbai.polygonscan.com/address/0x230dAB2C23d42b42251a0Be629e14b4b26Ff0d83#code once you do that we can also help debug if you like.
undefined says You don't need tx hash to debug in tenderly. The only thing you need is a verified contract. üôÇ
undefined says hi, i want to ask, can axelar use single liquidity for multiple chains (single uniswap factory, router)?
undefined says Do you mean execute swaps from a single source chain? i.e. I have my pool of liquidity sitting on avalanche, then I execute swaps on moonbeam, ethereum etc?

Or are you talking about being a liquidity provider?
undefined says Hi, sorry to bother again. I have a question about using the Axelar SDK to monitor transactions. Here is the snippet from my code:
```javascript
        const sdk = new AxelarGMPRecoveryAPI({
            environment: Environment.TESTNET,
        });
        const txStatus = await sdk.queryTransactionStatus(txHash);
```
When I run it, it gives me a lot of relevant data that seems correct, but its status is shown as `status: 'destination_gateway_approved'`. In Axelarscan, it says that it was executed. And when I check on the chain, it certainly has been! I would expect the status to be `destination_executed` instead. Is this a bug, or am I interpreting it incorrectly?
undefined says hmmm if it were actually executed it should say executed. thansk for flagging. can u send me the txHash?
undefined says Sure thing! 0x2e96fe1574fb26d3768f9741824fd1a98750ae73bafc01c41a8d4ccbf78cd719
undefined says * note that the relayers are paused on the mainnet at the moment for an upgrade, expected to resume early next week. 
* the testnet relayers are operational, so you can continue the development there.
undefined says is it possible to send a message to approve ERC20/721 on another chain via the GMP? or any workaround there? for example, if I bid an NFT on ETH from the Avalanche network, and the NFT transferred to my wallet on ETH but now I want to sell it and trigger the sell action on Avalanche, how do I allow the NFT marketplace to transfer that NFT on my behalf on ETH? do I have to change the network, sign an approval tx, pay the gas fee on ETH before sell it?
undefined says - If the NFT is transferred to your wallet, then you have to send approve on ETH. This is because a smart contract can't send approval tx on your behalf.
- But if the NFT is transferred to the smart contract by having proper ownership logic, you can trigger to sell it on avalanche by adding approve logic before selling function..
undefined says yeah, that's what I thought as well, thanks for the clarification.
undefined says i think there is a bug. one of our downstream services changed its response signature. we should have this fixed by tomorrow. thx for raising it
undefined says :Axelarroket: @Axelar Builder This week‚Äôs Axelar Learn session is back tomorrow! 

Tune in for a live Block Explorer Walkthrough of axelarscan.io where core engineer @Milap and content lead @galen will showcase the different features that allow developers to query cross-chain activity on the Axelar network üõ†

üîó Here‚Äôs the direct link: https://youtu.be/gMZYjKtVkYA

üóì Date: Thursday, July 21st

‚è∞ Time: 7pm UTC, 1pm EST
undefined says How do batch requests work? I tried to transfer USDC to the fantom Testnet, but it's been waiting for a signature for a few hours.

https://testnet.axelarscan.io/transfer/0x8fb47908b1e765d887b267a09fc076fd21c31273d6bad9912621fc83708d78f1
undefined says Is there a faucet to get a hold of aUSDC on testnets?
undefined says It should be received now, testnet USDC on Fantom hadn't been fully deployed, so it was stuck, but it works now: https://testnet.ftmscan.com/token/0x75cc4fdf1ee3e781c1a3ee9151d5c6ce34cf5c61?a=0x0394c0edfcca370b20622721985b577850b0eb75
There's a known issue with the explorer regarding showing the batch signing status which should be fixed soon.
undefined says DM me your evm testnet address and I can send some
undefined says Hi, where can I get some aUSDC test tokens from?
undefined says DM Milap as mentioned above.
undefined says @Rok | Qubelabs Yup, saw that. waiting for him to add me as a friend so I can do so
undefined says DM me please. I will give you some test aUSDC
undefined says Please accept the friend request I sent so I can DM
undefined says @everyone we're updated the docs to make it simpler to navigate and get started building. check it out: https://docs.axelar.dev/dev/intro 

What would you like to see more of? 
* more simple cross-chain contracts  :AxelarX: 
* more explanations of how axelar works ü§ñ 
* more guides on how to use the gas / relayer and other services :Axelarrock: 
* sample end-to-end dapp tutorials  ‚ô•Ô∏è 

comment directly here for anything else.
undefined says When calling `_executeWithToken` are the tokens being sent to the contract or approved to the contract?
undefined says @Milap @Canh T I am unable to get response from ``sdk.getDepositAddress`` for testnet. Then, I checked ``testnet.satellite.money``. Looks like this section of getting Deposit Address is down.
undefined says Hello, I'm getting ‚¨áÔ∏è when setting up node with `setup-node.sh` or manual steps mentioned in docs, configs are downloaded from the below link, I check toml is valid but can't figure out what's causing issue, Can anyone help

```
Error: While parsing config: (17, 7): was expecting token [[, but got unclosed table array key instead
```

https://github.com/axelarnetwork/axelarate-community/blob/main/configuration/config.toml
undefined says üëá 
https://github.com/axelarnetwork/axelarate-community/pull/375/commits/58ca41b6a8be9ddd44d7d1984c033d9fe9b933c3
undefined says Looks like someone already made a PR for the fix
https://github.com/axelarnetwork/axelarate-community/pull/376/commits/069e2cf588614df1f7e8ecb93eddbc31a70d7825
undefined says Merged the fix PR above. Let us know if you still run into any issues
undefined says thanks, this should be fixed now
undefined says @everyone 

We will be performing some resilience testing on the lisbon testnet on Wednesday between noon and 5pm EST. During this time you may (hopefully not ü§û ) notice issues. They should be short lived and will recover on their own.
undefined says Question: When calling `_executeWithToken` and using WETH, is their a fee taken out of the WETH balance even if I pay for gas with a native token?
undefined says hello 

Tofnd is necessary to run for any testnet or mainnet validator without any bridges? if yes then why?
undefined says Hi, i try to call a simple function that returns an int on AVAX Fuji network from ETH Ropsten network by using your deployed Gateway Contract on Ropsten. I thought i provide the ABI from the Gateway Contract and execute the callContract() function from the gateway(Ropsten) but in the contract i cant find the function
Thats the ropsten contract. https://ropsten.etherscan.io/address/0xBC6fcce7c5487d43830a219CA6E7B83238B41e71#code
undefined says "Destination contract implements the IAxelarExecutable.sol interface to receive the message." does it mean i cant call e.g. the synthetix networks contract with axelar crosschain because they havent implemented the IAxelarExecutable.sol?
undefined says At least not directly which means if i implement a contract with IAxelarExecutable.sol interface on the destination chain i can call my "real" destination contract over my deployed contract on the dest. chain ? E.g. i call  from Ethereum(source chain) -> My contract on AVAX(with IAxelarExecutable interface) ->  GMX Contract on Avax -> open Long Chainlink
undefined says for now, yes. (to clarify, it's `callContractWithToken` that's called on a source chain, and the internal method `_executeWithToken` is called on the the destination chain). on the fees, we're changing it for callContractWithToken to only look at the gas paid
undefined says Ok. Thanks. Been trying to test on testnet but getting errors because I'm paying for gas in a native token and at the same time the token being sent has been reduced a bit on the receiving chain. My receiving contract actually just sends arbitrary calldata to an arbitrary address and things like token amounts are set ahead of time in the calldata so having it change after the fact causes issues.
undefined says So i think it's a proxy contract, you would not find the callContrat function declared on the proxy.
undefined says @chiko this is the real contract to which the proxy points to https://ropsten.etherscan.io/address/0x516Cd4fB31AFB81E5C93A9D23045407664efBD1e#code
undefined says All bonded validators running tofnd can participate in signing for evm chains. Axelar's gateway contract only accepts commands signed by validator's tofnd key; a validator not running tofnd will not participate in this and lose out on signing rewards. Validators maintaining a bridge to an EVM chain are needed specifically to vote on EVM chain events
undefined says Hi, is there a way to add new sdk chains programatically or though a pr on https://testnet.satellite.money/
undefined says My current understanding is any evm based token can be transferred across sdk chains using axelar gateway on axelar network
undefined says so any ibc enabled sdk chain can be listed on satelite if the channel path can be agreed upon
undefined says please correct me if I got it wrong, but this is my current understanding
undefined says by sdk chain, i assume you mean cosmos-based chains? if so, that process is a bit manual at the moment and our team onboards them by request. what chain are you looking to add?
undefined says Greetings, had a question.
Lets say I have my own chain, Can i use Axelar do multi chain transactions using my chain as a layer 2? Just like its with Ethereum. Paying in my chains native token?
undefined says Do you mean using "Axelar", rather than "wormhole"? For our General Message Passing (GMP) feature, users can pay for gas in the source chain's native token. See our gas receiver docs for more info. https://docs.axelar.dev/dev/gas-services/intro

Of course, your chain must first be connected to Axelar network to use our GMP features
undefined says Let me know if this answers the question
undefined says i have problems under windows with the "npm run build" command getting this error
: rm -rf artifacts && npx hardhat compile

The command "rm" ist wrongly spelled
or couldnt be found

node is installed
undefined says Hey, could you provide a link to the docs you're looking at?

Our scripts are probably built for mac and linux use, this could be a compatibility issue with windows
undefined says can you try running this in a bash CLI window
undefined says Is there any way with the SDK to check how much of an ERC20 token is going to appear on the receiving chain? E.g. I send 5 from Mainnet to Polygon. Is there a way to see how much USDC will be available to work with on Polygon after calling `callContractWithToken`?
undefined says We have a fee calculator tool https://docs.axelar.dev/resources/mainnet
undefined says Select the network you want, and the source chain, destination chain, token
undefined says Thanks but is there any way to do this with the SDK or an API call? I need to be able to calculate this at runtime.
undefined says ~~I dont believe we do~~

See Vlad's answer below
undefined says hmm
undefined says Not at this moment, axelar only supports major chains that you can find in the documentation section. We will expand that number for sure but probably not for custom chains.
undefined says the command "rm" is not a windows native command, windows uses "del" or "deltree" for recursive delete. This is probably why you're getting this error. Try using a windows command instead of the rm -rf https://github.com/axelarnetwork/axelar-local-dev/blob/main/package.json#L8
undefined says I'm talking about something similar to this https://twitter.com/moonbeamnetwork/status/1550858366439784450?s=21&t=niuXG0YaE5bFCPqd7tS68g
undefined says We DIRECTLY support moonbeam and osmosis chains so this connection is possible. We can only directly bridge chains that we support. https://docs.axelar.dev/resources/mainnet
undefined says for EVM chains here: https://docs.axelar.dev/dev/build/contract-addresses/mainnet
undefined says You can use this https://docs.axelar.dev/dev/axelarjs-sdk/axelar-query-api#gettransferfee  ```received_amount  = sent_amount - transfer_fee```
undefined says @vladwulf Are there any conditions which are required for a chain to be in that list?
undefined says We don't have conditions for entry, at the moment we onboard the chains on a discretionary basis. Basically, the priority is given to major chains because they need to have enough liquidity as we are setting up pools.
undefined says That's perfect. Thanks!
undefined says Are you sure that the response problem has been fixed? I tried again with this transaction hash and it still gives 'destination_gateway_approved'.

0xa390f095912d30f29d95b506d55160e73f28ae879d3f869bbfbca0147131ac53
undefined says :Axelarroket: @everyone @Axelar Builder It's that time again! This week's Axelar Learn session will go live tomorrow where core engineers @Canh T and Jackson will walk you through **Adding a Cross-Chain Deposit Address** ! 

üõ†Ô∏è  What does this let you do? The Axelar SDK generates one-time deposit addresses, so your dApp can accept transfers from any wallet -- just like centralized exchanges.

üîó Link to the live stream: https://www.youtube.com/watch?v=MbkCUUPXOrQ

üóìÔ∏è Date: Thursday, July 28th

‚è∞ Time: 5pm UTC, 1pm EST
undefined says :AxelarW: For anyone who wants to get caught up on previous Learn and Code sessions, you can check out our YouTube channel here: https://www.youtube.com/c/Axelarcore

And here's some more developer focused videos you may have missed: 

üõ†Ô∏è Cross chain general message passing tutorial - Deploying on testnet with Axelar: https://bit.ly/3cOBHEt

üõ†Ô∏è Setup local Axelar dev environment (1/3): https://bit.ly/3oCsKRk

üõ†Ô∏è Deploy and run Axelar examples locally (2/3): https://bit.ly/3Bk4Mll

üõ†Ô∏è Deploy and run examples in Axelar testnets (3/3): https://bit.ly/3zBDhCo
undefined says to confirm, when we fixed it we bumped the version. are you still seeing this issue on 0.6.18?
undefined says I updated the SDK and it worked. Thanks, I thought it was a remote issue
undefined says Token is being sent (or minted) to the contract.
undefined says üö® Going live in 30 minutes! üö®

üîó https://www.youtube.com/watch?v=MbkCUUPXOrQ

@Axelar Builder
undefined says I am a Product Designer, open to contribute to community.
Check my portfolio below

https://www.figma.com/proto/m8SibYYSPQxZkHZAcJeb8d/Razgulin?page-id=301%3A2&node-id=301%3A3&starting-point-node-id=301%3A3
undefined says Hi, is it possible to export all transactions for a specific source / destination address. For tax purposes to export all fees paid?
undefined says Hi @Vitalii , welcome to the community! Please connect with @Kate | Axelar for more details on ways to contribute. We're glad to have your support üôÇ
undefined says I'm not aware of such a tool. Is this for satellite token transfers? or for GMP cross-chain calls with a token?
undefined says satellite token transfers
undefined says Faucet bot for `aUSDC`: #üíß‚îÇfaucet
undefined says Pinned a message.
undefined says Thank you!
undefined says Hey, you can now export cross-chain transfer info to a CSV. Just navigate to the cross-chain transfer page, and filter your search. You'll see a button to export to csv.
E.g. https://axelarscan.io/transfers/search?sourceChain=ethereum
undefined says Awesome, this is what I wanted
undefined says is it possible to use your api for getting these transactions?
undefined says Not sure if an api has been added yet for this. @PJ can chime in
undefined says Yes, here's the available API route:
Endpoints:
```
- https://api.axelarscan.io/cross-chain/transfers
- https://testnet.api.axelarscan.io/cross-chain/transfers
```
Parameters: 
```  
  txHash: string
  sourceChain: string
  destinationChain: string
  asset: string (denom)
  depositAddress: address
  senderAddress: address
  recipientAddress: address
  fromTime: unixtime
  toTime: unixtime
```
Please note that there's a known issue with the explorer & API regarding tracking the batch signing status, which should be fixed soon. Also, we are working on the API docs. We'll update you here once it's ready.
undefined says Hey! Thanks for reaching out. Will share your portfolio internally üôÇ
undefined says Thank you @Kate | Axelar üôå
undefined says @everyone 

üá®üá¶ If you‚Äôre in or around Toronto, Canada, come join us for an in person developer event tomorrow night! 

Bring your laptop or just follow along as Axelar co-founder @sergey  and the core engineering team leads a hands on intro to Axelar workshop! 

üóì August 2, 2022

‚è∞ 6-9pm ET

üîó https://www.eventbrite.com/e/axl-hackstoronto-with-axelar-and-bitcoin-bay-tickets-387208720707?aff=Axelar
undefined says So do we build our protocol on Axelar or on the chain of our choice and add something from Alexia to our code?
undefined says Hey all ! Are `approve` and `sendToken` still valid contract methods ? If not, is there docs for alternative ?
undefined says Yep, they are. Are you running into any issues when calling them?
undefined says I'm calling `approve` on token contract, and then `sendToken` on gateway contract. But seems like test tokens are lost somewhere.
The reason I'm asking is I cant find recent `Send Token` methods on polygon mumbai gateway https://mumbai.polygonscan.com/address/0xbf62ef1486468a6bd26dd669c06db43ded5b849b
undefined says Can you provide the txs where you're calling `approve` and `sendToken`?
undefined says approve - https://mumbai.polygonscan.com/tx/0xadf37027a2d32f18928d583e64c418134d02268d1ae681ac205f6185e58764b5
sendToken - https://mumbai.polygonscan.com/tx/0xff64ccbad8921d5193eec4891a25130e4396719f303dbf07ab85818d849144f3
undefined says Can we use Axelar if we already built our dapp for BSC?
undefined says Or do we need to build the Dapp on Axelar?
undefined says yes, you can keep your app on any chain you like and interconnect it with other chains through Axelar. https://docs.axelar.dev/dev/hello-world
undefined says Thank you
undefined says @everyone we‚Äôre back for our weekly Axelar Learn session! 

üõ†Ô∏è Join the engineering team as they walk you through how to build a cross-chain dApp and offer a high level intro to Axelar‚Äôs local developer environment! 

üóìÔ∏è Today, Thursday August 4th 

‚è∞ 5pm UTC/ 1pm EST

üîó https://www.youtube.com/watch?v=e1a41UZdBZ0
undefined says Hi, just a question:
Is there a way to know whether the `_execute` function on the destination chain has failed after having called `gateway().callContract` function?
undefined says yes, wee the scanner & the API. 
https://testnet.axelarscan.io/gmp/search
https://docs.axelar.dev/dev/monitor-recover/monitoring
undefined says thanks
undefined says @everyone We wanted to let you know that Axelar network will be going through an upgrade in the near future.

- Timeline
    - Testnet release date: Between August 8 - August 12
    - Mainnet release date: mid August
- Changelog
    - https://bright-ambert-2bd.notion.site/Notable-changes-for-Axelar-v0-20-release-2736d19835e74437ab820895ae1f4b35

Upgrades typically take a few hours in a day, and we'll follow up once we have more visibility on dates and expected downtimes.
undefined says This is exactly what I'm looking for!
undefined says Hey team. Whilst integrating Axelar into ShapeShift I noticed that `https://axelar-lcd.quickapi.com` does not return `access-control-allow-origin` headers, which means we cannot directly use it, or the `getTransferFee` method in the `AxelarQueryAPI` SDK.

The test API, `https://axelartest-lcd.quickapi.com` does have a correct CORS configuration though.

I've set up a proxy API endpoint in the short-term, though is this something we can address?
undefined says you can override the LCD endpoint used. that quickapi one is used by default unless another is passed in. 

the full list of supported LCD endpoints is here: https://docs.axelar.dev/resources

and the code sample is this:

const queryConfig: AxelarQueryAPIConfig = {
  environment: Environment.MAINNET,
  axelarLcdUrl: "https://axelar-lcd.qubelabs.io"
}
const queryService = new AxelarQueryAPI(queryConfig);
undefined says Thanks @Canh T , I was not aware that the SDK URL could be overridden, that's useful. That said, unfortunately none of those 5 LCD URLs listed have CORS support.
undefined says can you try the quickAPI LCD url again? just asked the team to adjust those. there will be rate limits on those though, so we'll have in our docs options for paid API endpoints in the future
undefined says Hey team, when I am transferring tokens via the `sendTokens` function does it automatically wraps say the MATICs in my wallet into wMATICs and sends them or I need to have pre-existing wMATICs in my wallet for the function to suceed?
undefined says Hey, no you will need to convert into wrapped tokens. https://docs.axelar.dev/resources/wrapped-tokens
undefined says thanks
undefined says @Canh T confirming the API now responds with the correct headers. Thank you!
undefined says Noting though that I couldn't use the APK, I had to hit the endpoint directly. The headers in the SDKs `RestService.ts` might need to be updated, too.
undefined says is there a reason why:
```
const Sender = await ethers.getContractFactory('SendAckSender', network.userWallets[0])
            const sender = await Sender.deploy(
                network.gateway.address,
                network.gasReceiver.address,
                network.name
            )
            await sender.deployed()
```
will give me `underpriced transaction` error (`network` here is the first parameter of the `callback` function on `createAndExport`)
undefined says ?
undefined says Never mind I managed to solve the issue, thanks anyways
undefined says Has Axelar implemented rate limiting?
undefined says is there a good way to run a local axelar chain for testing purposes? the only local testing resources i could find mock the axelar network with a `relay()` func
undefined says Hey! You want to use createAndExport function (that creates the networks and relays transactions automatically) from https://github.com/axelarnetwork/axelar-local-dev . We recommend using the axelar-local-dev to simulate what is happening at Axelar. We recently released this tutorial video on the subject https://youtu.be/e1a41UZdBZ0
undefined says hello! thanks for the details. i was hoping to actually deploy a local axelar network validator (for a local testnet) to more accurately represent the interactions involving the network rather than simulating the network with js
undefined says We have rate limiting enabled for our SDK to generate a deposit address
undefined says https://github.com/axelarnetwork/axelar-cgp-solidity/blob/3b4560a9c9b55f7cb0976a98f8cdb895b4f46f8c/contracts/AxelarGateway.sol#L162
undefined says Does that help ? https://docs.axelar.dev/validator/setup/config
undefined says Out of curiosity, can you share with us how this has been solved?
undefined says Started a thread.
undefined says Sure,I have stumbled around this underpriced transactions more than once and for very different reasons.
My error in this case was that I wasn't approving a nft transfer before actually transferring it.
On another occasion the error was due to the fact that I forgot an `await` in front of `network.giveToken`
undefined says Thank you. Glad you're solved it!
undefined says Hello
undefined says Does Axelar support bridge between solana and secret?
undefined says Not directly. We only support certain EVM and Cosmos chains as of now. You can see the list of IBC channels/EVM chains we support here https://docs.axelar.dev/resources/mainnet
undefined says is there any axelar developer at the hackerdome at ethToronto?
undefined says we have a table at the hackathon a few of our folks are there. go find us!
undefined says Solved thanks
undefined says @everyone  Hey folks, we will be performing an upgrade on the **Axelar Testnet** on **Thursday, August 11 at around 11AM ET**. The upgrade is expected to last **6 to 8 hours** with our relayer services being upgraded shortly after.

See the Changelog here:
- https://bright-ambert-2bd.notion.site/Notable-changes-for-Axelar-v0-20-release-2736d19835e74437ab820895ae1f4b35
undefined says hey
in function gasReceiver.payNativeGasForContractCallWithToken
i need send gas as a value
how can I know how much is gas?
undefined says running a local axelar chain.. trying to get it to relay between two evms i hace deployed gateways to. how does vald know where the gateways are deployed? i have registered the evm rpc's in my config.toml but i'm not sure how axelar discovers the gateways to watch for txs
undefined says You can use our SDK method to calculate the amount. Please read here
https://docs.axelar.dev/dev/gas-services/pay-gas#overview
undefined says how should gateway & gas receiver contracts be deployed to evms? what account(s) need to deploy them and how does axelard/vald/tofnd discover them?
i am trying to set up a local testing env that includes an axelar chain as the relayer. vald can query the evms but i'm not sure how to initially setup the networks for relaying
undefined says if you're trying to build a cross-chain dapp, then our local dev environment is better for this: https://docs.axelar.dev/dev/hello-world
the local dev environment simulates the axelar network. 
https://github.com/axelarnetwork/axelar-local-dev
undefined says is there a reason you want to spin up a full network?
undefined says i'm attempting to integrate with an EVM that has extended functionality and integration with a different network. we're looking to build an environment representative of how it would be in prod once integrated with axelar.
how do i register the gateway contracts with the validator so it can start watching & relaying txs across chain?
undefined says please correct me if i'm wrong, but my understanding is that to use the local dev env with an existing evm, we'd need to either manually call the `relay()` func from `@axelar-network/axelar-local-dev` after any cross-chain interaction, or build some sort of proxy sits in front of the networks and handles calling the relay.

it feels more representative of the full system to just have a local axelar network perform the relays for us.

i have everything setup, but i'm struggling to understand how the gateways get deployed in a way that our `vald` process has knowledge of them and permissions to interact with them.
undefined says axelar network doesn't do relayer on its own, relaying is permisionless and anyone can do it on top of the network [between it and EVM chains]. we run some services for it now, but they're not portable and would take some time to setup externally. configuring your setup with the local dev environment and simulating the relay manually is prob the best way to test. what's the name of your project? dm might be easier + @james_friel | Axelar
undefined says you are in my company slack üòÜ moving the conversation there, thank you!
undefined says really I have no idea what I should do
I am python developer and I never tried coding js or ts
I just need to get estimatefee to send tx on chain
I don't have enough time to learn js
undefined says to find the right amount of gas to pay to the gas receiver to have your tx automatically executed on the destination chain? if you don't want to use the javascript SDK, you can query our caching services directly via post call. here are those docs if you want to go that route: https://docs.axelarscan.io/general-message-passing/getGasPrice
undefined says ‚ö†Ô∏è  for anyone using our JS SDK:
* published `0.7.1`: https://www.npmjs.com/package/@axelar-network/axelarjs-sdk/v/0.7.1. 
* version 0.7.1 will work with the current version of mainnet (core v0.20.0). [SDK 0.8.0 will be created for current version of testnet that has core v0.22.0]
* includes several improvements. full changelog: https://github.com/axelarnetwork/axelarjs-sdk/blob/main/CHANGELOG.md#071---2022-august-12
* you are not required to upgrade, and your current version will continue to work. but if you do the changelog includes some method implementations that have changed.
* any issues/suggestions, pls file a github issue or create a PR!
undefined says Hey @Axelar Builder , testnet and our relayer services have been successfully upgraded. Cross-chain message passing and transfers are operational.

Notable changes for app developers:
- `callContractWithToken` doesn't deduct fee from the token being transferred anymore. Fee is charged upfront by the gas receiver.
- `sendToken` now works with recipient addresses on cosmos chains.

Full changelog: https://bright-ambert-2bd.notion.site/Notable-changes-for-Axelar-v0-20-release-2736d19835e74437ab820895ae1f4b35
undefined says thanks a lot
at last, should I approve the call?
how?
undefined says what is commandid?????
undefined says What is Forecall?
undefined says 
undefined says just wondering is it possible to initialise the `IAxelarGateway` in a function rather constructor in the abstract contract of `IAxelarExecutable`?
undefined says It's a method that can be called at the destination contract by the Forecaller (execute before approving). https://github.com/axelarnetwork/axelar-cgp-solidity/blob/main/contracts/interfaces/IAxelarForecallable.sol#L20
undefined says Hello, I have a problem with CORS for Axelar.JS AxelarQueryAPI({ environment: AxelarEnvironment.MAINNET }). When I am using address localhost:3000
undefined says @everyone 

:Cross1: With Axelar, you can send any payload cross-chain. 

:Rocket: This opens up brand new, exciting opportunities in cross-chain NFTs and gives devs the opportunity to build universal wallets, exchanges, and more. Catch our latest Axelar Code session where we show you how with a simple example dApp in a live walkthrough and AMA!

üîó  https://www.youtube.com/watch?v=IHCb_pcc1Js
undefined says When you pay for gas and send a command from a gateway on the source chain it gets picked up by the Axelar network. Then after being confirmed by the Axelar validators and signed by their keys the command is delivered to the gateway on the destination chain and gets approved by the gateway to be executed. This also emits an event from the gateway: `ContractCallApproved` or `ContractCallApprovedWithMint`
```
    event ContractCallApproved(
        bytes32 indexed commandId,
        string sourceChain,
        string sourceAddress,
        address indexed contractAddress,
        bytes32 indexed payloadHash,
        bytes32 sourceTxHash,
        uint256 sourceEventIndex
    );
```
After this our cross-chain gas service will pick the event and will call the `contractAddress.execute(...)` with corresponding parameters. That `contractAddress` should implement `AxelarExecutable`  for seamless command validation with the gateway. 

You can read more here
https://docs.axelar.dev/dev/gmp-overview

We recommend to start your contract developer journey by using the local cross-chain dev environment
https://github.com/axelarnetwork/axelar-local-dev
and checking out working examples here
https://github.com/axelarnetwork/axelar-local-gmp-examples
undefined says any thoughts on this? the current implementation cannot be used in upgradeable contracts, it would be great to have it supported
undefined says Hey there! You can find the upgradable version of `AxelarExecutable` in this repository 
https://github.com/axelarnetwork/axelar-utils-solidity
undefined says Hello, someone from team can help me ?
undefined says Can check in a bit. However can you try swapping out the LCD endpoints you use in the config? The full list is here: https://docs.axelar.dev/resources

It defaults to quick api if one isn‚Äôt manually passed in. I mentioned to quikcapi to relax the cors restrictions but will follow up on that
undefined says Just sent you request
undefined says @everyone

We‚Äôve teamed up with Moonbeam and Arrington Capital to offer 55,000$ in USDC in prizes at Moonbeams Connected Contracts hackathon! It will run for a month, with the chance to continue building even after the hackathon ends! 

üîó Register and learn more here: https://moonbeam.devpost.com/
undefined says Hi Kiryl, thanks for the response, looks like the new version of `https://github.com/axelarnetwork/axelar-utils-solidity/blob/main/contracts/executables/AxelarExecutable.sol` is the one that I could use, but I cannot find the latest version of `axelar-utils-solidity` in the npmjs, I'd appreciate it if any of you could publish it into the `@axelar-network` org, thanks
undefined says so I've been discussing with a friend about potential PoS attacks on  Axelar and want to clarify if my understanding is correct.

Friend said if the Axelar blockchain gets compromised, the assets are stolen. If you own 66% of AXL , you can steal assets. 

I said that Axelar is a network with gateways set up on various chains, that communicate through the axelar protocol -- rather than a chain in itself. 
And axelar is the protocol and Satellite is the asset bridge built on top of the GMP. I guess to attack the underlying protocol, it's not just AXL ownership but the number of validators that need to agree on a given state through signing with key shares.

Friend said TSS is there to sign on ethereum chain for an axelar state, and Axelar state is still PoS. So if you run 66% of axelar stake you can sign transactions on eth.

But is there really an "axelar state?"
undefined says hi everyone, Have you know about state of GMP (General Message Passing) for the Cosmos (non-EVM)?
undefined says Hi! For now GMP is only available on EVM chains. We have plans making it available on the Cosmos based chains but no date yet.
undefined says anyone able to help me understand this? To what extent is a PoS attack possible with axelar?
undefined says Hey, the threshold needed for PoS on Axelar network, and the one needed to authorize commands in the gateway contracts are different. While PoS requires `66%+` by stake, our contracts actually use the square root of the validator's stake divided by the sum of sqrts of validator's stake (known as quadratic voting). The implication of this is that a lot more validators are needed to access the gateway even if the Axelar network PoS becomes centralized for some reason. Happy to go into more specifics if you want.
undefined says thank you! this is very helpful. So basically even if there's a PoS attack in the network itself, the contract approvals/consensus require a lot more validators? Is this documented somewhere btw?
undefined says Exactly. In most cosmos chains, usually top 15-20 validators have 66%+ stake. Whereas for us, we'll need at least ~40 validators to authorize, and more as we increase the validator set over time. This is a newly added security improvement, so still working on the docs.
undefined says 40 validators to authorize a cross-chain message?
undefined says Yeah, approximately that much is the minimum required, exact number will fluctuate around that. Usually, 60-70 validators will authorize it in total.
undefined says this makes sense! last question -- does increasing the number of validators required for approval result in more latency?
undefined says Hey @Axelar Builder `Testnet-1` (lisbon-3) will be upgraded to `v0.23.0` in about an hour.
Cross chain services are expected to be down for about an `1-2 hrs`.
undefined says Hi Axelar Team. What would you recommend for querying a transaction status in a frontend? The Axelar SDK? Using RPC calls? Or something else?
undefined says Hi! If you want to query a GMP transaction status you can use the following interface https://docs.axelar.dev/dev/axelarjs-sdk/tx-status-query-recovery
undefined says If it's related to a transfer you can use ```
- https://api.axelarscan.io
- https://testnet.api.axelarscan.io

- https://axelarscan.io/transfer/{txHash}
- https://testnet.axelarscan.io/transfer/{txHash}
address
- https://axelarscan.io/transfers/search?senderAddress={address}
- https://axelarscan.io/transfers/search?recipientAddress={address}
```
undefined says Yeah, it'll increase the block production times if we increase the set by a lot due to the additional p2p communication cost. There are a bunch of core optimizations we can look into to go quite further though.
undefined says @Axelar Builder  Testnet-1 has been upgraded and cross chain services are back up
undefined says We have published the package 2 days ago, but it seems not to appear on NPM site. We will release a version update to fix it. Should be updated tomorrow
undefined says Check out this example dApp built by our friends at Moonbeam. You'll get a behind the scenes look at how Axelar enables developers to build cross-chain connected apps on Moonbeam that can tap into the functionality of multiple blockchain ecosystems. üöÄ 

https://moonbeam.network/blog/axelars-sdk-connected-contracts/
undefined says üö® ICYMI: Moonbeam‚Äôs Connected Contracts Hackathon is now open to submissions! üö® 

Participants can build apps that further the cross-chain ecosystem to compete for bounty prizes. Learn how to get involved at the link below: 

https://moonbeam.devpost.com/
undefined says Hi Axlear team, I was wondering if you could send multiple cross-chain transactions in a single origin chain transaction. I tried myself, but it ended up having some very odd results
undefined says Previously, executing destination contracts on multiple destination chains (from one message called on a source chain) was not supported. I've updated the service to support it. Now, all those transfers worked. 

https://testnet.axelarscan.io/gmp/0x25f0bdcdec0da17e1039161342603d3d537cb6ddc6637d1b22dbdf1ebf9706ed:1 https://testnet.axelarscan.io/gmp/0x25f0bdcdec0da17e1039161342603d3d537cb6ddc6637d1b22dbdf1ebf9706ed:3 https://testnet.axelarscan.io/gmp/0xc07ddffd6b5793bd0aca45af1667a8657de72f3a88ec7797635970d2fb6a4781:1 https://testnet.axelarscan.io/gmp/0xc07ddffd6b5793bd0aca45af1667a8657de72f3a88ec7797635970d2fb6a4781:3 

Thanks for reporting. üôÇ
undefined says It's same problem. +  Your ignore params https://github.com/axelarnetwork/axelarjs-sdk/blob/831eeb26968f0acaad5e9c5dc1a07c92e8035d38/src/libs/AxelarQueryAPI.ts#L84
undefined says Ah, yes thanks for the catch. Will make the fix on that within a day or so and upload a new version
undefined says Hello there!

I am currently trying to develop a protocol to solve the interoperability problem between blockchains.

To give you a quick overview, I am thinking of developing a communication protocol that allows a smart contract of ChainA to retrieve data from a smart contract of ChainB.
We would also like to develop a mechanism that does not generate a transaction when acquiring the data in order to reduce the cost of acquiring the data.
However, we believe that there are significant technical challenges to achieving this, so we would like to contact you to discuss the idea and the technical details.

The details of the idea can be found at the following link
https://first-twine-2d1.notion.site/Lite-Paper-EN-8d9ebceff91b4196947110fbf21ae3b5

If you have time, would it be possible for us to speak with you once?
Or if anyone is familiar with that area, I'd like to know.
undefined says @Axelar Builder If you missed our announcement last week, we're hosting a month-long hackathon with Moonbeam and Arrington Capital!

:Cross1: Our bounty is to **BUILD A CROSS-CHAIN MOONBEAM DAPP USING AXELAR NETWORK** :Cross1: 

Here's some more info: 

üõ†Ô∏è  *Submission Requirements*: The project must use Axelar GMP and it must play a non-trivial role in the DApp.

:Axelarstrong: *Prize Tiers- paid in USDC*

1st place - $9,500
2nd place - $5,000
3rd place - $2,500

‚öôÔ∏è  Link to the online hackathon and the full description of our bounty: https://moonbeam.devpost.com/details/category-details

:Shakehands: Support for anyone hacking on Axelar's bounty is available here on this channel or on Moonbeams server here: https://discord.gg/moonbeam

Good luck!
undefined says Started a thread.
undefined says Hey- if you‚Äôre looking to use Axelar as your cross-chain solution your best bet is to apply to our grants program- we‚Äôll have the team evaluate your project and go from there! 

üîó https://docs.google.com/forms/d/1ze3bin7LV8ltihPuGjNoC8_tmtcUi1WwErTmIHE3_rE/edit?ts=623b6874
undefined says Hi there, I'm getting a "cannot sign command" when testing ropsten -> mumbai general message passing. Does this mean the tx failed? I have a live demo in about an hour I was trying to get a tx through.

https://testnet.axelarscan.io/gmp/0x6df24c37aac350a74d378841ccec4e1ec17480a8d21f246bb982763dbf9c31ab
undefined says disregard, went through üòÑ
undefined says ropsten requires a lot of block confirmations now leading to the merge. so slower than other networks. glad it works.
undefined says Hey @Axelar Builder  `Testnet-1` (lisbon-3) will be upgraded to `v0.24.0` at ~`10 am ET` today.
Cross chain services are expected to be down for about an an hr during that.
undefined says hello! i'd like to know if it's possible to send more than one message to the relay/gateway on the same tx on origin chain
in that case, should pay the gas receiver each time i send a message?
undefined says Just to confirm, There isn't anyway to change broadcaster key?
undefined says Just to understand this, you're proposing to sort of cache the data on the origin chain without sending transactions to the destination chain, and hence the transactions at the origin chain can be settled more efficiently?
undefined says Yes. You can send multiple messages in a single origin chain transaction. You have to pay gas for each message separately. 

Here's an example:
- https://moonbase.moonscan.io/tx/0x25f0bdcdec0da17e1039161342603d3d537cb6ddc6637d1b22dbdf1ebf9706ed
- https://testnet.axelarscan.io/gmp/0x25f0bdcdec0da17e1039161342603d3d537cb6ddc6637d1b22dbdf1ebf9706ed:1
- https://testnet.axelarscan.io/gmp/0x25f0bdcdec0da17e1039161342603d3d537cb6ddc6637d1b22dbdf1ebf9706ed:3
undefined says According to the Axelar docs, there are two ways of sending tokens:
1) Call *sendToken* on an Axelar gateway EVM contract. This method is used when dApp transfers EVM-to-X where X is one of EVM, Cosmos

2) Get a deposit address using the AxelarJS SDK.
This method is used when the functionality required is not offered by sendToken. Example: Cosmos-to-X.

**Deposit address workflow:**
Generate a deposit address on a specific source chain.
User sends tokens to the deposit address on the source chain. 
Axelar relayers observe the deposit transaction on the source chain and complete it on the destination chain.
Watch your tokens arrive on the destination chain.

What method is used when sending tokens from one Cosmos chain to another Cosmos chain? Second method or are tokens sent directly through IBC?
undefined says awesome, thank you a lot
undefined says hi folks. question for y'all. working on getting an axelar validator up and running. i'm currently provisioning rpc nodes for external chains ethereum and avalanche. any of y'all got a ball park estimate on how many requests / second `vald` makes to these rpc nodes?
undefined says depends on the usage of the network. i'd provision for ~100/s at most to start.
undefined says Cosmos to Cosmos is directly through IBC, but we do generate a routing deposit address on the network.
undefined says okie doke. thanks boss
undefined says Is GMP(General messaging protocol) for Cosmos chains still under development? What will the primary use case for GMP for Cosmos chains given that IBC is already enabled?
undefined says For now GMP is only available on EVM chains. We have plans making it available on the Cosmos based chains but no date yet.
undefined says in #4 of this section of the whitepaper, how is tx_S posted to Axelar? to my understanding, validators are running light nodes, so they have no visibility into the actual txns themselves, but relayers only are used to move signed messages to destination chain
undefined says Axelar validators run an RPC full node for each EVM chain that they maintain. Light client is applicable for IBC connections to other Cosmos chains.
Anyone can initiate confirmation of tx_S on the network. Axelar runs microservices to auto-initiate confirmations of deposit txs for convenience. Then each validator maintaining that EVM chain queries the tx and verifies validity. If majority validators consider it valid, then Axelar authorizes the transfer to the destination.
Example cross chain transfer flow:
https://axelarscan.io/transfer/0xaf7adbbf0eebc5e9b6114e71df79d2366ce70638c0201afd3dff0bd907ad3930
undefined says hello, axelar-local-gmp-examples fails on compile (i see it's because contracts on utils and cgp has been updated) is there any other repo with examples?
undefined says in addition to this, how can i init a contract (like NFT Linker example does) now that i need to pass the gateway in the constructor? different arguments for the same contract will give me different contract addresses if i use create2
undefined says Hi, I just wanted to know if Axelar is currently working on implementing a custom authentication module for Interchain Accounts?
undefined says the team is checking.
undefined says we might need to do something there, but design is still in the air a bit. happy to chat.
undefined says A few design changes are being worked on with respect to the APIs. Would be ideal to clarify this in a call. Do you mind booking a slot here? https://calendly.com/susannah-ibc/45
undefined says And for some context: https://github.com/cosmos/ibc-go/issues/2026
undefined says hi folks, it's me again. adding monitoring and alerting to our validator. currently we have alerts based on time since last block sync + time since last block sign. we'd like to add an alert for external network participation. is there an api endpoint i can call to get heartbeat events? axelarscan does this but it seems to use a customer indexer: https://github.com/CoinHippo-Labs/axelarscan-api/blob/ba53881caa4182a0039caaa758332578a2697360/functions/api/services/heartbeats.js
undefined says hi Santi, here's the api endpoint developed by Axelar team: https://docs.axelarscan.io/heartbeats
undefined says okie doke cool. will give that a shot
undefined says thanks!
undefined says hey guys i have a question
undefined says is it possible to call an existing contract on ETH that hasn't been "integrated" with axelar? or does the contract I'm trying to call on ETH have to be configured with axelar to call it from another chain
undefined says you can build an intermediary contract that receives a message and calls any of the existing contracts on Ethereum. same for sending. so the short answer is yes, but you can code send/receive message logic around them.
undefined says so it would just be like a middleware that exposes a function which then calls the actual contract we are trying to reach
undefined says yes
undefined says & inheriting AxelarExecutable allows for this cross-chain messaging right
undefined says ye
undefined says absolutely beautfiul
undefined says nice work guys such an awesome product
undefined says Hello Engineers, I need help.
However, in the documentation, to execute the depositAddress function from the  EVM to Cosmos (Avalanche to Osmosis) like sample code below with asset name uausdc.
`const sdk = new AxelarAssetTransfer({
  environment: "testnet",
  auth: "local",
});
const depositAddress = await sdk.getDepositAddress(
  "avalanche", // source chain
  "osmosis", // destination chain
  "osmo1x3z2vepjd7fhe30epncxjrk0lehq7xdqe8ltsn", // destination address
  "uausdc" // asset to transfer in atomic denom units
);`
But in my case, I want to execute the depositAddress function from the  EVM to Sei (Ethereum to Sei) like the sample code below and the asset is aUSDC: 
`const sendToken = async () => {
    try {
      const depositAddress = await sdk.getDepositAddress(
        "ethereum", // source chain
        "sei", // destination chain
        "sei17d0vc0a3fna98d9xtcekghf2n5sfys953e9rah",
        "ausdc"
      );
      console.log(depositAddress);
    } catch (error) {
      console.log(error)
    }   
  };`
undefined says In the bid of trying to resolve the problem, I figured that if I changed the asset aUSDC to uausdc like the sample code below, and I executed the function, the transaction was successful https://ropsten.etherscan.io/tx/0xe29c52f691929a07c465ec16dabfa80a2134ef086e907c73226b1b3c36604c70
`const sendToken = async () => {
    try {
      const depositAddress = await sdk.getDepositAddress(
        "ethereum", // source chain
        "sei", // destination chain
        "sei17d0vc0a3fna98d9xtcekghf2n5sfys953e9rah",
        "uausdc"
      );
      console.log(depositAddress);
    } catch (error) {
      console.log(error)
    }   
  };`

I would like to know what exactly I was doing wrong.
undefined says Sorry for replying late
Does "cache" you say mean that in advance data is provided like Chainlink data feed?
undefined says Asset name corresponds to the denom name on the Axelar network for that token. `aUSDC` is the ERC-20 symbol name, but the asset name is `uausdc`. You can query this info on the network by visiting:
https://axelartest-lcd.quickapi.com/axelar/evm/v1beta1/erc20_tokens/ethereum
We'll extend the SDK to allow passing symbol too in the future
undefined says Started a thread.
undefined says something like that. i'm not sure i fully understand the proposal. happy to connect.
undefined says Is there any news on the GMP for cosmos networks?
undefined says still in the works
undefined says Which part do you not understand?
undefined says Where can we find contracts that are implementing IAxelarExecutable? Are there any deployed on any chain?
undefined says you can see the destination addresses from testnet contracts here: https://testnet.axelarscan.io/gmp/search
undefined says and examples here: https://github.com/axelarnetwork/axelar-local-gmp-examples
undefined says ah did not look at testnet thank you. So no protocol has implemented message passing yet on mainnet to your knowledge?
undefined says any plans to add authz to axelar chain?
undefined says We have implemented those features already and it requires a tx to update the data on-chain either retrieve then update (passive mode) or update then retrieve (active mode)
undefined says @Axelar Builder 

The Axelar network will go through a scheduled mainnet upgrade, starting ~1200 UTC, Monday August 29. The upgrade is expected to take ~6-7 hours to complete. During this period,¬†http://satellite.money and network services will be down.
undefined says It is on our backlog for a future release
undefined says tyty
undefined says Hey guys goodday,
Sorry to bother, 
Hey guys, good day.
So I have been experimenting with cross chain transfers and I am using axelar but for some weird reason I can't seem to find the sendToken function in the ABI of Rinkeby, serving as ethereum gateway

Please any help to clear this confusion would be appreciated.
Also I am kinda new to this please forgive mistakes
undefined says We are using Ropsten for testnet: https://docs.axelar.dev/dev/build/contract-addresses/testnet
undefined says I ran into an error
undefined says Thanks
undefined says I still tried it, it did not work.
I am using the sendToken method
undefined says You need to do ERC20 approve for the gateway for the token being transferred first
undefined says Yea, I did that. 
The problem is that the gateway contract in this case ropesten says 

Contractinstance.sendToken(args) 

Is not a function
undefined says Which contract ABI are you using?
undefined says I am using two, 
One for ausdc on ETH (in this case ropesten to call the approve function ) and the other ropesten itself I think where it inherited the IAxelarGateway.sol.

Just that I can't find the external function sendToken on the IAxelarGateway implemented or the ABI
undefined says All the dependencies issues were fixed. Please pull the latest code
https://github.com/axelarnetwork/axelar-local-gmp-examples
undefined says Issues with dependencies should be fixed now
https://github.com/axelarnetwork/axelar-local-gmp-examples
undefined says Seems like you are using an outdated version of `IAxelarGateway` please import the latest from `@axelar-network/axelar-gmp-sdk-solidity`
undefined says Hi Axelar Team, how do I use the Axelar SDK to query the state of a GMP transaction on the destination chain? More specifically, I want to know the transaction hash of the execution on the *destination* chain.

I've been using the AxelarGMPRecoveryAPI:
```
await sdk.queryTransactionStatus(originState.transaction?.hash;
```
And while it gives me destination_executed as the `status`, the `callTx`  only provides transaction information on the origin chain.
undefined says I'm using version 0.8.0 of the Axelar SDK
undefined says Alright thank you
undefined says noted. will try to add
undefined says @Axelar Builder here's some new builder updates for you:

The Axelar Buildathon with Flipside Crypto is live! 
üõ†Ô∏è Compete in 1 of 3 categories: 
- NFTs and Gaming
- DeFi
- Wallets and Bridges 
for a chance to win a **grand prize of 35,000$!**
üîó https://flipsidecrypto.xyz/buildathon

Bug Bounty Update:
ü™≤ We've increased our bounty program with Immunefi to $2,250,000 üîó https://immunefi.com/bounty/axelarnetwork/

Connected Contracts Hackathon Update: 
üåë In case you missed it, here's our session on **How to Get Started with Axelar & Build Cross-Chain DApps** from last week
üîó https://www.youtube.com/watch?v=D6wS54rLdsQ
undefined says I get this error on the 2nd step of token transfer via deposit addr
undefined says Sorry it's a bit unclear, are you running ```new AxelarAssetTransfer({})```  directly in your terminal?
undefined says I ran ``npm i @axelar-network/axelarjs-sdk``
undefined says in terminal first
undefined says and then tired to run ```const sdk = new AxelarAssetTransfer({
  environment: "mainnet",
  auth: "local",
});```
undefined says in terminal directly
undefined says Oh yes, it's javascript. You need to run it in node.
undefined says oh
undefined says In your terminal enter node
undefined says and then run the code üôÇ
undefined says (ctrl + c to exit)
undefined says Tell us if that worked!
undefined says got it trying right now
undefined says getting this
undefined says you need to enter node REPL. So first write ```node``` and then press return
undefined says thanks trying it right now
undefined says You should have something like that
undefined says yes I have that
undefined says https://docs.axelar.dev/dev/axelarjs-sdk/token-transfer-dep-addr trying to follow this
undefined says sorry for asking this, but can you guide me to what to do next?
undefined says 
undefined says 
undefined says what should I do?
undefined says It might be easier to work with if you set up a package first, and add the code there. Take a look at this tutorial: 
https://www.youtube.com/watch?v=MbkCUUPXOrQ
undefined says thank you
undefined says hmm this seems a little hard. I would like to do it this way https://docs.axelar.dev/dev/axelarjs-sdk/token-transfer-dep-addr
undefined says but I get this error
undefined says How to get past this?
undefined says you need to import the `AxelarAssetTransfer` first
```
const  {AxelarAssetTransfer} = require("@axelar-network/axelarjs-sdk")
```
undefined says I would love to hear your reason to run it in node repl because it is much easier to manage by creating a javascript file and run.
undefined says quick example (you can use any text editor, put the code like the video, then save to file `index.js`)
undefined says Hello, everyone!
I'm pleased to announce that the Axelar Code Sandbox is now available.
Axelar makes it even easier to create cross-chain applications!
Here's a link to it: https://axelar-sandbox.vercel.app

You can run and test our General Message Passing examples in a simulated or testnet environment.

If you want to start developing a dapp from scratch, select the "get-started" example.

It's still an alpha version, so things will change quickly, but it's great to get some ideas and feedback from the community as soon as possible.

Finally, if you have any questions or suggestions, please let me know üôè
undefined says üö® Attention bug bounty hunters! üö®

Axelar is increasing our bounty from $1M to $2.25M. Help strengthen the security of Axelar network by visiting the link below.

Happy hunting! ü™≤üïµÔ∏è

https://immunefi.com/bounty/axelarnetwork/
undefined says Wanted to try it out that way lol. Thanks for the video!
undefined says @Axelar Builder 

fyi:

We updated the required gas fees to be paid to our Gas Services in order for GMP transactions to flow through our automated relayers.

The estimateGasFee function in our JS SDK now incorporates these base fees. Please bump your SDK version to 0.9.2. https://www.npmjs.com/package/@axelar-network/axelarjs-sdk/v/0.9.2

Note: we are separately working to update our gas service contracts and will roll those out soon. If you are using the addGas/addNativeGas methods on the SDK, this will require a minor version bump as well. Will follow up when this happens.
undefined says if you're seeing `insufficient gas' error message, you should upgrade your sdk ‚è´
undefined says 
undefined says Hey guys, good day. 
Sorry to bother but with cross chain transfers with a dapp, how do I get the ABI for sendToken function please and which contract address cause I am a bit confused
undefined says you can find the gateway addresses here: https://docs.axelar.dev/dev/build/contract-addresses/mainnet
undefined says + see sendToken  https://etherscan.io/address/0x4F4495243837681061C4743b74B3eEdf548D56A5#writeProxyContract
undefined says @undefined and then if you want the ABI, from the page in Sergey's link, look for the text `ABI for the implementation contract at 0x212207006e5ae344481fa34a6f4960eb0f302ff5, likely using a custom proxy implementation.` and click on that link. the ABI would be like halfway down in a field you can just copy/paste
undefined says Thank a lot guys, I am really really grateful
undefined says hello I'm just getting started trying to figure out how to do IBC transfers using Axelar in TS. Is it the same as doing IBC transfers from other chains or do I need to call the getDepositAddress method then do an IBC transfer like this
```
const IBCmsg = tx.ibcTransfer.msgTransfer({
    source_port: "",
    source_channel: "",
    token: { denom: "" , amount: },
    sender:,
    receiver:,
    timeout_height: ,
    timeout_timestamp:
            ,
```
 or do I call the sendtoken() ?
undefined says I haven't been able to find any documentation on IBC transfers if you could point me in the right direction I would appreciate it
undefined says looks like you're trying to do this in javascript? if so, you can try using the cosmjs library, specifically the signingstargateclient module. here's a unit test they have for that: https://github.com/cosmos/cosmjs/blob/main/packages/stargate/src/signingstargateclient.spec.ts#L162
undefined says Thanks for the response. When I look at Axelar IBC transfer it seems to be broken up into 3 stages. There is a normal IBC transfer from the source chain, followed by a confirmation of deposit on axelar and then transfer  to the destination chain. My understanding so far is that you would first initiate an IBC transfer. then you need to get a temporary Axelar address using the "getDepositAddress" method what I'm looking for information on is what would you do next. it seems to me that the next step would need to involve RouteIBCTransfersRequest by looking at the transaction messages. I would really be interested in any examples you might have that show IBC transfers
undefined says Hey man, could I please dm, I want to show you something my code is misbehaving
undefined says I was able to copy the ABI. 

The thing is the ethereum gateway contract ABI does not have the sendToken function. Even though that's where I am supposed to call from.
undefined says mostly true but in a slightly different order:
1. generate deposit address (this will be an axelar-prefixed address if you are sending from a cosmos-based chain).
2. make a deposit into that address from your cosmos-based source chain via IBC transfer. you will have to know the channel ID for that src chain >> axelar. 
these docs may be helpful: https://docs.axelar.dev/dev/axelarjs-sdk/token-transfer-dep-addr#deposit-address-workflow
channel IDs: (testnet): https://docs.axelar.dev/resources/testnet; mainnet - https://docs.axelar.dev/resources/mainnet
=> then afte ryou do 1 and 2, our network services handle the rest and you should be able to just view the tokens on your destination chain within a couple minutes. and then we have trackers you can use to watch the status: https://testnet.axelarscan.io/transfers
undefined says hey, sure can DM and take a look at your code. the sendToken function is on the ABI though. here it is:
undefined says Alright thanks.
I couldn't message you though. 
I think I don't have permission to
undefined says just sent a friend request
undefined says @Axelar Builder 

To follow up, we now completed that minor version bump of the JS SDK to 0.10.0 .
https://www.npmjs.com/package/@axelar-network/axelarjs-sdk/v/0.10.0
* if you are using the addGas/addNativeGas JS methods in the SDK in mainnet, the gas service contracts have changed. you should bump to this version in this case.
* otherwise if you are in testnet or do not use the methods above, you can upgrade but not immediately required to do so.
undefined says Hey everyone - our team is exploring building on top of Axelar. Do you have information about the latency for messages in specific routes?
undefined says And information on how many confirmations/blocks it takes for the message to go through to deal with re-orgs/etc.? (is this configurable?)
undefined says great, welcome to the community! 

first off, this might be helpful: https://docs.axelar.dev/

latency:
* testnet: https://testnet.axelarscan.io/gmp/stats?fromTime=1661460118253&toTime=1662064918253
* mainnet: we actually just turned messaging back on in mainnet this week so not all stats will be there. here is what you can find the stats though once we get more datapoints: https://axelarscan.io/gmp/stats?fromTime=1659472986266&toTime=1662064986266. we expect this to be better than the testnet stats [validators in our network run more powerful nodes/dedicated machines,/etc in mainnet]

block heights, yes good question! we expose an LCD query:
* for example: https://axelar-lcd.quickapi.com/axelar/evm/v1beta1/confirmation_height/ethereum
[related, if helpful: a list of our RPC/LCD endpoints here: https://docs.axelar.dev/resources]
undefined says + for token-transfer related #s, you can look here: https://axelarscan.io/transfers for some specific routes.
undefined says Is it possible to show an estimated transfer fee before the transaction is sent?
undefined says How can I get aUSDC for testnet or change the token to follow along with the youtube tutorials? @Canh T
undefined says I think there are faucets for that, I got from the sei discord group
undefined says I was able to see the ABI man and I am grateful. But now how do I call the proxy contract at that contract address
undefined says you use that implementation ABI we sent you but then call the proxy contract with it, should work
undefined says https://docs.axelar.dev/resources/mainnet#cross-chain-relayer-gas-fee. can also be queried here: https://docs.axelar.dev/dev/axelarjs-sdk/axelar-query-api#gettransferfee
undefined says use our faucet: https://discord.com/channels/770814806105128977/1002423218772136056
undefined says For the sendtoken project, in depositAddressSendToken.ts
You get this of code below
depositAddress = await api.getDepositAddress('avalanche', 'moonbeam', recipientAddress, 'uausdc');

I get that it's from the sdk  https://docs.axelar.dev/dev/axelarjs-sdk/token-transfer-dep-addr
But what does uausdc mean?
If i'm sending WETH, must the line of code be - depositAddress = await api.getDepositAddress('avalanche', 'moonbeam', recipientAddress, 'uweth');
undefined says hey, in that example `uausdc` is the "denom" of the asset as recognized by our network, which is different from the asset symbol that is recognized on external blockchains. 

this might help: https://docs.axelar.dev/dev/axelarjs-sdk/token-transfer-dep-addr#2-generate-a-deposit-address-using-the-sdk
undefined says This block of code?
const queryConfig: AxelarQueryAPIConfig = {
    environment: Environment.TESTNET
  }
  const api = new AxelarQueryAPI(queryConfig);

  async function main() {
    const denom = await api.getDenomFromSymbol("aUSDC", "moonbeam");
    console.log("denom: ",denom);
    return denom;
  }
undefined says yup!
undefined says Got my project working so far but Is there an api endpoint that I can use to do the unwrapping programmatically?
https://docs.axelar.dev/resources/wrapped-tokens
undefined says every one of those deposit/withdraw methods are on the erc20 contract that you can call programmatically
undefined says Following the tutorials on Youtube. But want to use my own account to send on testnet.
When I change useMetamask = false to useMetamask, I get errors.
Can somebody please assist, not really familiar with react/nextjs

If there is a repo already using metamask properly, please send it
undefined says @Axelar Help @Team
undefined says what errors do you get?
undefined says There was a 2, forgot the first but the one i have now is "window is not defined"
undefined says Tried adding
(window as any).ethereum ...
and
interface Window {
ethereum:any
}
both didn't work. Currently looking around on stackexchange for anything that might help
undefined says and tried 
declare global {
 interface Window {
    ethereum: import('ethers').providers.externalProvider;
}
}
undefined says ok, give us a while to debug this too. in the meantime, stick with the ehters.js wallet (instead of MM) if that's ok
undefined says you mean the sender account already there?
undefined says if so, okay
undefined says This is the repo https://github.com/axelarnetwork/axelar-local-gmp-examples/tree/main/examples-web/send-tokens
https://www.youtube.com/watch?v=MbkCUUPXOrQ
undefined says yup
undefined says hey! i know that guy in this video
undefined says any update
undefined says Hi guys, does any of you know how to register an asset on localhost node through governance? I am running into issue where proposal fails due to democracy.NotPassed
A proposal has been rejected by referendum while no votes or what so ever been done.. I get this error once I fast track the event.
undefined says made a small change, try running from this branch: https://github.com/axelarnetwork/axelar-local-gmp-examples/tree/potential_sendToken_fix. 
here is the change i made: https://github.com/axelarnetwork/axelar-local-gmp-examples/pull/42
undefined says thank you for the information!! It was really helpful!!üôè
undefined says Thank you, trying to send dm. Can you pls accept the request
undefined says Hey guys, I am really really sorry to bother.
But then I call sendToken, I add a gaslimit everything works well, on metamask . 
I.e metamask pops up and I approve the token in this case "ausdc" then metamask pops again asking me to confirm the sendToken which I do. 

But then, the approve returns successful , but the sendToken returns failed saying an error has been encountered, without showing error logs or anything when I click on it. 
Any help is greatly appreciated.
undefined says Thank you so much for the assistance.

I tried the pull request code.
Metamask does open but unable to get it to go through and approve because i'm not the sender.

Is there any examples of logging into metamask and automatically being the sender?

I understand how the project works but battling to navigate through how all the code works and where things are.
This is probably the only stumbling block then I can build using Axelar properly projects
undefined says hello again üëã. Ive been trying to figure out how to do figure out how to send the IBC transfers thru the axelar network using JavaScript but I feel that I must be missing something. Like you said Previously 1) you generate an Axelar address. I accomplished this using
```
const signerAX = await DirectSecp256k1HdWallet.fromMnemonic(MNEMONIC, {
  prefix: "axelar",
});
```
then I send an IBC transfer message on the source chain
```
const IBCmsg = ibc.applications.transfer.v1.MessageComposer.withTypeUrl.transfer({
          sourcePort:"transfer",
          sourceChannel:"channel-208",
          ...
```
What I'm not understanding is how the 
```
const depositAddress = await sdk.getDepositAddress
```
method is used to make the routing work?
undefined says the example was written as a simplified, not feature-complete, token send example that folks can build upon (e.g. leaving it to folks to add metamask/coinbasewallet/walletconnect/etc features they want on their own). and accordingly was intentionally barebones and unopinionated.

that said, updated the feature branch to accommodate your ask for built-in metamask support, which you can do if you specify that in the environment variable: `NEXT_PUBLIC_USE_METAMASK=true`. try pulling the branch again and let me know if you have issues.
undefined says ```const depositAddress = await sdk.getDepositAddress```
will give you the deposit address for a transfer of tokens from any cosmos-based chain. you use this to generate the axelar address (not the `DirectSecp256k1HdWallet`. 

once you call `sdk.getDepositAddress`, the axelar deposit address is generated by the axelar network, and the combination of our network and services we have on top will listen for deposits you make into that deposit address and automatically relay the tokens to your specified destionation chain once that happens. 

in regards, to the IBC transfer, you can use cosmjs that exposes a `sendIbcTokens` method you can call programmatically to make the deposit via IBC transfer. here is a unit test in their library you can follow as example: https://github.com/cosmos/cosmjs/blob/main/packages/stargate/src/signingstargateclient.spec.ts#L211
the only missing pieces of information you will need to collect are:
1. the channel ID from your specified source chain to axelar. [i see above you referenced `channel-208`, i assume you are sending from Osmosis?
2. the denom of the asset you are going to transfer, as it as recognized on the source chain. the (kind of) complicated part is the fact that the denoms of the assets are path-dependent. for example, the denom for usdc (atomic denom `uusdc`) on Osmosis is `ibc/D189335C6E4A68B513C10AB227BF1C1D38C746766278BA3EEB4FB14124F1D858` (derived from the sha256 hash of `transfer/channel-208/uusdc` , which you can try here https://emn178.github.io/online-tools/sha256.html)
undefined says ohhh ok I understand now. Is there a method inside of the @axelar-network/axelarjs-sdk package that I can use to signAndBroadcast
undefined says Is there any right contact to ask for connecting to Axelar from other Cosmos chain?
undefined says Feel free to reach out to Jake | Axelar#7393 from the team. Jake oversees business development for the Cosmos ecosystem
undefined says DM sent üôá‚Äç‚ôÇÔ∏è
undefined says üëç :Cross1: :Cross2:
undefined says Hi, is there support for Cronos?
undefined says Cronos is not supported at the moment (I think) but for anything else (Osmosis to AVA, ETH, Moonbeam, Polygon, etc.), you can use https://satellite.money/
undefined says Hello, I am a blockchain L1 and L2 developer. I have a rich experience in cosmos-sdk and substrate. I want to contribute myself to this chain.
undefined says why do you need to signAndBroadcast? you shouldn't need it if you're just doing the IBC transfer with cosmjs.sendIbcTokens. 

but if you need it, that's not on our SDK, but on theirs: https://github.com/cosmos/cosmjs/blob/main/packages/stargate/src/signingstargateclient.spec.ts#L245
undefined says @Axelar Builder there is a known bug returned by the sdk/relay services. it returns a fee below what's required to process cross-chain messages. please use a multiplier 2-5x on what's returned or set the fees manually. [since it get a refund for excess gas it's okay to over to overestimate]. we'll update once it's fixed.
undefined says @Axelar Builder 

The Axelar testnet will go through a scheduled upgrade, starting ~9:00AM ET, Wednesday September 7. This is a short upgrade and is expected to take ~1-2 hours to complete. During this period, network services will be down. 

The same upgrade for mainnet is tentatively targeted for Tuesday September 13, but the exact date could change. We will follow up with a mainnet announcement once its confirmed.
undefined says Hey @smartTM welcome!

Glad you're interested in building with us üôÇ To get started, take a look at our developer docs https://docs.axelar.dev/dev/hello-world

This introduces you to the Axelar tech stack, and how to quickly spin up your first cross-chain dapp. Theres lots more examples you can look at in this repo https://github.com/axelarnetwork/axelar-local-gmp-examples

And if you have any questions, just ask here and someone from the team will assist
undefined says Some Axelar team members have DM's muted, so pinging them in a channel in our discord could be better.

cc @Jake | Axelar , @bryan | DELIGHT LABS is looking to make a cosmos chain connection
undefined says yea my bad I misread the parameters . Too little sleep and too much ramen
undefined says thanks for your help!!
undefined says @Jake | Axelar  @Team 
Hi üôÇ
I'm Bryan from DELIGHT LABS, one of validator team of many Cosmos chain projects

We are also supporting Xpla platform(former C2X, CTX), and their team wants to connect to Axelar network (IBC + ERC), so we ask for making a group chat about it.

If available, could we make a TG group chat? You may contact me at DM or bryan@delightlabs.io
undefined says Am I correct in thinking I can set up Alexar to run cross chain on any EVM or do chains need to be added by the team?
undefined says @Team
undefined says at the moment, adding new EVM chains is a manual process done by our team. we're working towards permissionless adding of new chains that can be done by anyone. current supported evm chains listed here: https://docs.axelar.dev/dev/build/chain-names
undefined says Thanks. Second question: is Alexar is atomic? Wondering if it would be feasible to do something like cross chain flashloans
undefined says The core protocol is not atomic (messages are guaranteed to eventually delivered, potentially out of order), but you can create atomic guarantees at the application level (send back an ack, or revert state otherwise etc.)
undefined says Interesting. I think it would be enough with a custom token taking that into account. Is there a roadmap of when users can add their own chain/tokens for mainnet or at least a testnet poc?
undefined says You can already create your own chain cross chain token using message passing, see
https://github.com/axelarnetwork/axelar-local-gmp-examples/tree/main/examples/cross-chain-token
https://docs.axelar.dev/dev/build/gmp-messages
undefined says Oh ok, so I can currently use Alexar with custom tokens but if I need it to be on a particular chain as well the only way is to wait (mainnet or testnet)
undefined says Yep, you can even deploy your custom token on existing chains and then the new chain once that's live. Any chains you're interested in that we don't support yet?
undefined says True. My needs are based on a hackathon project so it's likely too time sensitive for it to be worth recommending to you üòÖ
undefined says what chains are you building on?
undefined says Klaytn and Evmos
undefined says so excited
undefined says @Team any member to make Axelar broaden..?
undefined says Hello,@jacky How are you. I have seen your examples. So, now what can I do for you?
undefined says I want to join your team
undefined says Ah got it! If you want to join the Axelar team, check out our website for a list of roles that we're hiring, and apply for the ones you think are a good fit üôÇ 
https://axelar.network/careers
undefined says After reading the docs and examples, you could try to build a cross-chain dapp using Axelar if you have a project in mind. And if you run into any issues, feel free to ask for help here in the #developers channel and someone from the team will assist. On that note, we're also co-sponsoring a moonbeam hackathon, and have some bounties, check it out here: https://moonbeam.devpost.com/
undefined says Thanks. @jacky
undefined says Hello- some more information about our genesis and validator program: https://medium.com/@axelar-foundation/the-axelar-foundation-genesis-delegation-program-d0369f2e2f33
undefined says @Axelar Builder the testnet network upgrade this morning has successfully concluded. Cross-chain messaging and token transfers are back online
undefined says @Axelar Builder 
The Axelar testnet will go through a scheduled minor bugfix upgrade tomorrow, starting `~10:00 AM ET (2:00 pm UTC), Thursday September 8`. Network services are expected to be back up in about `~30 mins`.
undefined says hey I'm trying to figure out why my transaction didn't transfer to the destination chain even the the transfer to Axelar was successful.
undefined says this is the Tx hash: 2E04C2CF691686ED721682C0381EFBF1DF6338810446493CA308715B7000A62B
undefined says Is this a mainnet Satellite transfer? If so, please fill out this form with the transfer details. https://axelar.zendesk.com/hc/en-us/requests/new
undefined says And for further questions, check out the #üì°‚îÇsatellite channel
undefined says From the Tx hash, I see this is a link event
undefined says Not seeing any tokens transferred to the linked deposit address though. https://axelarscan.io/account/axelar1y5a6z0mzt2cerqxrknvs9nt9wnmx6jc35pu8lmajmchk07el52ssehaqhc
undefined says Hi, can someone plz send some education materials about what will happen if 2/3 of validators get hacked?
undefined says Axelar is based on Cosmos and Tendermint, which is a Proof of Stake consensus secured network. Tendermint docs could be a good starting point
undefined says https://docs.tendermint.com/v0.34/introduction/what-is-tendermint.html
undefined says thx, u have ur own validators, and shared security currently in development without any exact dates, so it means that Axelar working on its own validators, and I want to get info what can happen if someone will have 2/3 of validators in axelar and this someone is bad guy. I mean he can easily deploy the wrapped axelar Tokens on other networks from axelar contract that mint tokens in this other network
undefined says if there is no kind of this documents, so it will be great if someone from Axelar will explain this to me)
undefined says Hello everyone. I've got a question about mechanics of Axelar .IIUC, it's mostly based on Cosmos SDK and provides the bridges for Cosmos chains via the IBC. How does it support EVM chains though? Specifically, how is the on-chain contract able to validate the finality proofs from Ethereum? Is it doing that at all? Or is it "trusting" the Axelar network's validators.
undefined says and a second question - what's the process for adding a new chain that is neither EVM nor Cosmos?
undefined says @Axelar Builder Testnet upgrade is now complete. Network services are back up.
undefined says Hey @Team , bumping the question - How does Axelar validate finality proofs of PoW chains, like Ethereum? Is it possible to add a support for non-EVM, non-Cosmos chain?
undefined says Each validator can register to maintain EVM chains on the network. This involves running a full node for that EVM chain, and validators will vote on whether certain events occurred on the EVM chain (such as user deposits) through which Axelar gets a consensus. Depending on the EVM chain, we check if the tx is in a finalized block. For PoW Ethereum, we wait for 35 block confirmations. After the Merge, we'll use the finalized tag. We are certainly working on adding non EVM, non Cosmos chains, but those do take longer since we need to implement a protocol interface to it.
Any chains you're interested in?
https://axelarscan.io/evm-votes
undefined says Thank you for the response, it aligns with my understanding. Why did you not choose to run a light client of these networks, rather than the full nodes?
> Any chains you're interested in?
I'm working with a Substrate-based one: Aleph
undefined says Our validator set is open and decentralized - you can read more about the Axelar Foundation Genesis Delegation program here: https://medium.com/@axelar-foundation/the-axelar-foundation-genesis-delegation-program-d0369f2e2f33

You can also see a live view of the network including active validators here: https://axelarscan.io

Here‚Äôs an update on security that we published this week: https://www.businesswire.com/news/home/20220906005342/en/Axelar-Adds-Quadratic-Voting-to-Bolster-Cross-Chain-Security
undefined says Some chains like Ethereum don't actually admit light clients. And unlike IBC for cosmos there is no generic protocol for EVM chains we can reuse, so a full node approach is the most universal as it doesn't require a specific consensus algorithm making it easy to integrate.
Note that we also connect to Moonbeam and thus to the Polkadot ecosystem via XCM
undefined says Thanks. Can you tell me how do you integrate with Moonbeam via XCM exactly? Or point me at some resource/code on Github and I can reverse engineer myself. I'll see if the same approach can be used to integrate with my network.
undefined says What I meant was that we integrate with Moonbeam like any other EVM chain. And if your substrate chain is connected to Moonbeam via XCM, then the connections can compose, for e.g. make a remote contract call from Ethereum to Moonbeam proxy contract which calls the destination address on the substrate chain via XCM
https://docs.axelar.dev/dev/intro
What use cases are you interested in?
undefined says General Message Passing, starting with token transfers. For better or worse, my chain isn't a parachain in the Polkadot network (yet) so I'm guessing I can't integrate with Moonbeam via XCM.

I thought you meant *you're* integrating with Moonbeam via XCM. Somehow...
undefined says Ah, I see, yeah, it would be need to be a parachain. Atm we need an IBC or EVM compatible layer to connect directly
undefined says Got it. Thank you for the detailed responses. That's all I have for now üôÇ
undefined says @Axelar Builder we've just released a new article covering a complete breakdown of the Security at Axelar that we're thrilled to share ü¶æ 

Here's the TL;DR version: 

**Security is complex, and achieving robust security comes down to the right designs, engineering, processes & operations.**

Axelar continues to lead the innovation front for cross-chain security with its latest release adding new features.

Axelar security is powered by a combination of:

:Cross1: Proof-of-stake decentralized design at the core.

:Cross1:Novel quadratic voting mechanism increases decentralization of the network.

:Cross1:Validator security policies, such as mandatory key rotations.

:Cross1:Network functions that enable mitigation of malicious interconnected chains [suspend traffic from them].

:Cross1:Contract limits that specify how much can be transferred over a time period.

:Cross1:Rigorous audits & bug bounties.

üîó Read the full article here: https://axelar.network/blog/security-at-axelar-core
undefined says @Axelar Builder 

The Axelar network will go through a scheduled mainnet upgrade, starting `~1300 UTC`, `Monday September 12`. The upgrade is expected to take `~2 hours` to complete. During this period, https://satellite.money and network services will be down.
undefined says How can we enable transfer of native tokens from one chain to another. If we lock the tokens on source chain and mint new tokens on the destination chain, then we are essentially transferring wrapped tokens.
Is there a built in functionality where the source token can be swapped with AXL token on the source chain and the AXL token can again be swapped for the destination chain native token on the destination chain?
undefined says thx u, will read it, do u have a russian or ukrainian version of axelar whitepaper ?
undefined says yes, russian version: https://docs.google.com/document/d/1mp9Y9fXRpMKcCobYta-_mor8IowaKKDlH1t6VUEA7uY/edit?usp=sharing
undefined says The cross-chain token transfers are done with wrapped tokens using the lock then mint method you described.
undefined says Not sure what you mean by "built in swap" functionality. In the hypothetical example you described, the AXL token existing on the source chain and destination chain, would still be wrappedAXL tokens, wouldnt it? Let me know if Im misunderstanding
undefined says https://0xsquid.com/ offers this as an api on top of axelar.
undefined says Hey fam
any one familiar with a blockchain that have file storage similar to this https://github.com/skalenetwork/filestorage that Axelar supports ? i need to communicate with it using moonbeam
undefined says maybe some avax sub chains or something ü§û
undefined says See the Axelarscan explorer (https://axelarscan.io/) for a list of all currently supported mainnet chains on the right hand table. Maybe one of those will use the file storage you need üôÇ
undefined says we dont support any avalanche subnets on mainnet yet, that could be added in the future üôÇ
undefined says We're working to integrate with https://www.kyve.network/ which might be relevant for you
undefined says Wow amazing! Thanks a lot guys!
undefined says I was thinking that if avalance has a way to interact with its subnets  I could find a way to do so using your system üòÇ
undefined says I will check it out thanks a lot!
undefined says üôèüôè
undefined says Think I will try to change strategy and search for an evm chain that allows me to store private variables , I just need to store loads of Mekrel tree leaves (array of keccak256)
undefined says Hi, we are developing an app using Axelar, is it possible to send native tokens? For example Moonbase alpha DEV token to Etherium Ropsten?
undefined says Ok - so you'd just be looking for an EVM chain with cheap fees?
undefined says Hey @Cryptohot , using Axelar testnet, you can send Moonbase alpha DEV token cross chain, over to Ethereum Ropsten. The asset transfer is done using Wrapped Tokens. For more info on the process, and how to get wrapped DEV, see https://docs.axelar.dev/resources/wrapped-tokens
undefined says The API you would probably use is `sendToken`  https://docs.axelar.dev/dev/build/tokens
undefined says Satellite is an example dapp built by the axelar team that showcases the potential of cross-chain applications, and can be used to bridge assets. You can try the Moonbeam -> Ropsten flow with WDEV on Satellite
https://testnet.satellite.money/?asset_denom=wdev-wei&source=moonbeam&destination=ethereum&destination_address=
undefined says Not exactly, 

I need a chain where I can store my data privately, (usually in evm pple can easily access storage slots and see everything ) .

Then I analyze this data and prepare ‚ÄúNFT‚Äù that will probably be on a chain that supports popular market places (probably polygon)
undefined says Hi Jacky, can it be automatically wrapped/unwrapped? Say I am sending native DEV from moonbase to Ethereum Ropsten where it appears as WDEV?

What has confused me is that gasPriceChecker API which gives me a quote for DEV as source on moonbase and ETH as destination on Ropsten, can such conversion happen?
undefined says In case of Axelar, the validators are required to run light clients or nodes to monitor the transactions on the chains they are supporting. If the validators have access to data on chain using their nodes/light clients, why are relayers needed? Can't the validators themselves begin the voting process by monitoring the gateway smart contract?
undefined says Hi, I read the docs, whitepaper, and medium articles, but still dont understand fee mechanism in Axelar. So If i send by using axelar 10 usdc from polkadot to ethereum, for example, i will pay fee only in usdc as i understand, and the part of this fee will go to ethereum  to cover gas fees, and other part of fee will be used to buy AXL token from the market and deliver it to the validators. Am I right at this point?


The second thing, do I need the DOT to cover polkadot fee in the case I described above? Or polkadot fee will be included in usdc fee?
undefined says Other question: Will Axelar Network support smartcontracts - so dev's can run their apps tight on Axelar network? IF yes, then I required to pay gas fee in AXL when communicating with this smartcontract in Axelar Ntwrk? If I want to move USDC from Axelar to Polkadot, in this case I will pay comission in USDC or in USDC and AXL?
undefined says And I calculated that there is around 187,5 mil $AXL issued every year for stakers (based on article in medium about tokenomics of AXL ) - so is it right ?
undefined says You can see a transaction fee mechanism here: https://medium.com/@axelar-foundation/the-axl-token-the-cross-chain-future-3dee3dc45e95
undefined says great question. this is done to minimize the complexity of the validator logic and attack surface. you can continue relaying, improving relay logic / speed / optimize without upgrades on the network and adding additional complexity to the core.
undefined says Read it already, there is no answers for my questions
undefined says "The Axelar SDK estimates fee payments on the Axelar network and the destination chain, converts tokens and sends payments in AXL and the destination chain‚Äôs gas token. (Gas services can be performed by any program or entity.)" -> you pay the gas fee in one denomination [say, USDC or native gas on the source chain], but under the hood it's converted to pay gas on Axelar in AXL and on the destination chain. as for smart contracts, right now axelar functionality is at the consensus layer. Smart contracts might be enabled for the purpose of continue to improve interoperability. But you should always be able to build your contracts on any chain and still have global connectivity with other networks through axelar.
undefined says Is there a way for us to calculate fees estimations ?
undefined says yes https://docs.axelar.dev/dev/gas-services/pay-gas
undefined says @Axelar Builder The scheduled mainnet upgrade has been completed successfully. Network services and satellite.money are back online.
undefined says Interesting  , thanks .
I gotta remember that cross chain u pay every interaction also if it‚Äôs pure functions
undefined says I** Need to think a bit differently about the architecture of my dapp
undefined says got it, but when i trying to do crosschain transfer of tokens from moonbeam to ethereum (for example ), i need to send tokens from my wallet in moonbeam to deposit contract in moonbeam, so this commission is covered by me? and after that commission in axelar and in dest. chain is taken from tokens that I transferring - right?
undefined says and there is a batch of other question that i've asked: about smartcontracts, stake rewards emission
undefined says Is it possible to wrap USDC?
undefined says Also any feedback on this
undefined says ?
undefined says USDC is already supported natively at the protocol level across many chains. https://docs.axelar.dev/resources/mainnet#cross-chain-relayer-gas-fee
undefined says correct.
undefined says ye, wrt smart contracts, as i mentioned,  they might be enabled for the purpose of continue to improve interoperability. But you should always be able to build your contracts on any chain and still have global connectivity with other networks through axelar. this blog covers rewards & inflation on the network. https://medium.com/@axelar-foundation/inflation-and-transaction-fees-on-the-axelar-network-d56ea9e2c142
undefined says what are you building? let us know if you want to hop on a call to brainstorm.
undefined says Yeah that would be great! We are building https://ethstamp.io/
undefined says Still very early stages ofc, but we have demo of web app at the moment.

 we are building something similar to ENS that will prevent social scams, and will easily be integrated discord/ telegram/ meta mask / apps / games
undefined says cool let's DM
undefined says I saw you spoke with Sergey already, and we've been talking on moonbeam discord too. Feel free to DM me if you wanna plan through the project more üôÇ
undefined says Attention builders! üó£Ô∏è

This is the last day to register for the Axelar x Flipside Build-a-Thon.

Be sure to secure your spot by 12AM PT tonight!

https://twitter.com/flipsidecrypto/status/1569435893022265344?s=20&t=1UvUqu5tvnCXsjc7bQg4oA
undefined says Sounds great will do!
undefined says Can USDC be sent from Ropsten to moonbase via satellite?
undefined says Our app is on Moonbase, we need USDC there for testing
undefined says so this include paying for read functions too?
undefined says As I see there is no USDC on testnet..
undefined says How do I wrap my USDC to AUSDC on testnet?
undefined says don't think we have a pool for that. however, we have an aUSDC faucet: https://discord.com/channels/770814806105128977/1002423218772136056
undefined says https://ropsten.etherscan.io/tx/0xaf0f33b2753b4be26c4e050bb684b37ac56e6000daba11caa4743c5bfb3d30b2
undefined says It's what I understood, but ofc once you build with this in mind you can minimize it, and in a way many times also for read functions you pay your provider in one way or another
undefined says I have deposited 2 eth to the WETH contract on Ropsten, but did not receive WETH in return, can someone check this?
undefined says The gas fees for general message passing needs to be paid at the source chain only or can be paid on the destination chain as well?
undefined says source for now only.
undefined says you can open a ticket here: https://axelar.zendesk.com/hc/en-us/requests/new
undefined says Hey everyone, just a note if you are using GMP on testnet - we are doing an upgrade to the network services (not blockchain) so there may be some inconsistency in request delivery times over the next two hours.

We do not expect GMP to be unavailable however.

https://discord.com/channels/770814806105128977/869602423247892511/1019688458807169145
undefined says Upgrade is complete.
undefined says Hi devs, is there any way I can import my metamask account to create a new contract (Typescript)? I currently can only do it if I generate wallet from private key or mnemonic which is inconvinient.. Many thanks!
undefined says @Axelar Builder In light of this, the network connection to Moonbeam has been deactivated. This impacts both cross-chain token transfers and general message passing. https://discord.com/channels/745382242326413442/880528202081116160/1019971415686000671
undefined says Link doesn't work for me
undefined says it's a link to their server. copy/paste:

*******
@collators @collators-moonbeam :alert: We recently had a bad block on Moonbeam due to equivocation. This caused a finalization issue between the EVM and Substrate hashes. Equivocation is strictly forbidden due to the network degradation it implies. We will communicate soon with a more detailed explanation.

To fix the current bad block, all RPC nodes on the network now have to resync to get past this block. (Collators don't have to resync)

Equivocation is the action of submitting multiple blocks at the same block height. This happens when you are running multiple nodes with the same Nmbs key. This can be done by a malicious actor (trying to get more blocks included/produced) or by mistake (having a backup node running with the same key).

If another equivocation is detected, we will need to implement a solution to prevent it (Using governance or on-chain slashing for the collators).

Each node needs to have its own unique keys and any backup solutions need to ensure there can be no possibility of equivocation.  Everyone needs to double check their configurations and backup solutions today to ensure this won‚Äôt happen again.

If anyone has questions on backup solutions let‚Äôs discuss here.  Some of the community members have already posted their backup solutions which will avoid equivocation.
undefined says Good afternoon, my name is Yuri, I have a technical proposal for the platform, with whom from the core team can I discuss this?) thanks!
undefined says Good morning. You can use our official website and click on button "Contact us" https://axelar.network/
undefined says Can I chat with you about a technical proposal? Unfortunately, there is a form on the site in which I cannot express my offer.
undefined says can you give a bit more context on the proposal and we'll direct you the right way.
undefined says hi all! i'm from MMS
We just add new public endpoints, feel free to use=)
> RPC https://rpcaxelar.mms.team/
> API  https://apiaxelar.mms.team/
> gRPC https://grpaxelar.mms.team/

All our mainnet endpoints - https://endpoints.mms.team
undefined says Hi. Is the testnet working fine? I am using gateway sendtoken function, AUSDC tokens are burned on Moonbeam (sent by gateway to 0x0) but not received on Ropsten
undefined says https://moonbase.moonscan.io/tx/0xc1130d1a9ca2e74991bd543ddecf9946bc680d97df5e69e73afd3d285a882c84
undefined says Here is the tx
undefined says @sergey
undefined says @Rok | Qubelabs Can take a look this transaction?
undefined says Please don't tag a team.
undefined says OK, just wanted to drive some attention at the weekend
undefined says https://testnet.axelarscan.io/sent/0xc1130d1a9ca2e74991bd543ddecf9946bc680d97df5e69e73afd3d285a882c84
undefined says I see it is successfull on Axelarscan, but tokens still did not arrive..
undefined says I also tried sending to avalanche, and it was not received too
undefined says Hey guys is there any way to import localhost network started by Axelar into Ganache? Thanks in advance
undefined says "Serving 5 networks on port 8500" but when I try to add network it says port 8500 is already in use and I should use another one so idk if there is any other way
undefined says Hello, I tried using sendToken method on Polygon (mainnet) to send axlUSDC to Moonbeam (mainnet). It says it was successful on Axelar explorer, but the funds didn't arrive on Moonbeam side. What could be the cause for this? Here is the tx: https://axelarscan.io/sent/0xf688ee1ca1dd4e7d1d329c0701bffa3bbcdbef0e2ac2850e150ba22a4195bb93
undefined says Please open a ticket on https://axelar.zendesk.com/hc/en-us/requests/new

We will review it soon as possible
undefined says Looks like this form is for transfers that involve Satellite, but I directly interacted with sendToken method on the gateway contract of Polygon main-net.
undefined says @Milap Can you take a look thist issue please?
undefined says howdy all !!
undefined says you're sending below the minimum relay fee. https://docs.axelar.dev/resources/testnet#cross-chain-relayer-gas-fee
undefined says It's not shown in the sendtoken example that a fee is required, should it be send directly to the gateway.sendtoken?
undefined says it's taken from the transfer amount. no need to do anything more, just send above the fee. it will be subtracted automatically.
undefined says Clear, thank you
undefined says Why doesn't the contract notify that the fee is not enough and revert?
undefined says we should do something about it, but the fee is not backed into the gateways. it's at the axelar network level only [and can adjust based on the gas prices on destination chains]. we should expose a way to check it via sdk or another on chain contract, or augment it.
undefined says If you make another `sendToken` above the min fee to the *same* chain and recipient address, then you'll get the amount that's stuck + new amount - fee
undefined says (the transfer is never lost)
undefined says Great, how do I determine the fee? Getgasprice api call returns much smaller fee then is actually deducted
undefined says Not sure which API you're talking about. A recent axelar JS SDK version (try the latest) should return the correct value.
https://docs.axelar.dev/resources/mainnet#cross-chain-relayer-gas-fee
undefined says GetTransferFee call right?
undefined says I am going to rewrite it to dart
undefined says https://axelartest-lcd.quickapi.com/axelar/nexus/v1beta1/transfer_fee?source_chain=ethereum&destination_chain=terra&amount=100000000uusd
undefined says I see this URL as an example in the Axelar js SDK, it seems to return values for mainnet, what is a testnet endpoint?
undefined says Yeah
undefined says It is returning the testnet values
undefined says This endpoint does not accept Moonbase, so I assume it is mainnet
undefined says I have found http://axelar-testnet-rpc.axelar-dev.workers.dev
undefined says In axelar js SDK constants
undefined says But could not form the correct request yet
undefined says May I ask why there is no button on AxelarScan to add gas fee
undefined says The screen shows insufficient gas costs, but there is no Add button
undefined says 
undefined says anybody hereÔºü
undefined says Hey, we can discuss this! I have a proposal for a validator status bot, I tried to write to you in private messages, but you are closed
undefined says Hi, I'll check with the team on this. üôá‚Äç‚ôÇÔ∏è
I want to add that you can also increase gas through the SDK by following this guide https://docs.axelar.dev/dev/gas-services/increase-gas while the team is checking Axelarscan. 
https://testnet.axelarscan.io/gmp/0xc65bc8dc62d22b2ba3ce5b2bf4124c0f0b7bd94608728791369e93c15f237a7a:12 cc: @PJ
undefined says The missing button was due to a ui issue. we've fixed it. could you please try again? :Pray2:
undefined says have you tried this function in the sdk?
https://docs.axelar.dev/dev/axelarjs-sdk/axelar-query-api#gettransferfee

for example, query transfer fee when transfer usdc from moonbeam to avalanche
```ts
const {
  AxelarQueryAPI,
  Environment,
} = require("@axelar-network/axelarjs-sdk");

const sdk = new AxelarQueryAPI({ environment: "testnet" });
const fee = await sdk.getTransferFee("moonbeam", "avalanche", "uausdc", "1");
```
undefined says Note that the third param should be `denom` not `symbol`. Here's how you can convert symbol to denom. https://docs.axelar.dev/dev/axelarjs-sdk/axelar-query-api#getdenomfromsymbol

For example,
```ts
const sdk = new AxelarQueryAPI({ environment: "testnet" });
const denom = await sdk.getDenomFromSymbol("WDEV", "moonbeam");
console.log(denom) // wdev-wei
```
Note: the first param is case-sensitive, which means if you pass `wdev` instead of `WDEV`, it doesn't work.
undefined says yes, i got it
undefined says I want to port it to dart, that's why I am asking for the correct endpoint address
undefined says the one that you got is correct endpoint for testnet. we use moonbeam for moonbase chain.
https://axelartest-lcd.quickapi.com/axelar/nexus/v1beta1/transfer_fee?source_chain=moonbeam&destination_chain=ethereum&amount=100000000wdev-wei
undefined says So this is an exposed to HTTPS access to tendermint rpc node?
undefined says I have checked Axelar js SDK and found that it queries tendermint34 rpc at http://axelar-testnet-rpc.axelar-dev.workers.dev/
undefined says there're multiple rpc providers. you can pick one of those two.
undefined says oh rpc endpoint is different than lcd endpoint though
undefined says The axelar JS SDK doesn't seem to work in getting the deposit address. I tried it on mainnet. I see that the deposit address returns on the websocket , but the library doesn't resolve the promise. Can someone help me here ?
undefined says OK, it's easier to use https from dart, do you also have one for mainnet?
undefined says It is known issue. we're working on it. The bug happens when you specify cosmos-based chain as a source chain.
undefined says My source chain is ethereum and destination is Axelar
undefined says @Cryptohot  Light Client Daemon. It's a REST-based adapter for the RPC endpoint
undefined says Thanks, we didn't acknowledge this has an issue too. I will note and let the team knows.
undefined says do you know if there is an ETA ? It'll be great if you guys can fix this before the token sale.
undefined says Thanks!
undefined says i think it will be fixed today or tomorrow.
undefined says Is there a reference for all ICD queries?
undefined says We want to support staking and ops would really appreciate if we build an internal tool for transferring funds instead of using Satellite to generate those deposit address.
undefined says Thanks ! Hopefully today
undefined says cc: @Canh T
undefined says https://docs.axelar.dev/resources
undefined says Here's only endpoint list
undefined says I need an example how to query getDenomFromSymbol via lcd
undefined says sorry, i misread that üôèüèª. I'll ask the team
undefined says can you relay any info/update on the sdk fix ? Also is there any public issue / tracking available so that I can follow it ?
undefined says hey, there was a bug in the lib introduced recently. have this fix planned for it but want to vet with @nptytn before release: https://github.com/axelarnetwork/axelarjs-sdk/pull/165. likely tomorrow will have a patch version. in the meantime, you can check this alpha version and try it there (noting the PR is still in review): https://www.npmjs.com/package/@axelar-network/axelarjs-sdk/v/0.11.3-alpha.1
undefined says Hi, want to ask about sendToken method on gateway contract address, moonbeam is disabled, the token is sent to another network from moonbeam using sendToken method, but since moonbeam is disabled, the tx is completed on source chain, but not on dest chain, is there any way to complete or refund the tx? I search at the doc, but doesnt find any way for this
undefined says we'll investigate. can u send the txhash on moonbeam
undefined says Nevermind, found the answer
undefined says Given that Axelar validators are required to run nodes or light clients on the source chain to observe the transactions on the chain before voting can begin, isn't it expensive to run light clients on EVM chains? Will the light clients be updated every time relayer submits a request on the Axelar network for validators to monitor the chain A deposit address for a deposit transaction or are they batched together?
undefined says Is it because Validators just need to monitor the transaction on the source chain and they don‚Äôt need to write the entire history on the destination chain. After observing the txn on the source chain, they reach a consensus and initiate the action on the destination chain instead of providing the destination light client with entire history?
undefined says hope this is helpful for you https://axelar-lcd.quickapi.com/static/swagger/#/QueryService/ConfirmationHeight
undefined says Hi
I am trying to send nfts from ethereum to avalanche in the testnet using nft-linker. Both ethereum and avalanche are funded but why I try to deploy the contract it fails. Do I need to have some axelar tokens in the source and destination chain for gas?
undefined says @Sattar karashi No you just need to pay for contract deployment on source & destination chain in native tokens. (as usual). What kind of error are you getting?
undefined says @Sattar karashi Make sure you specify private_key correctly in `scripts/deploy.js` and `scripts/test.js`.
undefined says Yes, I specified that correctly
undefined says Can you share the error here?
undefined says Yes
undefined says 
undefined says @vladwulf
undefined says Ok, I'll be checking.
undefined says Thanks
undefined says Is it error at the same step every time?
undefined says I only use Ethereum and Avalanche chain in my chains. No it happen one time
undefined says My bad, the error happens one time
undefined says It mints the nft tokens in the source and destination chain but after that it hits the error
undefined says This is my testnet.json file. It only contains Ethereum and avalanche.
undefined says I see. The deployment is randomly failed on testnet. For now, I think you can try increasing the delay between each contract interactions in `examples/nft-linker/index.js`
undefined says also maybe put sleep after line 22 too. we'll improve this later üôá‚Äç‚ôÇÔ∏è
undefined says Thanks I will try that
undefined says Thanks, will check
undefined says Hi, I'm getting an error message when testing the GMP.
(node:103) UnhandledPromiseRejectionWarning: Error: invalid contract address or ENS name (argument="addressOrName", value=undefined, code=INVALID_ARGUMENT, version=contracts/5.6.2)
I checked my dependencies and I'm still getting the error.
undefined says Hey, could you please share more details? You are testing GMP in what way? Is there any code you could share?
undefined says I could deploy it succefully. But after trying to send nfts from avalanche to fantom I get and underflow error.

Error: underflow [ See: https://links.ethers.org/v5-errors-NUMERIC_FAULT-underflow ] (fault="underflow", operation="BigNumber.from", value=13616175848684.209, code=NUMERIC_FAULT, version=bignumber/5.6.2)
undefined says Buidling the next cross-chain killer dApp or infrastructure solution? LongHashX and Axelar are proud to bring you the first ever Global Axelar Accelerator!! Successful projects will receive up to $100k of investment for 2% of tokens and equity, weekly 1:1 mentorship sessions and fireside chats with  leaders in the blockchain space. We welcome all projects building on ecosystems connected with Axelar, including Ethereum, Secret, Polygon, Avalanche, Cosmos, BNB Chain, Moonbeam, Fantom and many more! Applications close 11 Nov. See you there! üöÄüöÄ

Link to Official Tweet + Deets üëá
https://twitter.com/LongHashVC/status/1572193991831191553?s=20&t=bagQf_gRjpann01J2tOsvw
undefined says Hey guys, I want to build a staking Dapp, on the Axelar ecosystem, how do i get access to the dev portal? and How can i get access to the AXL token for building purposes?
undefined says Hi @Ivensio you don't need to have the AXL token to start building. (Furthermore, the AXL token is not available as of yet).
undefined says To start building I recommend going to https://docs.axelar.dev/dev/intro
undefined says Weird, i swear i saw some instructions on the satellite bridge on how to exchange some tokens for the AXL token, is that not in production yet?
undefined says @Ivensio It is indeed possible to bridge the axelar token on satellite but the token itself has not yet been released to public yet.
undefined says And how do i pay the gas fees to the axelar nodes? to push the transactions
undefined says @Canh T  / @nptytn  , thanks for the fix. It works seamlessly now üôÇ Looking forward to the token sale on our platform and supporting you guys throughout.
undefined says @Axelar Builder In case you missed it, we've got an Axelar Learn session featuring Dan Lynch, Cosmology founder and Osmosis contributor going live today! 

üõ†Ô∏è  This session will cover how to build seamless onramps for users form any blockchain using Axelar!

‚è∞  1pm EST / 17 UTC

üîó  https://www.youtube.com/watch?v=uEuS4OBUdlQ
undefined says I think this is because a float is being passed instead of an integer somewhere, could you provide more details so we can track this?
undefined says I don't get it, if there is no Axelar token publicly available how are the gas fees paid then?
undefined says Clearly they don't want normal people (non-insiders) sending transactions on the Axelar chain without going through a middleman
undefined says Yeah but if I'm developing on their ecosystem how am supposed to pay the gas then? Doesn't that mean that i am not an an insider? üòÑ
undefined says I think only validators they accept on mainnet have access to the AXL coin, if you're "only" developing you're not supposed to pay gas fees directly on this chain
undefined says @Ivensio You will pay the gas on the source chain for your GMP calls. https://docs.axelar.dev/dev/gmp-overview
undefined says So if use axelar to create a DApp that sends transactions from Avalanche to Moonbeam, you will pay gas on Avalanche through our gateways. The functions that you are going to call to pay gas are listed here. "The fee can be paid in the native token of the source chain or any token supported by Axelar network" https://docs.axelar.dev/dev/gas-services/pay-gas
undefined says sorry maybe dumb question, but started on the Hello World example

my node version was too high so switched to 16.7 but whenever i run `node scripts/createLocal` it errors with

```
/Users/user/projects/axelar-local-gmp examples/node_modules/@ethersproject/bytes/lib/index.js:9
    return !!(value.toHexString);
                    ^

TypeError: Cannot read properties of undefined (reading 'toHexString')

```
undefined says I'm trying to add axelar js sdk to an old project, it's been unable to find the right loader for . I tried using the 'babel-loader' but I still get the below error. Anyone have come across this ? 

`09:15:31 webpack.1    | ERROR in ./node_modules/@cosmjs/amino/build/secp256k1hdwallet.js
09:15:31 webpack.1    | Module parse failed: Unexpected token (76:12)
09:15:31 webpack.1    | You may need an appropriate loader to handle this file type.
09:15:31 webpack.1    | |         const seed = await crypto_1.Bip39.mnemonicToSeed(mnemonicChecked, options.bip39Password);
09:15:31 webpack.1    | |         return new Secp256k1HdWallet(mnemonicChecked, {
09:15:31 webpack.1    | |             ...options,
09:15:31 webpack.1    | |             seed: seed,
09:15:31 webpack.1    | |         });`
undefined says can you confirm that you have appropriately loaded your private key into a .env file? https://github.com/axelarnetwork/axelar-local-gmp-examples#set-up-deployer-key
undefined says not seen this before. are you willing to share with me your repo and we can try and reproduce? my github is `canhtrinh`
undefined says can't share the repo unfortunately it's  private. But anyways, no worries I can work around for that.
undefined says Hey hi, I‚Äôm curious about the way cross chain messages work when a function in a blockchain B is protected. For example only owner can execute it but the message is triggered from blockchain A.
undefined says let me put it in a different way, I want to send a message from Blockchain A to Blockchain B, but the function in Blockchain B has a modifier that restricts a certain party to execute it. If I trigger from Blockchain A, how can I know from Blockchain B that the right party from Blockchain A is triggering the transaction?
undefined says cc: @talal | DevOps @ Axelar
undefined says The executable on chain B (via the ‚Äò_execute‚Äô method) has info on who the sender was on blockchain A. And if a non-owner tries to invoke it‚Äôll revert in the same way you would‚Äôve otherwise expected it would if done all within a single chain. In either case your chain B contract should handle these cases accordingly.
undefined says a nice, gonna check the _execute method, thanks
undefined says in the axelar-local-gmp-examples there are some that reference files that I believe have moved. Am I mistaken?  I didn't find these items at the locations specified in the imports: 
import { AxelarExecutable } from '@axelar-network/axelar-gmp-sdk-solidity/contracts/executables/AxelarExecutable.sol';
import { IAxelarGateway } from '@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IAxelarGateway.sol';
import { IAxelarGasService } from '@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IAxelarGasService.sol';
undefined says Am I correct that these have moved to axelarnetwork/axelar-cgp-solidity/contracts...
undefined says Yes I believe they moved, but a long time ago so if this wasn‚Äôt adjusted it should have been. Which example are you seeing this a problem in? We can take a look (alternatively, if you want to push a PR we can review üòâ)
undefined says I was looking at the axelarnetwork/axelar-local-gmp-examples/call-contract/ExecutableSample.sol
undefined says Hello guys, tell me please
where i can find cli ?
@chris @Foivos  thanks!
undefined says I think I'm wrong. It's odd because while I don't see the addresses of the imports as correct the example does seem to be working properly so I'm thinking you should disregard my earlier comment.
undefined says How can I read an nft transfer transaction?
I have sent a nft from ethereum to avalanche and this is the transaction an etherescan testnet. 
https://ropsten.etherscan.io/token/0x1e54ca25adb4d6d776348d33fccf497575e80184?a=0xe5b576eeebbbc82129dff71b85164b9bb3ff2fd7

I guess it doesn't transfer the nft to the destination chain at least! When I run the code, I get this
undefined says What is the current minimum threshold required by the validators to reach consensus to process a corss-chain arbitrary message?

According to this proposal https://testnet.axelarscan.io/proposal/25, it looks like 51% is required.

According to this post https://discord.com/channels/770814806105128977/867457262620770334/1021929399634898994, more than 60% is required. 

Can someone please clarify this?
undefined says my transactions stays like this.. any idea why it cannot complete in the other side?
undefined says do you have any plans to support goerli? or maybe is supported but not documented?
undefined says can you share the axelarscan url of this gmp call or the txhash on the source chain?
undefined says is anyone else having an issue with gasreceiver setting a really low gas limit on the receiving moonbeam transaction? yesterday it was 850,000+ today it is 8,500 and my tx are failing and it's the same call on the same contract so I'm a bit lost?
undefined says When I make nft transfer using nft-linker, the nft doesn't transfer to the destination chain. Should I fund the gasreviever? What should I do? Or do I need to fund something with ax tokens to make the transaction?
undefined says Hey Everyone,
Just starting with Axelar. So,  please forgive me if it's a noob question, I couldn't find anything around the synchronous to and fro communication for cross-chain contracts.
Is it possible for smart contracts to communicate (invoke methods) back on forth in a single GMP transaction?
undefined says Fellow n00b here. I found this to be really helpful example to learn more about what you're trying to do. https://github.com/axelarnetwork/axelar-local-gmp-examples/tree/main/examples/call-contract
undefined says That link is to a call-contract example.
undefined says Another resource I found very helpful is the moonbeam walkthrough of this. https://moonbeam.network/blog/connected-contracts-axelar/
undefined says see send-ack pattern. https://github.com/axelarnetwork/axelar-local-gmp-examples/tree/main/examples/send-ack
undefined says I've encountered a similar issue as well. Hope the Axelar team can look into it.

For example, the SDK (v0.11.4) returned `1861106380000` for Avalanche to Moonbeam, but it's a lot higher
https://testnet.axelarscan.io/gmp/0x0bd451e2d8d2440ecfa841731f2f7ca6bd576594bcec920151e99fd0f1a5e93c,
undefined says Thanks for looking into this Jeremy and for the insights.
undefined says Thanks @locavore and @sergey 
I'll go through what you have shared!
undefined says Started a thread.
undefined says Have a quick question about how Axelar handles transaction approvals -- I noticed that some approvals take a lot longer than others. Are there any docs on what impacts that?
undefined says Outside of source network, anyway?
undefined says Or are there any footguns to watch out for when it comes to sending transactions that will get rejected from approvals? I'm seeing a few in the pool that are a couple weeks old when I filter.
undefined says hard to tell why the value you're getting is that low. can you share how it is you're invoking the method? i ran it with this and getting `0.0064 AVAX` (which looks greater than the base fee in your failed tx link above): 
```const config: AxelarRecoveryAPIConfig = {
  environment: Environment.TESTNET,
}
const queryService = new AxelarQueryAPI(config);
async function test() {
  const gasFee = await queryService.estimateGasFee(EvmChain.AVALANCHE, EvmChain.MOONBEAM, GasToken.AVAX);
  console.log("gasFee",gasFee, formatEther(gasFee as string))
}```
undefined says I don't remember if we have docs on this, but generally there are two factors. First is finality of the chains. E.g. it's instant on Avalanche, but is over 120-130 blocks on Polygon. Thus, we need to wait for that long before validators can vote for an EVM transaction on the source chain. Second is gas price fluctuations on the destination chain. When we relay transactions to the destination chain, sometimes they need to be repriced and resubmitted on the destination chain, and sometimes multiple times until pricing logic catches up with the actual prices. We are continuously improving the latter for bringing those times down
undefined says Yeah, some calls will never get approved if they don't pass our validation rules: each ContractCall and ContractCallWithToken (events emitted by AxelarGateway contract) in the transaction must have matching NativeGasPaidForContractCall and NativeGasPaidForContractCallWithToken (respectively, events emitted by AxelarGasService contract) and amounts of gas pre-paid should be above minimal threshold.
Normally a correct tx should come through within a few minutes. Occasionally when tx is being repriced that might take longer. A rule of thumb - if it hasn't come through after 1-2 hours it probable never will. If you encounter such transactions and aren't sure what's going on with them, feel free to let us know, we can help you investigate
undefined says Hi whats the best way to query how much rewards a key has made on a node
undefined says Using the node cli: `axelard query distribution rewards [delegator-addr] [validator-addr]`

Using the rpc client: https://github.com/cosmos/cosmos-sdk/blob/63a7c45caa768019c74bdaef7994e8d38c42f7ca/x/distribution/client/rest/query.go#L44
undefined says Can use LCD 
Just check the /distribution... endpoints. 
Here is the swagger UI; https://axelar-lcd.quickapi.com/static/swagger

i believe you wanna this one 
https://axelar-lcd.quickapi.com/static/swagger/#/Query/DelegationRewards
undefined says Thank you
undefined says some reasons;
https://docs.axelar.dev/validator/setup/health-check
undefined says Btw let's chat in #üöß‚îÇtestnet üôÇ

Pick the validator role here #üìç‚îÇpick-a-role
undefined says Hey guys, i've been playing with the repo contracts for a bit, but i am not getting something here. How is the value set to "TEST" and not to "something" here ? üòÖ
undefined says you passed "test" as an argument, the example relays it to the destination chain and sets in the contract. you can change it via the command line or change the execution. does that make sense?
undefined says Yeah but i actually commented the line where "value" takes the payload as its new value, and hard-coded "something" instead. So no matter what i should have sent in the payload, "value" should have been set to "something". That's what i don't understand actually. Also none of the code that i execute in the override function seems to be running upon receiving the payload, i tried to trigger a transfer of an erc token that was sitting in the contract for example, but still nothing.
undefined says can you drop your code?
undefined says Of the contract ? That's pretty much the same as the example, i just added 2-3 things there like a small erc interface and 2 variables
undefined says Can it have something to do with the virtual function from AxelarExecutable ?
undefined says Can someone explain to me why `axelard debug addr` seems to be giving a wrong ERC20 address? dummy mnemonic FYI

```
> ./axelard keys add test --keyring-backend test --home ./home

- name: test
  type: local
  address: axelar1d735yw6hx749xnrpnpsdcvwlq7s3vucxvt6r0h
  pubkey: '{"@type":"/cosmos.crypto.secp256k1.PubKey","key":"AsFt4T6svUZoh06y1TiXmTbINLERsnoPZAaElA8ftHnd"}'
  mnemonic: ""


**Important** write this mnemonic phrase in a safe place.
It is the only way to recover your account if you ever forget your password.

quote train knee rival fresh delay enforce wire review picture master music version corn blur merge elevator curious album liberty fitness sail obey inner
> ./axelard debug addr axelar1d735yw6hx749xnrpnpsdcvwlq7s3vucxvt6r0h
Address: [111 163 66 59 87 55 170 83 76 97 152 96 220 49 223 7 161 22 115 6]
Address (hex): 6FA3423B5737AA534C619860DC31DF07A1167306
Bech32 Acc: axelar1d735yw6hx749xnrpnpsdcvwlq7s3vucxvt6r0h
Bech32 Val: axelarvaloper1d735yw6hx749xnrpnpsdcvwlq7s3vucxv2vxac
> python3
Python 3.8.9 (default, Apr 13 2022, 08:48:06) 
[Clang 13.1.6 (clang-1316.0.21.2.5)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> from eth_account import Account
>>> Account.enable_unaudited_hdwallet_features()
>>> acct = Account.from_mnemonic("quote train knee rival fresh delay enforce wire review picture master music version corn blur merge elevator curious album liberty fitness sail obey inner")
>>> acct.address
'0x91738d4FF1036f79E475200ae9651088949e220D'
```
undefined says Seemed to have just been a cache issue, separate from what @locavore experienced. Sorry to waste your time üòÖ
undefined says After you deployed the contracts (first command from the screenshots), did you update the addresses here https://github.com/axelarnetwork/axelar-local-gmp-examples/blob/main/info/testnet.json with the ones returned by the deploy script? I suspect that the test script just isn't calling your instances of the contracts
undefined says Are you comparing the value of `Address (hex)` with the address returned by the Python script? It isn't wrong for them to be different.  At very least in your example derivation paths would be different (e.g. coin type is 118 for Axelar and 60 by default for Ethereum). However, there are other moving parts in seed/address generation that differ between the two.
undefined says Hey there thanks for the answer. Actually i checked after you said that, and the addresses are modified automatically. But i figured out something, i tried to deploy myself a contract on Polygon with Remix, and put that address instead of the one deployed with the deployment script, and it worked. The value ended up being "something" finally. So the script is actually not deploying my executable-sample.sol but the base one, i will try to see what can cause that in the script code. If you got any hint feel free to share thanks üôÇ
undefined says Alright guys, for those who followed my issue i found the answer. The deployment script uses the bytecode in the json and does  not re-compile the solidity contract before. So when you change something in the solidity contract, make sure to compile it again later and make sure that you deploy this bytecode. Thanks to everybody who helped üôè
undefined says Thanks for reporting in here. This could help other devs who may run into similar problems!
undefined says I'm glad you found a solution!
undefined says Please don't tag a team. You can try to contact with Milap
undefined says @Eric8302 I've deleted your message as it's not necessary to tag 20+ people
undefined says Sorry for that! Thanks for your help!
undefined says Is it possible in anyway for someone to call the execute() function of an axelarExecutable contract? Like is there a risk that this might happen?
undefined says How I can set the private key in .env file?
undefined says EVM_PRIVATE_KEY=0x00...
undefined says Is this wallet private key? Something like metamask private key?!
undefined says Yes that the private key of the wallet that you wish to sign messages from
undefined says I set my metamask private key in .env.examples but I still have the same error
undefined says It's a noob question but why my private key doesn't start with 0x....?
undefined says It should be in the .env, the script won't fetch the .end.example. And if your privatekey doesn't start with 0x you can simply add it
undefined says Btw guys, when i track a contractCall with the SDK i every time get that "unkown error" status in between before the end. That's still working but i'm not sure how to know when i'll get an error, if it will be real or no üòÖ
undefined says Is there an on-chain oracle for the price of AxlUSDC?
undefined says Yeah, anyone can call it, but `IAxelarExecutable` implements `execute` method like this:
```
bytes32 payloadHash = keccak256(payload);
if (!gateway.validateContractCall(commandId, sourceChain, sourceAddress, payloadHash)) revert NotApprovedByGateway();
_execute(sourceChain, sourceAddress, payload);
```
So if someone does, we should thank them as it would only work if it was supposed to be executed anyway and they would be paying gas/tx fees on our behalf. üòÉ
undefined says Mind sharing the code/repro example? I can have a look
undefined says you could probably  query uniswap
undefined says Yeah i also had a small look in these functions yesterday. I understood that the whole security system is based on the commandID right? But that would be possible for someone to deploy a legit executable contract and call our contract on another chain, since this call would be legit. So i put a require at the top of my override _execute function to make sure that the sourceAddress is allowed to call, as there is no way to spoof that one right? Since it is set by the axelar contract itself and not input by any other entity
undefined says 
undefined says Your approach seems right. Some contracts may require whitelisting who can call them, some may not - that's up to developers to decide.

> there is no way to spoof that one right?
Correct, in `IAxelarExecutable` we are checking for approval on the gateway, which in turn means that Axelar validators voted on TX on the source chain and signed the call to the gateway. In fact, we are doing something similar in one of our examples https://github.com/axelarnetwork/axelar-local-gmp-examples/blob/398dc128b892e5d916d91e745529dbee08e6fa99/examples/nonced-execution/NoncedExecutable.sol#L33 so you're on the right track!
undefined says Cool, can you log the whole `txStatus` and share its payload? It has `error` field that may explain what's going on. How consistently do you reproduce it? Is it all the time or just sometimes?
undefined says Hi guys
Bridge and messaging with axlUSDC in Axelar
Is it necessary to swap the bridged axlUSDC once with Curve, etc. to use it as native USDC in the destination chain?
undefined says Actually that "unknown_error" happens everytime before reaching "destination_executed", and the error object is empty in that case. This is on testnet, might be different on mainnet, i'll test this out later also
undefined says hey man:
1. what version of the SDK are you on?
2. when you get the "unknown_error" status, you should also see a console.info of what the actual status is (see here: https://github.com/axelarnetwork/axelarjs-sdk/blob/main/src/libs/TransactionRecoveryApi/AxelarRecoveryApi.ts#L97). can you tell me if your inspector logs show anything useful? it may be the case that in the polling you are doing there, there are intermediate results that are shown that are not accounted for
undefined says Hello there üôÇ
undefined says We are launching a Cosmos SDK based chain, https://twitter.com/TeritoriNetwork 

 and would like to integrate USDC on it via IBC. Is there anything particular to do ?
undefined says We have an onboarding procedure for cosmos chains, DM'd you
undefined says @Ilya Lukyanov

Has anyone built an omnichain DEX using Axelar? 

https://youtu.be/JFnF1dgbF00?t=138

This is the killer-app!
undefined says There are a bunch of applications building this using Axelar rn, such as Squid DEX and Osmosis
https://docs.0xsquid.com/
https://medium.com/osmosis/osmosis-for-applications-cross-chain-swaps-as-a-service-7dc9229001dc
undefined says Hey Milap... thanks for the good info!  Much appreciated!
undefined says Hello, I am busy setting up a cross chain ERC20 network. 
However, I don't understand exactly how to deploy contracts with remix.
For this to work, the 2 contracts must have the same address on different chains?
undefined says how can I get the same address without using constAddressDeployer? I would like to keep the ownability of my contract
undefined says In order to have the same address across chains you need to use `constAddressDeployer`. You can still keep the ownability of the contract
undefined says Hi!
If I want to swap aUSDC to a native USDC in testnet, do I need to create a pool in curve?
undefined says You can pass in the owner address in your contract's constructor instead of using `msg.sender` as the default.
undefined says Yeah, you'd have to create a pool to swap
undefined says @Axelar Builder Since Ropsten testnet is being deprecated tomorrow, we have stopped our cross-chain services to it. We'll be adding Goerli support over the next few days.
undefined says Hello, Yes I use it. But I can't deploy with Remix.
undefined says thanks, did you have a example?
undefined says Does it mean that all validators from testnet should reinstall ETH node with Goerli network?
undefined says Yep
undefined says Hey there i have an issue with the SDK. My github action checks won't let me deploy on the backend because of that compilation error. This error can be fixed by changing the syntax from Promise<Nullable<ExecuteParamsResponse>>  to Promise<ExecuteParamsResponse | null> but since the backend fetches the packages itself my local fix won't do anything. Is there another solution? Do you guys have an API endpoint to estimate gas and follow GMP transactions ?
undefined says see https://docs.axelarscan.io/cross-chain
undefined says we'll look at the sdk
undefined says Ok
undefined says I think the issue is related to this file https://github.com/axelarnetwork/axelarjs-sdk/blob/main/src/global.d.ts

Is it possible to provide a code snippet with the issue?
undefined says Thanks for the help guys, i temporarily fixed my issue using patch-package, if that can help someone here is the fix that is required if you have the same error as me
undefined says Hello,

Is it possible as a validator to add a blockchain not present on axelar?
undefined says Yes, this is possible. Blockchain platform builders can seamlessly plug-in their blockchains to all other blockchain ecosystems, through a single point of integration. It takes less than 10 minutes to integrate a new EVM chain with all other interconnected chains on the Axelar network so setting it up is simple.
undefined says Great stuff! Do you have a description of the steps to follow?
undefined says Here are the basic steps: https://twitter.com/axelarcore/status/1499053636969709568
Perhaps the Axelar team can help you with this. Feel free to reach out to a team member, for example Milap.
undefined says Included in the last tweet is a video of Sergey walking you through the process.
undefined says Thanks, I'll look into it carefully. If I have any questions I'll get back to you.
undefined says Absolutely! Feel free to ask in here. The team is quick to respond to all questions!
undefined says Is there anyone to have an idea to build the website from Figma design?
undefined says Hey guys. Hope everything in project is ok, haha) So I hv a question: how I can accelerate my transactions? Is there any way to do this without confirming it with a button by hand?
undefined says Our relayer service checks whether the contract call and the gas payment are in the same transaction or not before confirming it on the network. If not, you would need to manually trigger to relay it by clicking the 'Approve' button on axelarscan or via the SDK (https://docs.axelar.dev/dev/axelarjs-sdk/tx-status-query-recovery#trigger-manual-relay-of-transaction-through-the-axelar-network). Team is working on an update to support it soon, but I'd recommend paying for gas in the same transaction as the contract call. It'd be the best practice for now.
undefined says Thanks üòä
undefined says I have a question.
I'm testing axelar-local-gmp-examples.
Node script execution/example deployment/invocation contract
It says EVM_PRIVATE_KEY=YOUR_PRIVATE_KEY_HERE must exist.
How to get EVM_PRIVATE_KEY?
undefined says If your account is in Metamask, you can do Metamask -> Account Details -> Export private key to get it
undefined says @Axelar Builder `Goerli` Ethereum testnet is now supported. You can find info on it here: https://docs.axelar.dev/resources/testnet
NOTE: It's chain name/identifier is: `ethereum-2`
undefined says I have a simple question
Can I already bridge from the Goerli network to another network?
undefined says Yep, https://testnet.satellite.money/?source=ethereum&destination=avalanche&asset_denom=uausdc&destination_address=
See #üíß‚îÇfaucet to get test tokens
undefined says Hi,
I tried to bridge from bnb testnet -> polygon testnet no issue.
But when I try to bridge from polygon testnet -> bnb testnet and I got invalid chain error.

FAILED (Poly -> BSC)
https://testnet.axelarscan.io/gmp/0x38e1ac2707fee77f1bb307ebb61a2f107a72b5f5869dee69e4f6514a5c5d2c96:228

SUCESS (BSC -> Poly)
https://testnet.axelarscan.io/gmp/0xab6aae56f61c03545db402863130012e9f69c2224b5d8d03238a194c9b0f317d

Any kind soul here able to sheer me some light?
undefined says you have to use `Binance` for `destinationChain`.
undefined says Omg, thank you so much.
I can't believe it was due to the case sensitive issue.
undefined says axelar will handle this. for call from `Polygon`, it take ~10-12 mins to confirm & approve call.
fyi: you can see the statistics here.
https://testnet.axelarscan.io/gmp/stats?fromTime=1664614304690&toTime=1665219104690
undefined says actually it must be `binance`, sorry for wrong information.
btw you can see chain names in the docs here:
https://docs.axelar.dev/dev/build/chain-names/testnet
undefined says Hey can someone help me with that?

```[Error: ENOENT: no such file or directory, open 'C:\Users\Felix\full-mint-website\artifacts\build-info\4e192fe4dc8e7c72b19c224fb3be8226.json'] {
  errno: -4058,
  code: 'ENOENT',
  syscall: 'open',
  path: 'C:\\Users\\Felix\\full-mint-website\\artifacts\\build-info\\4e192fe4dc8e7c72b19c224fb3be8226.json'```
undefined says @Sirapop
undefined says Tried to verify my contract
undefined says I tried with lowercase "binance", and it doesn't work in the testnet
undefined says Appreciate your help, thank you for making my day.
undefined says Thank you!
undefined says Hi!
Is it possible to execute `callContractWithToken` again within `_executeWithToken`?
If so, how do I calculate the gas cost?
undefined says hi, here's an example https://docs.axelar.dev/dev/build/5-min-starter-examples#two-way-example-send-back. you can also try the ping-pong example: https://xchainbox.axelar.dev/?env=simulated&sample=ping-pong.
undefined says Why it takes so long to send NFTs crosschain on testnets?
undefined says I technically can't send NFTs now because of that.
undefined says Hello! You guys mentioned you were thinking of doing some integration between your SDK and the Moralis SDK. Do you have any docs of what are you looking for?
I've applied to this hackathon https://moralis.io/google-hackathon/ and I would like to know what you have in mind.
undefined says Hello!  Who can register assets with Axelar  (who can execute transaction RegisterAssetRequest) ?
undefined says Hello, to add a new chainI have to be a validator?
undefined says Hello @Sattar karashi can you provide the delayed txes please?
undefined says Hey @CODA an overview for the process of supporting any of the existing chains as a validator is here: https://docs.axelar.dev/validator/external-chains/overview.
undefined says Hey @Leo ! Is there a specific product you interested in?
undefined says Hello, so currently if I am a validator, I can choose to validate for one of the supported strings? 
But I can't for example link my own blockchain?
undefined says Here I was told that it was possible
undefined says https://discord.com/channels/770814806105128977/955655587260170272/1027560966805803048
undefined says are you interested in an EVM or a Cosmos chain?
undefined says EVM chain
undefined says I see, I might have misunderstand the question. Please let me reach out to the team and let you know if there is a comprehensive developer guide to proceed.
undefined says In general, in a developer environment, you are able to support new chains by following these step ‚òùÔ∏è https://discord.com/channels/770814806105128977/955655587260170272/1029362803494096996 ‚òùÔ∏è .
Additionally, you'd need to register yourself as chain maintainer, and add chain/tokens as described in the steps here https://twitter.com/axelarcore/status/1499053636969709568.
undefined says I'm actually following what in https://github.com/axelarnetwork/axelar-local-gmp-examples for the NFT-linker section and just used  my private key for the transactions. 

One point to notify is that when deploying the contract, it technically doesn't deploy the nft-linker contract and it uses a default contract which has bin created a few months ago! 
Should I change other parameters in the testnet.json file or I only should use my private key for the transactions?
undefined says My last attempts showed that it transfers (or locks) the nft from the source chain but it doesnt send it to the destination chain !
undefined says I hv the same question, my transactions didn‚Äôt approve sometimes
undefined says But not for nft
undefined says For example:

https://testnet.axelarscan.io/tx/0x0d2cd7a27a793b58eedd33c0edc63e241f7f3193f00b6b33fbb779642edafa3d:2
undefined says @KARTOD the GMP call seems to be missing the relayer address
https://testnet.axelarscan.io/gmp/0x0d2cd7a27a793b58eedd33c0edc63e241f7f3193f00b6b33fbb779642edafa3d

the relayer address should appear under destination contract address like here
https://testnet.axelarscan.io/gmp/0x02a23739b9cc8d167860dfc27e67b75f4eaae8cd558f90ea8b380249ec61d107:7

how are you implementing the call?
undefined says Up
undefined says Okay, great. Thank you very much.
I see that to be a validator you have to stack at least 1 AXL.  So you need the native AXL, available on the Axelar blockchain. Is that correct?
undefined says hey. `RegisterAssetRequest` is used to confirm asset registrations and can be called using this query  `axelard tx axelarnet register-asset [chain] [denom]`  by any validator
undefined says Can you register? or do I need to look for any validator ?
undefined says Via typescript, each of tx
undefined says Should it be the validator's address or mine?
undefined says are you interested in setting up a developer environment or adding more assets to testnet/mainnet?
undefined says Add more to mainnet
undefined says I see. Adding new assets/chains on mainnet and testnet is not supported for validators at the moment. We are planning to release a network which will support permissionless additions soon. Which asset would you like to add on mainnet btw?
undefined says injective uusdc
undefined says I see that from these txes with the same sender, the second GMP was successful (the second one had a valid relayer address). I assume you sent both of them, can you spot any difference between these two at the code that called them?
https://discord.com/channels/770814806105128977/955655587260170272/1029380796991152138
undefined says sounds good I will pass it along to the team and we'll let you know!
undefined says Ok, thank you
undefined says Absolutely nope. That is why I asked u about that. Coz I didn‚Äôt change anything, just sent first transaction and after some minutes the second
undefined says Btw this tx was approved and didn‚Äôt execute coz I have a mistake inne code, no worry. But there are a lot of txs from Avax to BSC that still pending
undefined says (I guess that the most part of those txs are mine)
undefined says But the main problem that I didn‚Äôt approve txs by myself, I didn‚Äôt change the script
undefined says But someone approved my first tx and the second one didn‚Äôt
undefined says @br3 how can I accelerate my transactions. Like how I can approve that, my there is any function? Not by my hand
undefined says confirmations on testnet and mainnet are handled automatically. You don't have anything to do, our services pick it up and confirm it for you when it reaches the confirmation height on the respective chain.
undefined says if you want to do your own implementation, you need to track chain events and and then broadcast a confirmation request for that event to the axelar network.
undefined says Yeh, it‚Äôs clear. But okey, I wanna understand why I hv some transactions with pending time 3-4 minutes and some txs with 4H pending time. I didn‚Äôt change anything
undefined says 
undefined says @KARTOD can you please try to include the gas payment at the same transaction as the GMP call? There is currently a bug at the tracking service which omits GMPs calls where their gas payments are not included at the same tx. It's at our backlog and will soon be fixed.
undefined says I approved some of these calls to test. The ones with substantial delay are confirmed manually.
undefined says In theory i can wait if you fix it soon. Coz my function is not payable

I tried to testing with payable function but it calculated automatically gas with estimateGasFee function and haha counted 0.29 AVAX and and didn't go any further
undefined says https://testnet.axelarscan.io/gmp/0x859310f7722a08cad28f4998254fb8fe6c3c2d812e2bc7c12420753f8df7aa6a:2
undefined says will dm
undefined says 
undefined says Your API is broken. Chain axelarnet not recognised
undefined says Thank yoy for your issue. The team will take a look on it. Can you try please 
https://old.satellite.money/ ?

@Milap
undefined says I need testnet. ethereum-2 is broken too.
undefined says Hi - when is the Satellite test net going to be restored? We have some teams for the Flipside x Axelar build-a-thon that need to leverage this tool
undefined says Hi i trying to deploy NFT contract to polygon using { deployContract } from @axelar-network/axelar-local-dev lib.
It keep prompting me the transaction is underprice. May I how can I pass gas params into the deployContract method?
undefined says Hello when I try to start my axelar node, nothing append. (with genesis sync)
undefined says with this command `$AXELARD_HOME/bin/axelard start --home $AXELARD_HOME >> $AXELARD_HOME/logs/axelard.log 2>&1`
undefined says Hi, is it possible to  call a view function on a destination chain from a contract on a source chain? I looked into the call-contract example, but it seems only applicable to payable functions which modify the state of the destination chain.
undefined says It work with quick sinc !
undefined says Hello, any kind soul can guide me on how to pass custom gas params to this method?
undefined says Hello, I am block in this step. Someone can help me? 
https://docs.axelar.dev/validator/setup/vald-tofnd
undefined says I have this error
undefined says 
undefined says 
undefined says 15 hours goerli -> moonbeam...
undefined says now I have an other error...
undefined says Have you registered a broadcaster proxy and funded both, broadcaster and validator accounts?
https://docs.axelar.dev/validator/setup/register-broadcaster
undefined says Hello, when I made this command, I got an error.
I tried to install again but now I have other problems.
How can I clean the installation of the validator?
undefined says The steps are well explained here:
https://docs.axelar.dev/validator/setup/overview

It might be best to move this discussion to #üöß‚îÇtestnet
undefined says hello, ok I move üòâ
undefined says hey the tx seems to have insufficient gas.

I see this log in our services
```
insufficient gas paid. Expected 1500000000000000, but only received 88236867722267
```
Can you please try to replay the call with the indicated gas amount from the API? https://docs.axelarscan.io/general-message-passing/searchGMP
Unfortunately, adding more gas to the existing call won't automatically confirm the GMP at the moment due a bug we are currently target on fixing on the next testnet release.

update: after attempting to manually confirm, your call status was updated at the front end, too
https://testnet.axelarscan.io/gmp/0xe18d4f3773699b8590add27c78b349ed3f3a8a97362947a36ec5807f7e5b2c45:1
undefined says hey @ibcflan satellite is restored üéâ
undefined says thank you for reporting, that has been fixed
undefined says so, your gas estimation SDK is buggy
undefined says Will x10 returned result
undefined says No, it is not a gas problem
undefined says https://moonbase.moonscan.io/tx/0x5fe97ae3eae82d6f9bb63687bf295ebd11aece01d9734e093d355148d861df38
undefined says chain name is ethereum-2 üò¶
undefined says Yeah `ethereum-2` is the chain name for ethereum after ropsten was discontinued and migrated to goerli. Did you make this change/was it able to get you going with your GMP calls or are you still facing issues?
undefined says Hi All, is there best practises guide for calling separate functions on a destination chain, ie tayloring the payload to work for different internal fns called inside `_execute()` on the destination chain?
undefined says Also, has anyone worked with any foundry/forge tooling for axelar?
undefined says This is by no means an official answer, but I believe it's not possible, given that GMP works with events. You'd probably be better off calling the view function from your dapp using a provider for the other chain and passing in whatever value you need
undefined says ok, thank you. I'd prefer the call to be made from a smart contract, though. I should be able to use a tailor-made oracle to do this then.
undefined says Changing the name to ethereum-2 didn't work for me. It doesn't detect the network!
undefined says could you use ethereum-2 testnet? I use it but it doesn't detect the network!
undefined says Hello, i am looking for all Message Type of Axelar blockchain transaction
the type in here is what i am looking for: https://axelarscan.io/transactions/search
every transaction will have a certain Message Type to verify what kind of transaction it is
i just want the list of Message Type Axelar produces while executing transactions in it 

for reference, osmosis has this data point: https://api-osmosis-chain.imperator.co/swagger/#/
where message types can be retrieved from **__/txs/v1/types__** section
undefined says @Rok | Qubelabs I wanted to realize the example in this video: https://www.youtube.com/watch?v=iZgqneh7s88&t=1s

This tutorial takes this example it seems to me. 
https://docs.axelar.dev/controller/deploy-token

Is the local environment a controller? 
I would like to test this feature.
const { forkAndExport } = '@axelar-network/axelar-local-dev';
forkAndExport();`
undefined says Hello
I wanted to know if there was a way to pay gas for calling contracts cross chain way ahead of time rather than paying per call.

I understand that you could pay as you call the source contract with msg.value
It seems kinda annoying Incase of wrong estimation is there a way to pay heavy up front
undefined says Hi, Can anyone please tell me what are the ports that are required to be open on the firewall for Axelar to sync?
undefined says By default config that would be the standard Tendermint ports:
```6060          LISTEN      111216/axelard
26660         LISTEN      111216/axelard
26657         LISTEN      111216/axelard
26656         LISTEN      111216/axelard
9091          LISTEN      111216/axelard
9090          LISTEN      111216/axelard
1317          LISTEN      111216/axelard```
undefined says hey @Francis E.  Thanks for the comment.
Unfortunately there's not a way to pre-pay calls at the moment. Will happily pass the recommendation to the team and keep you updated.
We know gas estimations can be fiddly some times, and we are working on improving the experience for devs.
undefined says That's alright
Would love to see that integrated soon!
Thanks
undefined says Hello guys am unable to deploy again contract
undefined says When installing `axelarnetwork/axelar-local-dev` , the installer isn't adding a version for the package in the `package.json`, instead I'm getting this:
```
  "dependencies": {
    "@axelar-network/axelar-local-dev": "github:axelarnetwork/axelar-local-dev",
    "@openzeppelin/contracts": "^4.7.3",
    "@openzeppelin/contracts-upgradeable": "^4.7.3"
  }
```

Has anyone else experienced this issue?
undefined says You could have an executable contract on destination chain that calls the view functions and then sends the value back to the source chain via `callContract`
undefined says Try to install `@axelar-network/axelar-local-dev` instead.
undefined says Not sure if you already got the answer or not. If you're using JS, you can import our npm dependency that has all the types typed out: https://www.npmjs.com/package/@axelar-network/axelarjs-types
undefined says Hi guys, I'm following this example: 
https://docs.axelar.dev/dev/hello-world
```
$ node scripts/createLocal 
-> axelar-local-gmp-examples/node_modules/@ethersproject/bytes/lib/index.js:9
    return !!(value.toHexString);
                    ^
TypeError: Cannot read properties of undefined (reading 'toHexString')
```
Any tips?
undefined says ```
$ node scripts/deploy examples/call-contract local   
-> 
Error: Cannot find module '../info/local.json'
```
undefined says Ok nvm it worked with 
`$ npm ci` command
undefined says Hey @Axelar Builder just a reminder that there's still 1 month left to apply for the LongHashX Axelarator!

üóì Weekly Office Hrs w leading industry mentors
üîß Weekly sessions w venture builders
üë¨ Access to LongHash VC and the Axelar core team‚Äôs network of founders, investors & technical experts!

Apply to the LongHashX Axelarator here üëâ https://t.co/KHXetK9SN5

Have questions? Speak to the LongHash team directly:
https://calendly.com/d/djd-2xt-x8g/longhashx-accelerator-axelar-cohort-faq-office-hours?month=2022-10
undefined says You can find all the specifics of internal network protocol here
https://github.com/axelarnetwork/axelar-core/blob/main/docs/proto/proto-docs.md
undefined says thank you
undefined says Good day everyone
undefined says Hey @br3 I'm working with the testnet for axelar network and the approval on the axelarscan takes so long to approve. Anything I'm doing wrong on my end or its just the way it is with the tesntet?
undefined says Will sometimes have to wait up to 10mins for an approval which is really really slow.
undefined says Approval requires a certain amount of blocks on the source chain to confirm. Depends on the chain. We are working on the faster version that can be executed by a trusted party before full confirmation https://github.com/axelarnetwork/axelar-utils-solidity/blob/main/contracts/executables/AxelarForecallable.sol
undefined says Awesome. Is this currently useable?
undefined says Hello! Our team is planning to become a node validator for the Axelar Network. But have a few of questions:
1) Instead of running our own nodes for all the external chains, we want to use Chainstack's Elastic Nodes. The payment is based on a total monthly requests. Has anyone used Chainstack's RPCs in their validators? How many requests do each external chain's RPC receive (rough estimate?)?
2) Do validators need to have a bond? If yes, how much / minimum? Couldn't find in the documentation.
3) Is there a website like https://tracker.rhizome.dev/governance/ which provides an estimate of rewards earned by validators? If not, would love to contribute in building it.
undefined says Hi guys, quick question. Is it possible to call `gateway.callContract` directly from the web3 UI? Say I have a contract which implements `AxelarExecutable` deployed on Polygon (destination). Can I call methods of this contract from the Metamask while on Mainnet, directly on source gateway or do I need "proxy" contract deployed on Mainnet?
undefined says 1. we do not recommend using external services, and encourage to setup and manage your own nodes to continue decentralization. 
2. no minimum bond (1axl only), but you need to be in the active set to earn rewards. 
3. one example: https://axelar.brightlystake.com/
undefined says yes, you'd need to call the gas receiver contract to pay gas for relaying & the gateway in the same transaction. but nothing prevents from doing it from UI directly.
undefined says yes, in alpha. you can either try instantiating it yourself and let us know if you run into any issues, or we can connect and try to help setting up. https://github.com/axelarnetwork/gmp-forecaller
undefined says I think it is a very good strategy to enable the same level of connections for axlUSDC and axlUSDT because a pool of only stablecoins is very attractive for big institutions and big whales, I think creating an action plan to introduce a pool of axlUSDC/axlUSDT in all DEXs working with Satellite can be a very good strategy. I remember how billions of UST were locked up in Terra just to be able to pull a 20-30% APR imagine if they create something sure to generate high passive income plus give them access to all DEXs and diversify their liquidity when they want 
You may in the future even look for a way to integrate GMP for Shared Liquidity use between DEXs through this Axelar pool
undefined says It is a way to receive strong support and incentives for your AXL tokens in all DEXs as they know and are the first ones interested in having their solo stable pools to grow hard the TVL.
undefined says Would it be possible to have all swaps from all DEXs coming from one single stable liquidity POOL to serve all platforms?
undefined says @sergey Hi, Can you please tell me what library Axelar uses for custody verification? I need to use that library in my project for custody verification (key_gen, sign_message, verify_message) where I can find all the methods that can be used for verification?
undefined says Ethereum web3/cosmos_sdk? What exactly is the library I can use for custody verification!
undefined says Axelar is built on top of cosmos-sdk and uses Tendermint consensus systems. More details and guides about AxelarJS SDK are available at https://docs.axelar.dev/dev/intro. I hope the team can clarify soon which library is used for custody verification.
undefined says yes, I did go through this website but no where any library is mentioned
undefined says Yes, I hope the team can clarify soon which library is used for custody verification.
undefined says Do you any link for library which I can use
undefined says yep, thanx
undefined says is it absolutely free to build on top of axelar?A Newbie hereüñêÔ∏è
undefined says Yes, there are no fees involved with building on top of Axelar.
undefined says Great.Nice to hear thatüòÉ
undefined says Axelar doesn't support cross-chain support with Binance chain?
undefined says Ah yes, ok, thank you. I'll compare the costs with the oracle solution.
undefined says BSC is supported. You can use https://satellite.money/ for making token transfers from BSC to any other supported chain.
undefined says where to ask code related issues?
undefined says You're in the right place
undefined says Hello. I bought an AXL token in the ERC-20 network on the Huobi exchange. I read that ledger is a partner of Axelar. 

I ended up transferring my AXL to Ledger wallet to the ERC-20 network. 

In Explorer my tokens are showing, in Ledger my tokens are not..;
undefined says Will there be support for AXL token in ERC-20 network on ledger? Otherwise I can't see my tokens in Ledger and can't manage them(
undefined says I hope this is just a mistake and you and ledger will fix this misunderstanding. Thanks in advance for the reply
undefined says P.S.: If you need more information, I will send the administration screenshots.
undefined says I want to transfer my tokens. Help me please
undefined says Let's take this to #üîó‚îÇgeneral please! Did you send them to Ledger Live?
undefined says Alright thanks, I'd let you know if I run into any issues or need help anywhere
undefined says Hi, I want to send tokens/msg from polygon to binance or vice-versa. But it seems to not support that as per docs. Binance is nowhere to be listed. Is it under development? if not any way around to do such.
undefined says I need binance here among other networks to do cross-chain transactions.
undefined says Hey, Binance is supported on Mainnet. That page is a bit outdated but I have a pending PR waiting to get merged that will fix that.
https://github.com/axelarnetwork/axelar-docs/pull/216
undefined says No way to develop on testnet/local?
undefined says To check things on mainnet,I have to invest real money in it.
undefined says Cross chain messaging from polygon on testnet is usually very slow to approve
I understand the approval requires a certain number of block confirmations

Other chains seem to be fast except polygon

This is on the testnet environment
undefined says Sending messages FROM the chain is slower than too
Would love to know why and whether I'm doing anything wrong?
Also if there's a way to speed up this process without using the gmp forecaller
undefined says This is in regard to my previous question
undefined says Hello Team, Can anyone from the engineering team please tell me what Library is used for custody verification? Basically, from that library I need methods like key_gen, sign_message, Verify...! But I am confused which library it is
undefined says Hey guys a bitt new to finding out about Axelar but I'm curious:

Would transferring an NFT from ETH to Juno for example mean that the new NFT can be traded on a secondary Juno marketplace using $JUNO?
undefined says Yes, that's true, but so far there is no such possibility, if I'm not mistaken. Here is an example of a collection of robots launched on the Ethereum network, but now they are traded on the Polygon network https://opensea.io/collection/axelar-robot-polygon
undefined says You can build with a test network , here's an example: https://docs.axelar.dev/dev/hello-world
undefined says Is there a way to enable debug/transaction logs when running nodes using `createAndExport`?
undefined says Guys any idea why my tx is stuck for so long? 
https://axelarscan.io/gmp/search
tx is 0x55627ba9...489defb279 (currently is on top)
undefined says did you prepay the gas?
undefined says @Axelar Builder T-Minus 2 hours until we go live with Metrika for this week's Axelar Learn session! :Axelarstrong: 

We will feature a hands on introduction to the Metrika Dashboard as well as some useful features for helping delegators make informed decisions on which validators to stake with!

üîó Tune in live here: https://www.youtube.com/watch?v=bYpUzr0JbVA

üóìÔ∏è Tuesday, October 18th
‚è∞  2pm EST
undefined says 1. Check if you properly set the destination contract address correctly p.s It's string format
undefined says 2. If that doesn't work then probably check if you paid the gas before sending the transaction. You could use their sdk to get an estimate of how much gas it'll cost you
undefined says Hope that helps!
undefined says Anyone could answer this I would really appreciate that!
undefined says Thanks a lot! 
Ok so we paid more gas, payment and call went through, but stuck on approval and execution...
https://axelarscan.io/gmp/0x55627ba9afc963162096022f4472a5e659af14ee9f4728f770093e489defb279:521
Appreciate any tips üôè
undefined says Still wrapping my head around it like you
But what I realized were some chains take longer than other chains. 
I think it has to do with something about block confirmations for approval but I'm not too sure.

It could also be that you might not have supplied enough gas to execute on the destination chain.

It all depends
undefined says Well it is certainly puzzling
Am I right assuming there is no method for calculating required gas pre-flight?
undefined says ‚ù§Ô∏è‚Äçüî•
undefined says hello, if you are paying gas as a separate transaction, you would need to manually trigger to relay it. You can either do it by clicking the `Approve` button on axelarscan ui or via the SDK (https://docs.axelar.dev/dev/axelarjs-sdk/tx-status-query-recovery#trigger-manual-relay-of-transaction-through-the-axelar-network). Team will update the relayer service to support it soon.  the best practice, for now, would be paying gas in the same transaction as the contract call. Please see some references below. üëá 
```
Our relayer service checks whether the contract call and the gas payment are in the same transaction or not before confirming it on the network. If not, you would need to manually trigger to relay it by clicking the 'Approve' button on axelarscan or via the SDK (https://docs.axelar.dev/dev/axelarjs-sdk/tx-status-query-recovery#trigger-manual-relay-of-transaction-through-the-axelar-network). Team is working on an update to support it soon, but I'd recommend paying for gas in the same transaction as the contract call. It'd be the best practice for now.
```
https://discord.com/channels/770814806105128977/955655587260170272/1027871851025797251
```
Unfortunately, adding more gas to the existing call won't automatically confirm the GMP at the moment due a bug we are currently target on fixing on the next testnet release.
```
https://discord.com/channels/770814806105128977/955655587260170272/1029723281718247434
undefined says Thanks, I'll look into that
undefined says There is.

They have an sdk
That allows you calculate that so you don't overpay or underpay
undefined says So I can approve a transaction using the SDK?
undefined says i would like to know if it is possible to call `payNativeGasForContractCall` and pay with native tokens on the contract instead of `msg.value`
undefined says hello, I am trying to create an example to transfer NFT from one chain to an another chain using axelar, I need some resources to achieve this task. Kindly share the resources/information/example. I found this link axelar-local-gmp-examples/examples-web/nft-linker/ what exactly the nft linker ? can anybody show me some lights on this ?
undefined says I'm trying to figure out how to make an IBC transfer from the axelar testnet to an agoric testnet.
I sort of expected that testnet.satellite.money would prompt keplr to add the axelar testnet, but... it doesn't seem to.

I could use a cli client... I need an RPC endpoint. suggestions?
undefined says aha... <https://axelar-testnet.s3.us-east-2.amazonaws.com/testnet-chain-config.json>
undefined says but... `axelard` doesn't grok `--node=...`. clues?
undefined says check here for rpcs: https://docs.axelar.dev/resources
undefined says Hi guys , have some question üôÇ 

On Polygon I've created a contract which receives message and write it to the storage (exactly as in you example here https://github.com/axelarnetwork/axelar-local-gmp-examples/blob/1ae143c7c17bed80083e02f45618f503288bb3f4/examples-web/call-contract/contracts/MessageReceiver.sol#L7). Currently I'm trying to call this contract from Ethereum via Axelar Gateway Contract using method `callContract`, followed by call to Gas Service Contract `payNativeGasForContractCall`. Directly after that I make a call `manualRelayToDestChain` providing the hash of transaction on Ethereum, my private key and provider. The response I receive is following:
undefined says 
undefined says Could you please help me with that? What could I possibly do wrong here?
undefined says also tried setting useWindowEthereum to false, got following response:
undefined says 
undefined says ok, know my transaction is approved üôÇ  but I'm not sure, is it due to calling manualRelayToDestChain
undefined says Hi, is it possible to transfer message between evm to cosmos chain. I can only find evm to evm, or ibc transactions documentation. Can someone refer me to code example/doc.
undefined says not at the moment, but should be coming soon.
undefined says @Axelar Builder Happening today! Join us for this week's Axelar Learn session: Designing Multichain dApps, featuring Jeremy from Moonbeam :Moonbeam: 

This session will cover the architecture of cross-chain dApps and how it differs from that of traditional dApps in web3 üõ†Ô∏è 

üóìÔ∏è  Today, Thursday October 20th

‚è∞  1pm EST

üîó  https://youtube.com/watch?v=Fmk0F64cK3k
undefined says In more exciting @Axelar Builder  news: our blog post covering Axelar's Circle integration is live! 

What are some novel use cases this partership will enable?

üõ†Ô∏è **Seamless cross-chain swaps:** users will be able to execute cross-chain swaps across assets living on distinct chains [ETH -> AVAX]. To do this, ETH can be swapped for USDC which is routed and swapped for AVAX on the destination chain. Routing & execution on the destination chain is abstracted from the user, delivering a seamless 1-click experience. The LPs never assume any bridge risk, as they hold native ETH, USDC and AVAX on both chains. 

üõ†Ô∏è **One-click deposits:** Open a position on a perpetuals exchange like dYdX, which lives on its own application specific chain, from anywhere. On a source chain ‚Äî Avalanche, for ex ‚Äî the user issues a single transaction which sends USDC to the dYdX chain & opens a position on behalf of the user. To close their position, the user later issues another transaction from Avalanche, which on the backend gets routed to the dYdX chain. The user never has to switch wallets, or even know that dYdX is on a different chain. No slippage is incurred.

üõ†Ô∏è **Cross-chain NFTs:** A USDC holder on Solana wants to buy an NFT listed on OpenSea on Ethereum. The user issues a txn from their Phantom wallet, the NFT is purchased on OpenSea on Ethereum, and delivered back to the user‚Äôs Phantom wallet on Solana. The user saved time & effort by not needing to interact with an Ethereum-compatible wallet (e.g. MetaMask) and can now use their NFT within Solana applications.

üëâ  Read the full article here: https://bit.ly/3Ssbgne

üëâ  Watch a demo covering Native USDC Cross-Chain Swaps here: https://www.youtube.com/watch?v=RyQkEcM1nKE
undefined says I've just tried to follow the instructions here: https://docs.axelar.dev/node/config-node and found that they didn't work for me. I'm going to attach the output of my log files. Hopefully someone can help me.
undefined says How do I receive aUSDC test token from the faucet here on discord?
undefined says Hi Axelar Dev Support Team

Reposting this since my team didn't get an answer.

My company is interested in running a Axelar node and becoming validators.

What are the economic incentives for node operators and validators?

We went through the docs, but no information on rewards was provided: https://docs.axelar.dev/node/basic

We've built Ethereum staking machines and miners in the past, so we already have the tech infrastructure in place.

Thanks.
undefined says Hey, see the pinned post in #üíß‚îÇfaucet:
https://discord.com/channels/770814806105128977/1002423218772136056/1002748255307841618
undefined says Hey, see the link below for more details on how to become a validator and other details such as rewards, delegations, etc.
https://discord.com/channels/770814806105128977/770814806105128980/1029997456303341598
undefined says Anyone able to help with this?
undefined says Hey, can anyone send some testnet axelar tokens to this address please axelar1p3aq6v79jknar2p335tuqm6aezkuvfvd6n7spe ?
undefined says is it for Lisbon? If so, check out our page üòâ 
https://www.allthatnode.com/faucet/axelar.dsrv
undefined says I have already requested tokens, but I already used them
undefined says from our website?
undefined says Yes and also from the hosted faucet by axelar
undefined says Hi guys, I was wondering is that possible to get the data from another network using Axelar?  Let's say I'm on moonbeam and want to call some view method on polygon network. Is it possible?
undefined says Hello everyone. We are currently running into some difficulties acquiring sufficient amounts of goerli eth for our testnet relayer to ethereum so if you have some that you can spare and would like to help keep our ethereum testnet relay functionality alive, please send funds to 0xd14ae98c72ebdd7557de75a251f4261f3554f5ec -- your kindness shall not be forgotten!
undefined says Hello Expert!
undefined says how to setup axelar on local network? i want to check specific action about axelar code.
undefined says For local GMP, please refer to: https://github.com/axelarnetwork/axelar-local-gmp-examples
undefined says i want to check cosmos sdk module internal action.. haha
undefined says @sergey Hello sergey. can i send dm? i am not spammer üôÇ
undefined says @talal | DevOps @ Axelar
undefined says I am analyzing axelar network for bug hunting.
I want to prove my theory about code through runtime but i met so many error üò¶
can you share dev environment?
undefined says Are you trying to setup a node?
undefined says Hey, sent over what I was able to find across multiple old wallets, around 40ETH. Hope that helps.
undefined says Yes, isn't that obvious from the page I was reading?
undefined says @everyone we need some goerli eth for our testnet relayer! give it some ‚ô•Ô∏è  and send some test coins to continue building on the testnet: `0xd14ae98c72ebdd7557de75a251f4261f3554f5ec`
undefined says OK
undefined says ok
undefined says Sent 1 ETH
undefined says Thanks so much!! üëç
undefined says Rok,

Exactly what we were looking for!  Thanks Bro!
undefined says Sent 25
undefined says Can someone please help me with this problem, or at least try to recreate it? If I'm having it, other people will too.
undefined says I donated some Goerli ETH!
undefined says are you attaching to the testnet or mainnet? from the snapshot?
undefined says I was trying to attach to the `testnet` (not `testnet-2`). I had not yet downloaded the snapshot. What is weird is that it's complaining that   

```
unknown field "gateway_code" in types.Params
```

If I look inside `~/.axelar_testnet/config/genesis.json` I can clearly see `gateway_code` in there as an attribute.

The version of axelard that was downloaded by the `setup-node.sh` script was `axelard-v0.26.0-patch`. Is this a new update that doesn't understand the `gateway_code` attribute any more? 

Has anyone tried `setup-node.sh` from a clean system lately? Maybe this happens for everyone.
undefined says @sergey I am analyzing axelar network for bug hunting.
I want to prove my theory about code through runtime but i met so many error üò¶
can you share dev environment?
undefined says Please answer my request üôÇ
undefined says Sent ‚ù§Ô∏è‚ù§Ô∏è
undefined says you need to first download and setup the snapshot (without that the node can't start from the latest version)
https://docs.axelar.dev/node/join#download-the-latest-axelar-blockchain-snapshot
undefined says We don't have enough docs on running your own local axelar environment yet (it's a bit of an involved process to set it up from scratch). Feel to submit a bug report without a PoC in that case, just point out the specific approach and relevant code that would be triggered.
undefined says Please, use manual setup. 
https://docs.axelar.dev/validator/setup/manual
undefined says what is the difference between approved and authorized ? Anyone could tell me?
undefined says hello @Milap , critical vulnerability report needs additional POC in immunefi.
But, i could not set environment for POC T_T
can you help me?
undefined says also If I only write a report without POC, axelar team will waste time to prove it.
undefined says that language is not ideal. first, the validators vote on the transactions from external chains. if they "approve it", they co-sign a transaction authorizing the request on the destination chain. anyone can post the transaction on the destination gateway and subsequently execute it.
undefined says Hi,members!
I‚Äôm a Web3/Blockchain developer and was wondering if anyone here is in need for a developer to help them out with their projects. Feel free to DM me for more info. Thanks all!
undefined says Thank you so much Ôºåyour statement is really helpful. I still have more questions about Axelar.
undefined says 1. Why should the gateway contract be controlled by a secret key? Shouldn't it be controlled by the contract code?
2. All cross-chain requests will be submitted to the Gateway contract of the source chain, so can‚Äôt PoS validators know all cross-chain requests by monitoring  the Gateway contract? Why do they need Relayer to relay cross-chain requests?
3. Is the verification of the message one round of voting or two rounds of voting? Is the quadratic voting a separate round of voting?
undefined says Has anyone seen this video on axelar?
https://www.youtube.com/watch?v=pAxuQ7PIl8g
I'm trying to reproduce the same but I'm having problems with the testing.
Can someone help me?
undefined says In Axelar, how does the target chain know the current set of PoS validators
undefined says Hi guys, want to repeat my question üôÇ  
Is it possible to get the data from another network using Axelar?  Let's say I'm on moonbeam and want to call some view method on polygon network.
undefined says Obvisously that is possible.Axelar is a AMBÔºàAny-Message-BridgeÔºâ.
undefined says That's amazing! Is there any info about it in documentation? I don't see any information or examples here https://docs.axelar.dev/.....
undefined says I cannot find it either.
undefined says Aha, ok. So how can I make such a call? Should I query specific contract like Gateway or there is a way to do it with Axelar sdk?
undefined says Would be very grateful if somebody would give any clue üôÇ  üôè
undefined says paying for gas with tokens doesn't seem to work with testnet. It stays on pending approval forever. Tried this with aUsdc and wFTM
undefined says buddy just answered your dmüëçüèº  i think that video is outdated because that code is now axelar-gmp-local-examples repo and testing looks different
undefined says Hello everyone! üëã
undefined says @Axelar Builder The Axelar testnet services will go through an ***infrastructure*** upgrade, maintenance window is **~10:00 AM - 11:30 AM EST (3:00 pm - 4:30 pm UTC), Tuesday Oct 25. **

No actions are required from you. 

The Axelar testnet are expected to be up during the maintenance window, but you may experience brief disruptions with the services (faucet, sentinel, xchainbox, ...)
undefined says hi everyone. Is it possible to move funds from a pool in ETH mainnet to another pool in another chain using Axelar? not necessary transfer the token pair, it can be just one. I think the flow can be:
1. remove liquidity from ETH pool (you get 2 tokens)
2. call target chain's pool contract to add liquidity. This step maybe can be done via General Message Passing to call pool's _addLiquidity_ function? but the tokens should be transferred to target chain prior that, right?
thanks!
undefined says Infrastructure upgrade is complete, everything is back online
undefined says Hi! I'm building a project for moralis hackathon where user can create their NFTs and I want to use Axelar to provide cross chain minting capability. I had gone through the tutorial of nft linker provided in Axelar docs ( https://www.youtube.com/watch?v=pAxuQ7PIl8g )
I want to know that when any user create nft, do they need to upload that nft contract to all the chains or it can be in any of the chain? As obviously I have to upload nft linker on all the chains. I have some more questions too.
undefined says Hey! Glad to hear you're building with us- to answer your questions you create an NFT on one of the chains, say Ethereum, and deploy NFT linkers on all the chains you want to support. You mint NFTs on Ethereum, and anyone can transfer them to any other chain using the NFT linkers.

Hope this helps! Let us know if you have any other questions :Axelarstrong:
undefined says @Axelar Builder For anyone who tuned into our AMA "Composable USDC: Axelar & Circle talk USDC + General Message Passing"-

Here's the ‚Äúteleportation‚Äù that is Composable USDC in our developer guide:

üìç https://docs.axelar.dev/dev/guides/example-composable-usdc?utm_source=axelarcore&utm_medium=twitterspaces&utm_campaign=circle

And for anyone who missed it live, here's the recording: 

üîó  https://twitter.com/axelarcore/status/1584937929205743618?s=20&t=35Uro7f46uHrNBvGHra8dQ
undefined says Hey  devs    I‚Äôm  currently  working  on  cross chains token   transfer Dapp
  While  going through  docs  i  found  that there  are  two  ways  of  a doing  this 
1-  using sendToken  method  on axelar gateway contracts
2 -  generate  and  fund  one time deposit  address
  So  my  question  is   if  i  want   to  use  first  method  (sendToken method)
  There  is  no  need  to  generate  address  automatically a token  will be  converted  and sent  to destination address ?
  My  second  question :    interacting  / invoking  sendToken  method  is  there  ABI  for this  function  ?
undefined says 1. yes, no need to generate a one-time address if u are using the sendToken method
2. yes, you can grab it from the gateway contracts that are verified for any evm block scanner we support. for example, for ethereum, you see here (https://docs.axelar.dev/resources/mainnet) gateway contract for ethereum is 0x4F4495243837681061C4743b74B3eEdf548D56A5. check on etherscan (https://etherscan.io/address/0x4F4495243837681061C4743b74B3eEdf548D56A5#code), you will find it is a proxy contract. and then you can get the ABI for sendToken by looking for the ABI on the underlying implementation contract: (https://etherscan.io/address/0x212207006e5ae344481fa34a6f4960eb0f302ff5#code)
undefined says You have given me a very clear answer, and I really appreciate it.üôèüèª 
 One  more  question  :   my  dapp  i  want  it  to  be  able  to  transfer  cross  evm chains  so  for  each  chain  i  will have to  grab  its gateway contracts  for  example    get  polygon gate way   get  moonbean  gateway  etc  or  just  grabbing  one gateway  is  enough  and  i will be  able  to  move assets cross chain  ??
undefined says or  the  contract  ABI  is  the  same   so  I'll have  to  switch  gateway  addresses  depending  on  which  chain  I  want  to  transfer  assets  from   for  example  if  I'm  sending  USDT  from polygon   to  Moonbean     i  change   the  contract  address  to  polygon gateway ?
undefined says And is   Axelar   network  support  smart contract  wallets  ?  like   web3Auth  or  magic link  ?
undefined says Hey, for the current Moralis hackathon that is sponsored by Axelar.
Can we use Squid https://0xsquid.com/ or do we have to use Axelar directly? @Canh T
undefined says not sure i understand the specific ask, but yes the ABIs for the gateway are the same across all the EVM chains. when you're calling the gateway methods on the src chain, you don't actually need the gateway contract addresses for the destination chains. you only specifcy the destination chain by name in the first param of hte sendToken method: https://docs.axelar.dev/dev/build/tokens#call-sendtoken. hope this helps
undefined says not famililar with these. any evm wallet with standard json rpcs (e.g. metamask) will do
undefined says squid is a close partner to us that leverages axelar's gmp protocol. so yes, s/b good to use squid
undefined says @Axelar Builder The Axelar testnet services will go through another **infrastructure** upgrade, maintenance window is **~11:00 AM - 12:00 AM EST (3:00 pm - 4:00 pm UTC), Thursday Oct 27. 
**
Same as last time, no actions are required from you. 

The Axelar testnet are expected to be up during the maintenance window, but you may experience brief disruptions with the services
undefined says Can we build dApp where investor will buy tokens from multiple chains in one click or approval?
e.g. 
Mutual fund of 30 coins, where 10 coins are from Polygon, 10 coins are from Cosmos and 10 coins are from Eth.
undefined says I  tried  to  send    2  aUSDC  from  Ethereum  to  polygon    but  in  my  polygon  wallet   aUSDC  balance  is 0     here  tx hash  https://testnet.axelarscan.io/sent/0xd3df0ad181811429f93cfd941ece8bd2d03027e1b8b7691b54a73c24bae501f8
undefined says Hello. Please add this contract address to your Polygon Network

`0x2c852e740B62308c46DD29B982FBb650D063Bd07`
undefined says Hi Guys, can you give me a hint? Where can I see the amount of gas per byte in the various networks connected to the axelar ?
undefined says When I set the uri, they want a {id} param. what does that mean?
undefined says When I set the uri, they want a {id} param. what does that mean? @developer
undefined says Can any provide guidance on where I can start in terms of relevant tutorials and docs?

Here are the dApps I've** already** built. I'd likr to Integrate with Axelar:

**1. **Allow Cross-chain payments and transfers:  Programmatically deposits & withdraws into DeFi contract.  Does token transfers to EOAs

**2. ** Allow Cross-chain DAO governance: voting, delegation, etc


@Canh T @kabugu @Pavel-LV | C.Sailors
undefined says Infrastructure upgrade is complete
undefined says @Axelar Builder Happening now! üëá 

Tune in for this week's Axelar Learn session covering Crypto Borrowing Cross-Chain with Prime Protocol!

https://www.youtube.com/watch?v=DFIjUiAaA7c
undefined says Is Prime Protocol CeFi or DeFi?
undefined says I'm  not  sure  let's  wat  for  @Canh T
undefined says It‚Äôs my first time to interact with smart contracts I  have  never  interacted  with proxy contracts,   I‚Äôm  currently  trying to  interact / invoke  sendToken function    but  I end-up  getting  this  error   CANNOT  ESTIMATE GAS FEES‚Ä¶‚Ä¶     Tried  to  ask   and  google  about  this  error Most of answers point that there is something I am doing wrong in setting the function parameters on the front-end

  Here  is  how  I‚Äôm  doing      for  this  example  I‚Äôm  trying  to   send  2 aUSDC  where  source chain  is  ethereum-2    
   1 -  I‚Äôm  copying  ABI  from  this  gateway   contract  :  https://goerli.etherscan.io/address/0xe432150cce91c13a887f7D836923d5597adD8E31#code
   2 -  second  step   I‚Äôm  copying  this contract  address :    0x05823c334150a48acd5d325fba16147c21ba3653 
  And  using  it  as  smart contract  address
3 -  I‚Äôm  filling  all  required  param  
     `  -  destination  chain    i  added  ‚Äúpolygon‚Äù
        -  destinationaddress :i added  my wallet  address
       -  asses symbol   i added ‚ÄúaUSDC‚Äù
        -  amount  : 2000000`
undefined says but   when  change  metamask  network  from  goerl testnet  to  polygon      metamask  i  get  metamask  pop-up  to  comfirm  transaction        metamask  network  should  be  connected  to  source chain  or  destination chain  ??
undefined says Here  is  how  I'm  filling  parameters      however it doesn't worküòì
undefined says I have quite a bit experience w/smart contracts. I can most likely you help on that part.  

Not familiar with Axelar, so we can help each other and collab on that.

Let me know if it's cool to DM you. Otherwise, we can chat here when I have time.
undefined says I will really appreciate your help
undefined says Let's  DM
undefined says Couldn't find it in the docs:
How does Axelar deal with Reorgs? Do transactions wait for confirmations before being relayed? How many confirmations are required for each connected chain?
undefined says @Playwo  Do you have any idea what the problem is, what I'm doing wrong?
undefined says Here
undefined says link  to  docs    https://docs.axelar.dev/dev/intro
undefined says Defi
undefined says There are no guides on how to make any completed application ofc, but the docs are generally quite good https://docs.axelar.dev/dev/gmp-overview
undefined says Can I get a refund if I deposit the wrong coins to the bridge's deposit address?
undefined says I have deposited ETH to the address created by the bridge.
I deposited ETH not WETH
In this case, is there any way to get a refund please tell me
undefined says You already opened the ticket right? Hope Axelar's support engineers will be able to help you üôÇ
undefined says Yes! it's me
I am very glad to have your quick reply
undefined says there  are  3  states  for  tx  ` send token `  ` approved `   `signed` &  ` RECEIVED`      what  does   signed  and  recieved  means  ?
undefined says @Axelar Builder The Axelar mainnet services will go through an **infrastructure** upgrade, maintenance window is **~11:00 AM - 12:00 AM EST (3:00 pm - 4:00 pm UTC), Monday Oct 31.** 

No actions are required from you. 

You may experience brief disruptions with the services during the maintenance window
undefined says Without using SDK.
How can we send multiple values in a single payload? I am using the "Hello World" example for reference where we are setting the value of a single string on the destination chain. Is there a way to send multiple values across so we can change multiple values on the destination?

And also, I want to update state(some values) of both contracts when a user calls a function on either of these. Should I put "execute" function inside both so it may gets called whenever a data change happens on one the other contract's respective gateway update the values of other contract too?
undefined says Hey, so you can "abi encode" an array of strings (or any solidity compatible types that you can pass as arguments) so that data can be passed to the destination chain. Regarding your second question if you want to update the state on the source chain as well you can just update it without _execute because you have access to the source smart contract state
undefined says Thanks vlad, your masterclass also helped alot
Also, i am having a little problem trying to send a txn from polygon to any other chain. It forwards the gas to the gas reciever and that transfer to the relayer on polygon but nothing happens on the destination chain (goerli, bsc). Only having this issue eith polygon as source chain.
Is there an simple way to guess the gas required to send with the txn? for tesnets?
undefined says you need to pay gas to the gas receiver contract if you want to use the relayers.
undefined says https://docs.axelar.dev/dev/gas-services/pay-gas
undefined says Hi guys ! Where can I see the baseFee ? As I understand, Gas is not calculated per payload byte. Does the cost of gas increase with the amount of information transmitted, and how can it be calculated? thank you in advance@PlasticGoat@ildar (Never DM you first)@Rodin10 (Will never DM first!)@InCase@Hoan Wu
undefined says Please don't tag random mods, your questions will get answered by someone
undefined says five days ago, no one was teg, no one answered üôÇ
undefined says hi, we're checking, but it looks like you haven't paid gas for this gmp call yet. if you have already paid, please send us the tx hash. so we can investigate it further. thanks.

by the way, we recommend to pay gas in the same transaction as the contract call. it's the best practice. please see this post for more info: https://discord.com/channels/770814806105128977/955655587260170272/1032015519307538492
undefined says hello, the gas amount is estimated based on the amount needed for executing on the destination chain [which depends on each contract logic and data transmitted], plus the base fee on the source chain. For now, the base fee is a static value per chain combination. You can check it on each GMP call on axelarscan ui or the axelarscan api https://docs.axelarscan.io/general-message-passing/getFees.

The sdk summarize those estimated amounts for you.
undefined says Why does the getGasPrise method show 2 gas payment options ? that is, will the user be able to choose which network asset he wants to pay for gas with ? In this function is the base gas ?
undefined says I'm interested in the way gas is evaluated specifically for messaging
undefined says Typically, the gas payment has to be done on the source chain, while the execution is done on the destination chain. So, some value needs to be converted automatically by the relayer services. The API provides the gas prices for converting it back and forth between those two chains.

By the way, I just want to point you to the `baseFee` . It is in the `getFees`, not the `getGasPrice`.
undefined says If I send a message from Avax to Moonbeam it will be basic gas, right ?
undefined says gas to pay on source chain = (the gas estimated from the destination contract's execute method * source token gas price) + source base fee. 

The sdk calculates it for you. the code example can be found here: https://docs.axelar.dev/dev/gas-services/pay-gas#overview // https://docs.axelar.dev/dev/axelarjs-sdk/axelar-query-api#estimategasfee
undefined says source token gas price) + source base fee. 

Where can I see these values, specifically for axelar?

For example Celer has deployed a messagesBus smart contract in each supported network. it is responsible for crosschain messaging. so if you go to this smart contract, there are specific numbers listed: 
these are the numbers i need in axelar, not just the method that calculates them
undefined says for now, we provide those values via the api: https://docs.axelarscan.io/general-message-passing/getFees.
source token gas price: `source_token.gas_price`
source base fee:  `source_base_fee`

we don‚Äôt have a contract for this yet, but in plans.
undefined says Hi, just to double confirm that this part of the solidity pay the gas in the same transaction right?
undefined says infra upgrade is complete for mainnet

FYI, there will be another infra upgrade for mainnet in coming days and that would be the last one. Thanks üôÇ
undefined says yep gateway and gas receiver should be called in the same TX
undefined says Hi,

Can anyone share a link to @vladwulf 's Master Class?
undefined says a lot of tech videos are here: https://www.youtube.com/playlist?list=PLh_q0hSKS_y23UECn5GJML0BDhJDDiiiL
undefined says https://www.youtube.com/watch?v=iHRebV2NpvI&ab_channel=MoralisWeb3Community
undefined says Axelar always calls the same _execute function on the destination chain
What if I want to set a conditional here? Like sometimes I want to update a variable totalNumber on the destination chain so I send it in the payload and define the logic in the _execute
But I also want to have another variable that I can update on the destinationChain suppose lastMember.
Currently I will have to update the totalNumber even when I only want to update lastMember because all the logic for axelar call has to be defined in a single function thats executed top to bottom.
1. Do I have to use conditionals inside _execute?
like, have something in the payload that determines which if else code block to call in the function??
or is there a better way using Axelar?
undefined says You can put any logic in the _execute or _executeWithToken function. It's really up to you. Using conditionals and update the right variables can work. You can also pass extra-metadata to help you with your use-case in the payload. Here is an example of a complex _execute function https://github.com/axelarnetwork/axelar-local-gmp-examples/blob/main/examples/nft-linker/NftLinker.sol#L88
undefined says For scheduling periodic tasks, should we consider ChainLink Keepers or any other third party service or is that functionality supported by Axelard SDK itself?
undefined says @Axelar Builder The Axelar mainnet services will go through an **infrastructure** upgrade, maintenance window is **~11:00 AM - 12:00 AM EST (3:00 pm - 4:00 pm UTC), Wednesday, Nov 2**

No actions are required from you. 

You may experience brief disruptions with the services during the maintenance window

(This will be the last infrastructure upgrade)
undefined says Thanks Bros... I love you guys! :Axelarstrong: üí™

@0xEngineer @sergey
undefined says Hey  Devs  is  there  any  faucet  for  WMATIC  / WBNB /  WFTM  ?
undefined says what types of tasks are you referring to? listening for events and reacting to them?
undefined says Tasks like: Time based triggers for periodic tasks like compound staking, review the balances of a list of addresses on another chain and automatically top them up, automatically compounding arbitrary yield farm reward tokens back into an initially deposited asset!
undefined says Hi, anyone know if I can pass custom data/params to gateway.callContractWithToken?
undefined says yes payload can be anything.
undefined says ye you'll need to use whatever you use for triggers on that chain. That trigger can then make a cross-chain call to update contract state on another chain via Axelar.
undefined says you can get matic and just swap.
undefined says You already opened the ticket right? Hope Axelar's support engineers will be able to help you
undefined says Thanks Cyrus. This looks like a potential bug in the execution service. I'll raise it internally and get back to you

update: we are working on a fix
undefined says hi Cyrus, it's a known issue on the testnet execution service. we're working on a fix. in the meantime, you can manually execute it (for testing purposes on testnet) if you encounter the issue. here's the guide:  https://docs.axelar.dev/dev/monitor-recover/recovery#manually-execute-a-transfer.
undefined says in  docs  there  is  no iformation  on  how  i  can  wrap  BNB
undefined says For this WBNB token
https://bscscan.com/token/0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c
Check our doc on how to wrap:
https://docs.axelar.dev/resources/wrapped-tokens
undefined says I tried  to  google  contract  address  for  testnet WBNB   I did  not  found  it   can  you  share  it  ?
undefined says in  ur  docs  you  WBNB  is  not  included
undefined says Hey Team,
I was doing a node setup for axelar, for that I need a full snapshot file which can give everything from genesis block, 
I wasnt able to get this on the documentation of axelar, by quick sync I am only able to get the latest snapshot (ref - https://docs.axelar.dev/node/join), 
So can someone from the engineering team help with the full snapshot file because following the genesis sync approach on docs is not efficient.
undefined says The testnet WBNB address is here: https://testnet.bscscan.com/address/0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd
All addresses are linked here: https://docs.axelar.dev/resources/testnet#assets
undefined says You can find the full snapshot for mainnet on quicksync, it's labelled `axelar-dojo-1-archive`
undefined says Yes I used this but I am not getting the older blocks
undefined says Only getting the blocks above a particular blockheight around 4200001
undefined says If there is a full snapshot that can give me from genesis that would be of great help
undefined says I've pinged the quicksync team about it. We also have archival RPC endpoints available if you don't want to run your own node: https://docs.axelar.dev/resources
undefined says Thank you for the info Milap but for now the priority is to setup our own node and get the data
undefined says Please can you let me know when quicksync team get back to you
undefined says Yep
undefined says https://axelararchive-rpc.quickapi.com/block?height=5000
undefined says The snapshot should keep from block 0
undefined says we used that to push the archive nodes that we have public
undefined says Got some blocks for me to test and i can try it out on the snapshot node to see what i get out from that
undefined says Hey @Canh T , I have sent you DM in some private regard. Many thanks for your answer üôÇ .
undefined says Infra upgrade is complete without issue üôÇ
undefined says Hello all ! Do you know where this parameter is taken from to calculate the cost of gas ?
undefined says @here be aware that the fantom testnet seems to be stuck at the moment, so cross-chain transfers/messages to and from there won't get processed until the network resumes operation
undefined says sdk https://docs.axelar.dev/dev/gas-services/pay-gas
undefined says Yeah? Where do you see the value I'm trying to find?
undefined says Hi guys, can somebody help me? I try to find some mainnet realisation of axelar, but i only  found robot nft and axelar token. Does anybody found projects with axelar implementation ?
undefined says Hi,members!
I‚Äôm a Web3/Blockchain developer and was wondering if anyone here is in need for a developer to help them out with their projects.
What I can do:
- Front-end Development (Pixel-Perfect, RWD)
  React, Next.js
  Vue, Nuxt.js
  Styled-components, Tailwind CSS, Material UI, Chakra UI
- Back-end Development
  Node.js, Express, Nest.js, Typescript
  Laravel, Codeignitor
  MySQL, MongoDB, Firebase
- NFT collection generation from your artwork
- NFT minting / staking dapps development
- White-label NFT marketplace development
undefined says Hey! We have a careers page that I‚Äôd encourage you to submit your resume to- that way the hiring team can look it over: 

https://axelar.network/careers
undefined says hey, the gmp base fee is set by our relayer services. for now, we provide those values via the API and axelarscan UI, as mentioned earlier in this post: https://discord.com/channels/770814806105128977/955655587260170272/1036631513510457365

unfortunately, we don‚Äôt have a contract/docs for this yet, but we plan to add it soon. cc. @_j
undefined says Hey guys!
We are developing a protocol to get data from other chain's smart contracts on smart contracts
We believe that we can develop more flexible Omin Chain Dapps in combination with messaging
Here are the details
https://medium.com/@futaba_omni/futaba-lite-paper-eb6a5f7d6f09

I would especially like to hear your opinion on the signature part
undefined says Hi, below are few examples:
- MintDao: https://axelar.network/blog/the-axelar-robot-nft-collection-cross-chain-nfts-minted-in-partnership-with
- Osmosis: https://axelar.network/blog/osmosis-is-building-a-cross-chain-liquidity-layer-with-axelar
- Heroes of NFT: https://axelar.network/blog/heroes-of-nft-adopts-axelar-to-build-the-cross-chain-metaverse

You can also find other updated projects & articles at https://axelar.network/blog/categories/news // https://axelar.network/blog/categories/technology. Hope this help.
undefined says Yes, I generally understood how your services count gas for sending a message. I only have a question of what the destination_base_fee is made up of
undefined says the gas fee for axelar network for confirmation of the transaction plus gas fee to post the transaction on the destination chain. [all in all, "validation & relaying" services].
undefined says You're telling me in general terms. I want to know exactly, in numbers.
undefined says source _base_fee = (destination_token_usd_price/source_token_usd_price)*destination_base_fee

What you described can be calculated using this formula. and this data can be seen through the API. But what does the destination base fee come from? that's my question
undefined says hello guys, Keve here üëãüèª , web and game dev
undefined says excited and looking forward meeting you all
undefined says Hello üôÇ
undefined says are you building on axelar? I had some questions
undefined says @Axelar Builder 

Join us in less than an hour for our this week's Axelar Learn session!

Axelar team members Stephen Fluin and Vladimir Agaev will be walking through Axelar's Sandbox, a rapid prototyping sandbox for cross-chain dApps :Axelarstrong: 

üóìÔ∏è  Today! Thursday, November 3
‚è∞  1pm EST

Tune in directly through the link belowüëá
https://m.youtube.com/watch?v=GjLNHG6JMKo
undefined says @Team I have question in regards to Moonbeam Connected Contract Hackathon. Who can I contact please? Many thanks in advance. EDIT: SOLVED
undefined says it comes from relayer analysis on what it costs to relay and post a transaction on the destination chain on average and is a changing value. no fixed value to point to atm unfortunately.
undefined says Hey Milap and engineering team, 
I tried using the archival RPC endpoints available on "https://docs.axelar.dev/resources", I used https://axelar-rpc.chainode.tech/block_results?height=4254010, the response is not readable, no details about transaction hash, sender address, receiver address, Are there any other API's through which we can get the transactional data?
undefined says I thought ropsten testnet was obsolete. There was no update hereÔºü
undefined says I actually use the goerli networkÔºåThe screen displays ropsten
undefined says destination chain should be `ethereum-2`(goerli), not `Ethereum` (ropsten).
please see the chain name and other references at https://docs.axelar.dev/resources/testnet.
undefined says No, I don't üôÇ
undefined says We're here to answer all of your technical questions! The core team and our moderators can help you out
undefined says Hi, is there any way to do a cross chain approval for erc721 with ContractCall function?
I want to allow my NFT holder to have the ability to initiate the transfer NFT ownership function from any other chain (eg: Avax) than the originate chain (Moonbase).
The NFT is originate on Moonbase, and the current holder and the new owner are reside on same chain: Moonbase as well.
In my case, the function call will initiated from other chain, eg: AVAX
So the holder can remotely transfer his NFT token ownership from non-originate chain.
undefined says You have to decode from base64, @PJ can give more pointers on how they do it for the explorer
undefined says hi Cyrus, here's the guide:
https://docs.axelar.dev/dev/build/5-min-starter-examples#nft-linker
https://docs.axelar.dev/dev/guides/example-nft-linker
undefined says here's how we decode it on axelarscan:
- https://github.com/axelarnetwork/axelarscan-api/blob/main/functions/api/services/rpc/index.js#L111-L206
- https://github.com/axelarnetwork/axelarscan-api/blob/main/functions/api/utils/index.js#L163-L174
undefined says Thank you for your reply but I don't have plan to develop a cross-chain nft with nft-linker.
I am trying to initiate erc721 approve function from another chain with axelar gateway ContractCall.
However when the message reached the destination chain, the msg.sender is no longer the owner.
So I couldn't call erc721 approve function in the destination chain.
Any ideal solution / approach for this issue?
undefined says ah, sorry i missread it. let me double check it with team members.
undefined says I'm greatly appreciate you help!
undefined says Started a thread.
undefined says Hi
I have an issue in working with sendToken method.
I use it like this:
`const txHash: string = await contracts.srcGatewayContract
    .sendToken(
      toNetwork.toString(),
      recipientAddress,
      srcToken,
      ethers.utils.parseUnits(amount, 6),
      {
        gasLimit: 750000,
      }
    )
    .then((tx: any) => tx.wait())
    .then((receipt: any) => receipt.transactionHash)`

`const srcGatewayContract = new Contract(
    fromChain.gateway,
    AxelarGatewayContract.abi,
    from`

But after I'm approving the transaction on metamask, the transaction will be failed. Can anyone help me?
undefined says hey does anyone know how weth/wbtc are being brought to sui?
undefined says i work with a team building a perp dex on sui currently, we were looking to figure out how axelar is bringing wbtc and weth to sui, is there anyone who can help me out?
undefined says Hi. As far as I know, Sui is not launched yet. If there's anything like that on your request, the team will be sure to post an announcement.
undefined says we're working on a devnet instantiation. DM if you want to get access when ready.
undefined says hi, what/where do i have to configure to deploy one of the example contracts to testnet?
undefined says Looks like these are outdated: https://github.com/axelarnetwork/axelar-local-gmp-examples/blob/main/info/testnet.json

And don't match https://docs.axelar.dev/resources/testnet
undefined says You first need to submit an ERC20.approve tx to the axelar gateway to allow it to spend that amount from your account when sendToken is run.
undefined says Thanks, we'll update them
undefined says Thank you üôè
undefined says Thank you
I also did this:

`const signer = provider.getSigner()
const srcERC20 = new Contract(srcTokenAddress, IERC20.abi, signer)

await srcERC20
    .approve(
      contracts.srcGatewayContract.address,
      ethers.utils.parseUnits(amount, 6)
    )
    .then((tx: any) => tx.wait())`

And I can approve it on meta mask without any error.
also I can see the transaction on for example avalanche testnet explorer but the status is failed.
undefined says Hello. How exactly is it decided if an EVM vote is YES or NO? I see YES and NO votes on Axelarscan. What is the main logic here?
undefined says Validators submit vote transactions to the network, and Axelarscan indexes those votes for each poll. If the list of events is nonempty, the indexer treats it as `Yes`, otherwise `No`. If a validator doesn't submit a vote transaction for that poll, the indexer tracks the validator as `Unsubmitted`. 

Example transactions:
- vote YES: https://testnet.axelarscan.io/tx/08234C9720D0AD61F0FA4AFDF26FF5C6D00AA91D9C5F8AAE75A2F0F04CBD7EE5 
- vote NO: https://testnet.axelarscan.io/tx/9960F0AD4089C2261FF1576B76AE61A94D5E529CECABB1120980EDFB30B2CC1F
undefined says The executor shows the "yellow" tag when its attempt results in a revert or other error, such as insufficient gas (out-of-gas) or an invalid opcode. It could not 100% guarantee what's the root cause of the returned error. In most cases, it is an error in the destination contract logic; however, it can also occur during gas estimation. Please see this reference for more details: https://docs.ethers.io/v5/api/utils/logger/#errors--call-exception

You can try manually executing it once to confirm. If it's still reverted, I'd recommend debugging the contract following this guide: https://docs.axelar.dev/dev/debug/debugging-your-smart-contract
undefined says Thank you, will definitely try out tenderly
undefined says would love to tinker around with it, dming u
undefined says added as friend
undefined says thanks you can share axelarscan codes for it? and what about heartbeats? Does every validator broadcast heartbeat in the same block? How do you determine if some validator has a failed heartbeat?
undefined says This article explains some detail about heartbeat https://medium.com/@axelar-foundation/inflation-and-transaction-fees-on-the-axelar-network-d56ea9e2c142
hope this help
undefined says Hello! Does something similar to how we can call "SendTokens" for an EVM gateway contract exist for Cosmos chains or are we limited to only IBC transfers to pre-generated deposit addresses? I cannot find anything in current documentation or examples to suggest this is possible (aside from a _very_ old Cosmos Gateway contract). Might GMP for Cosmos enable this sort of functionality? Looking into how to best integrate with Axelar from Cosmos contracts (either calling send tokens from a contract or possibly generating a deposit address from a contract and not via the SDK/CLI). Thanks!
undefined says We're working on support for GMP on cosmos currently and will update the community once we have a firm date for its release.
undefined says hey guys!
I am interested in developing TSS, is there anyone who knows more about it?
undefined says Hey @PJ and engineering team, I wanted to know how can I fetch the send and recieve transactions of an address! 


I tried using http://{{server_ip:port}}/txs?message.sender=axelar1a6nz2aytfejmn6lmum4xu6ys9lwcqfzxhqu72q with my node setup, but these are not giving me all the  transaction types, there are many apis i tried but nothing seems to be working? Can you please help me with the api so that I can get all the transactional details by apibased directly - on demand using the address!
undefined says Afaik, we cannot get those data via LCD. 

What we do on Axelarscan is subscribe to all transactions on Axelar Network and index them on our end. But unfortunately, we don't provide that kinds of data through our API at the moment.
undefined says right in theory but wrong in usage. a usage example of `event=attribute` is correct. for ex: 
```bash
/cosmos/tx/v1beta1/txs?events=message.sender='axelar1a6nz2aytfejmn6lmum4xu6ys9lwcqfzxhqu72q'
```
https://axelar-lcd.quickapi.com/cosmos/tx/v1beta1/txs?events=message.sender=%27axelar1a6nz2aytfejmn6lmum4xu6ys9lwcqfzxhqu72q%27
undefined says may wanna check https://docs.cosmos.network/v0.46/core/events.html#examples
undefined says but tbh i doubt you can get all transactions with just this event.
undefined says Yes exactly, I am only getting transactions of type delegation and rewards, the actual important transaction where amount is involved is not there like - send receive transfer...etc
undefined says My interest is in getting all the transactions using the blocknumber, but I couldnt find that, so got this api which u have shared for fetching the details using the account address but here also not everything is available
undefined says Can the engineering team help me here with this ? @Milap @PJ @Errorist | Testnet.run @developers
undefined says umm just knowing that this event will only list tx's where the relevant address is the signer - you can get transactions at a certain height but I'm not sure if that's the way you want ü´§  
ex: `/cosmos/tx/v1beta1/txs?events=tx.height=4675986&events=message.sender='axelar1a6nz2aytfejmn6lmum4xu6ys9lwcqfzxhqu72q'`
i dont have a clear answer sorry for that. maybe Pj has a better answer. :pepe_rain:
undefined says hmm https://api-axelar-ia.cosmosia.notional.ventures/cosmos/tx/v1beta1/txs?events=tx.height=4072985&events=message.sender=%27axelar1a6nz2aytfejmn6lmum4xu6ys9lwcqfzxhqu72q%27
if i understood your question correctly, seems possible to get the tx's as you want. 
here is a query example which specific to send attribute `/cosmos/tx/v1beta1/txs?events=message.action='/cosmos.bank.v1beta1.MsgSend'&events=message.sender='axelar1a6nz2aytfejmn6lmum4xu6ys9lwcqfzxhqu72q'&order_by=ORDER_BY_DESC`
or all tx's (for signer addr) https://api-axelar-ia.cosmosia.notional.ventures/cosmos/tx/v1beta1/txs?events=message.sender=%27axelar1a6nz2aytfejmn6lmum4xu6ys9lwcqfzxhqu72q%27
undefined says looking at the tx's there are a few points here i believe, you may need to use pagination. Use an archive node and and if you can't find a specific transfer use the appropriate attribute
undefined says https://api-axelar-ia.cosmosia.notional.ventures/cosmos/tx/v1beta1/txs?events=tx.height=4254010&events=message.sender=%27axelar1mjq48r6435aewerpruwc8up3tz3rzan2ghgl25%27
undefined says https://api-axelar-ia.cosmosia.notional.ventures/cosmos/tx/v1beta1/txs?events=message.sender=%27axelar1mjq48r6435aewerpruwc8up3tz3rzan2ghgl25%27
undefined says If u look into these above api's, the chain id is not axelar
undefined says My question is - Is there an api through which I can get all the transaction at a blockheight? Or an api which gives me all txns given account address
undefined says seems this address is a relayer operator. should be normal to see different chain-id chunks in interchain transfersetc.
undefined says Can you please check with a normal address from explorer and share with me if U are getting all the transactions!
undefined says function _executeWithToken(
        string calldata sourceChain_,
        string calldata sourceAddress_,
        bytes calldata payload,
        string calldata tokenSymbol,
        uint256 amount,
        bytes calldata value_
    ) internal override {
        address[] memory recipients = abi.decode(payload, (address[]));
        address tokenAddress = gateway.tokenAddresses(tokenSymbol);
        (value) = abi.decode(value_, (string));
        uint256 sentAmount = amount / recipients.length;
        for (uint256 i = 0; i < recipients.length; i++) {
            IERC20(tokenAddress).transfer(recipients[i], sentAmount);
        }
        sourceChain = sourceChain_;
        sourceAddress = sourceAddress_;
    }
undefined says i am trying to include the sending message feature in the call-contract-with-token example, hence i am pasting code from the first example to the seocnd one, but i am facing hte error of override function does not override anything can someone please help me with the same
undefined says will do but as i said, not sure about that. dunno if you can do it via this query. but i will see if there is a suitable way for you
undefined says your override needs to be on the internal function `_executeWithToken`. And the parameters you have look off. try and stick to this example: https://github.com/axelarnetwork/axelar-local-gmp-examples/blob/main/examples/call-contract-with-token/DistributionExecutable.sol#L41 (be mindful of function name and number of parameters). i think that's ur issue
undefined says Error: failed to initialize database: resource temporarily unavailableÔºü
undefined says anyone have this problem?
undefined says when running axelard?
undefined says well if so, I think you have already started the node with a command like `axelard start`, and then you are trying to start the daemon service as well.
if so, try: `pkill -f "axelard"`
then start your daemon service.
undefined says I need help please. 
I did a callContractWithToken function from sourceChain Mumbai to DestinationChain Fantom, and it returns success on mumbai scan, but the token does not get to fantom. I checked the transaction hash on axelar scan, and discovered that the CALL APPROVED status hasn't been finalized, and when I click the APPROVE button, an error message pops up "Log: 14583uaxl is smaller than 63499uaxl: insufficient funds: insufficient funds". View attachment üëáüëá
undefined says so the main issue is that i have to incldue the sending message criteria as well
undefined says so i have included both
undefined says _execute and _executeWithToken function
undefined says that should be the way to do it rgt?
undefined says 
undefined says these are my following index.js and the smart contract files
undefined says could you please have a look at it
undefined says i havent changed any of the deploy or test scripts
undefined says could you please tell me wherte i am wrong as i am giving estatimate gas error
undefined says Broadcasting transaction failed with code 5 (codespace: sdk). Log: 14583uaxl is smaller than 63173uaxl: insufficient funds: insufficient funds
undefined says I need help here  pleaseüôè
undefined says Hi mate! Please wait for the team or technical mods for the answer as they live on different time-zone. They will answer your question as soon as they available.
undefined says It may take some time.
undefined says Hey, how can we transfer native assets of one chain to another chain? Docs show examples of ERC 20 but none for native asset except for paying gas..?
undefined says This error means, that you don't have enough axl tokens.
undefined says How can I get some
undefined says On testnet
undefined says please, use #üíß‚îÇfaucet channel
undefined says Pls help me with the command to use for the bot
undefined says Open a keplr wallet, copy the address, then in the faucet channel, type in
axelar your wallet address
undefined says Ok thanks
undefined says Make sure you copy the address when connected to axelar network on the keplr wallet
undefined says You're welcome
undefined says hi @Eme  and @devarogundade , this could be an issue on our end. If you click the `Approve` button, it should trigger a manual relay for the transaction through the Axelar network. No fund is needed on you end for this step. Let me check it with team members, and we'll get back to you.
undefined says I clicked the approve button a lot of times but it still displayed same message
Btw, Does that mean I'll have to manually click the approve button for every transaction that originates from my smart contract?
undefined says Yeah, same experience
undefined says In general, our relayer services automatically relay the transactions. So, nothing to do on your end. But, if the transaction is not relayed and approved by the network, you can still recover it by clicking the Approve button to trigger a manual relay. 

However, you got an error message when clicking the button which  is not expected. It might be an issue with the Approve button. I'll check with the team to find the root cause and will update you once we fix it.
undefined says Okay thanks
undefined says Hey Team, is axelar planning to onboard rosetta setup?
undefined says already have
undefined says They have onboarded rosetta setup?
undefined says Can U please share the links for the steps for node rosetta setup?
undefined says Could you please check this link: https://github.com/axelarnetwork/rosetta-onboarding
undefined says Yes checked, they are still in testnet
undefined says Maybe rosetta implementation is in progress
undefined says and will have to wait for mainnet
undefined says Right?
undefined says hey @Eme  @devarogundade, the issue has been fixed. could you try it again?

please note that gas must be paid in the same transaction as the contract call to be confirmed by the network automatically. Otherwise, you would need to click the `Approve` button on Axelarscan (or via SDK) to trigger to relay the transaction manually. Team will update the relay conditions later with a testnet release.
undefined says Yes, thanks you
undefined says Okay thanks
undefined says Hello please
undefined says get transaction failed on this address 0x98b2920d53612483f91f12ed7754e51b4a77919e
undefined says the constaddress deployer 0x98b2920d53612483f91f12ed7754e51b4a77919e
undefined says 
undefined says transaction is failling
undefined says Can you please be more specific about your problem this way we can assist you better?
undefined says Are Axelar smart contracts able to do cross-chain messaging to any EVM compatible chain?
undefined says Yes, For GMP (General Message Passing) to work, both chain A and chain B must be EVM chains with a deployed Axelar Gateway contract. GMP for Cosmos chains is still under development. here's more details: https://docs.axelar.dev/dev/gmp-overview
undefined says @leonfish(Will never DM first!) great! TY!
undefined says Hi! I just started building on axelar and whenever i try to use the local-dev package it says that some of the required modules cannot be found. It looks like Network.js requires a bunch of files from "../artifacts" but there is no artifacts folder, im guessing because the contracts havent been built. Am i doing this all wrong or is there a way for me to build the contracts inside of this package to generate the artifacts folder?
undefined says I also found a video online by Axelar where they do the exact same thing I have done so far and it seemed to work fine for them
undefined says I just started on Axelar, I used the callContractWithToken method on the testnet, it's been 14mins and it's still pending on "Call Approved".

Is this out of place? Or is there something wrong?
undefined says it takes 15 min XD
undefined says It's 25 mins now üò¨
undefined says An approve button is now visible on the block explorer. But apparently I can't approve from there ?
undefined says Share your transaction here pls, also make sure you sent enough gas for the relayer to automatically call on your behalf
undefined says https://testnet.axelarscan.io/gmp/0x36edfd4141ef7e7d710aa89ae55fd7fee7dc9dfe8ea518ba340d653a486a5717
undefined says I sent 0.4 Matic as gas fees. I assume that should be enough right?
undefined says had gas problems with MAtic, polygon sometimes ask for 1+ dont know why
undefined says I tried again with 3 Matic as gas fee. Same thing
undefined says Still Pending. 12 mins now
undefined says Are you sure you gave the right gateway addresses?
undefined says Yeah. It's pretty much the example template I'm using
undefined says is it possible to give myself more eth in the local dev env?
undefined says Turns out the issue might have been from Avalanche. Changed network and it worked. Although after 25mins
undefined says hey, there's an issue on our relaying services to Avalanche Fuji. team is working on a fix.
undefined says rip üòÖ  It kept me up all night. Thanks a lot
undefined says hey, team is checking it. we'll get back to you.
undefined says you'll need to run `npm run build` or `yarn build` first to compile the smart contracts, then the `artifacts` folder will be generated.
undefined says I guess Goerli and BSC Testnet works flawless
undefined says also the fees on polygon seems too high even touching a whole matic
I think there is some issue with the estimator
undefined says when cosmos GMP can be live?
undefined says No information yet, stay tuned for news announcements
undefined says Hey guys my trx is pending for more than 20 minutes,do you know why? https://testnet.axelarscan.io/gmp/0xf75d91df1e36bf66dc263df72b5142fe206a4ceeb009843616b710146fa3daa9
undefined says I try to bridge from bsc testnet to polygon testnet
undefined says Could you please provide us destination chain and source chain?
undefined says From bsc to polygon.Or do you mean contract adresses?
undefined says from bsc to polygon
undefined says Could you please create ticket and provide us all details: https://axelar.zendesk.com/
undefined says fyi: we're seeing issues in testnet for transactions coming from Binance. root cause is related to RPC issues, and we're workign with our validators to fix
undefined says Why transaction wasn't executed? https://testnet.axelarscan.io/gmp/0xba95ccb204b2dbbf25a86ec9d27ed50a3204d03c24075b68a9ba1f3ad335c12b
undefined says hi, I'm trying to switch my node version from 18 to 16.15.0 to use https://github.com/axelarnetwork/axelar-local-gmp-examples
I'm using `nvm use 16.15.0` but still get an incompatibility error when executing `npm ci`
how to properly switch node version or downgrade?
undefined says afaik there is a issue with the execution service (on testnet ofc), not sure if the problem has been fixed or not. did you try manual execution?
undefined says pinging @_j
undefined says depending on what os you have;
make sure you are on the right bash
undefined says also is everything as expected when you check your node version
undefined says I'm on windows , I'm using cmd , yes when i check node version with "node version" command it's still 18.12.0
undefined says hm not sure about win. but should work. try closing the terminal and opening it again. simple but should be effective üòÑ
undefined says and then check your node v again
undefined says same error sadly, I'll dig more into google to fin solutions
undefined says I simply uninstalled node.js from control panel and reinstalled the 16.15.0 version, thanks
undefined says When we will implement AUTH?
undefined says And you knows if the next upgrade change the unbonding period of 7 days?
undefined says Thanks in advance
undefined says Transaction execution was reverted. Please check the implementation of the destination contract's executeWithToken function. Here are some tools that may help you to investigate and address misbehavior in the destination contract: https://docs.axelar.dev/dev/debug/debugging-your-smart-contract
undefined says update: the issue on relaying messages to Avalanche testnet has been fixed.
undefined says That was the problem with contract,i tried another destination contract and it's woked.But there is no aUSDC on destination contract,do you know why?  https://testnet.axelarscan.io/gmp/0x2e6fe3a4215019ddc2abb90f4e9ad36bd405b7617727df7665d237d16b1d29d0
undefined says Hey @PJ , @Milap , @Errorist | Testnet.run and engineering team, I downloaded the full snapshot "axelar-dojo-1-archive" from https://quicksync.io/networks/axelar.html , I am trying to decompress this snapshot using the command "lz4 -dc --no-sparse [SNAPSHOT_FILE]" as mentioned on docs (QuickSync)

But I get this error again and again "axelar-dojo-1-archive.20221105.1040.tar.lz4: is not a regular file", i tried using "lz4 -d file.lz4", but I keep getting this error.
Can you please help me with a command to decompress/unzip this snapshot so that I can setup my axelar full node?
undefined says you can connect with me  on that stuff @Ritesh
undefined says Recommend you download the file locally with wget and aria2 before trying to unpack to avoid any issues that on the fly unpacking can produce
undefined says I downloaded this 699GB snapshot file with wget only on my node
undefined says Can we connect on zoom? @Chris / ChainLayer
undefined says If you run this (Do take a little time)
sha512sum axelar-dojo-1-archive.20221105.1040.tar.lz4
you should get the output 406df8fc7b24b0b44383fc4e4135fca5c63e6f91c84098cf9319899bd16c1546f346c6f3a697b3756adfc6400d592c0f69f1c00bef5eb5b9937d44146905d0d7
undefined says If not, something got corrupted on the way during downloads
undefined says Default unpacking for local files that we use are:
lz4 -d axelar-dojo-1-archive.20221105.1040.tar.lz4 | tar xf -
undefined says yes after running this "sha512sum axelar-dojo-1-archive.20221105.1040.tar.lz4"
undefined says I got the output as
undefined says 99102960c4eb722ec27b1c58c19775bd17492b05c0c2427b29d5860002fb6761906877e60dd5ce2681ff3a63f0c7b16ad322d461b6993a62ebb10c8a987071af  axelar-dojo-1-archive.20221105.1040.tar.lz4
undefined says What next?
undefined says @Chris / ChainLayer
undefined says at first glance your file is corrupt, i would try to redownload using aria2
undefined says Could you please give me the command to download?
undefined says apt install aria2 -y
aria2c -x5 https://dl2.quicksync.io/axelar-dojo-1-archive.20221105.1040.tar.lz4
lz4 -d axelar-dojo-1-archive.20221105.1040.tar.lz4 | tar xf -
undefined says the checksum stuff is a little more complex, i forgot our own tooling there üôÇ
undefined says i assume a fresh download + that unpack line should do the job for you
undefined says if not we can follow up on it in private
undefined says Sure, I am trying now, if it doesnt work, we can connect
undefined says Awesome!
undefined says Hi,members!
I‚Äôm a Web3/Blockchain developer and was wondering if anyone here is in need for a developer to help them out with their projects.
What I can do:
- Front-end Development (Pixel-Perfect, RWD)
  React, Next.js
  Vue, Nuxt.js
  Styled-components, Tailwind CSS, Material UI, Chakra UI
- Back-end Development
  Node.js, Express, Nest.js, Typescript
  Laravel, Codeignitor
  MySQL, MongoDB, Firebase
- NFT collection generation from your artwork
- NFT minting / staking dapps development
- White-label NFT marketplace development
- ICO/IDO dapps development
- Defi/Dex/DAO dapps development
undefined says @PJ Yo, can you pls check why Polygon contract is asking for so much gas?? Sometimes 1+ MATIC
undefined says Hi guys, regarding `sendTokens`

I want to create a multichain dapp and I want to send tokens around, here I can see the list of tokens, addresses etc:

https://docs.axelar.dev/dev/build/contract-addresses/mainnet

axlUSDC looks fine, there are addresses in all supported chains (well except aurora?)

But then WETH is only on ethereum? That means I can't send WETH from polygon to avalanche for example?

then axlDAI is present in 5 chains but there are 7 chains supported in the docs: https://docs.axelar.dev/dev/build/chain-names/mainnet
Does it mean I can not send DAI across all supported chains?

Not very clear to me what that list means to be honest, could someone clarify? Thanks!
undefined says Also another question I have is: do you plan supporting more tokens? Can I register my own token on axelar somehow? Thanks!
undefined says So I was reading the T&Cs of the Immunefi bug bounty page and it explicitly states that we can't do any testing on the testnet. I suspect this is just boilerplate but, since it's written there, I'm taking it seriously.

However, when I asked on #general about instructions for running a private node I was told this is, in principle, possible but there are no instruction for it on docs.axelar.dev. 

I also wrote an email to security@axelar.network about whether the Immunefi T&Cs could be changed. 

To fully verify the security of the Axelar network security researchers like myself are going to need EITHER:
a) relaxed T&Cs on the Immunefi bug bounty page OR,
b) help getting a private node set up. 

Can someone help me out with either of these things?
undefined says Also, I was a little surprised that I sent an email to security@axelar.network on Nov 6 and had not yet received a reply.
undefined says DMing
undefined says @PJ thank you in advance .
undefined says what you mean with private node?
undefined says I mean running axelard on my own laptop not connected to any other mainnet or testnet nodes. Like running a private Ethereum node
undefined says But I am connected to goerli
Txn Hash: 0x666bfb1ba08ed8ec76ce70dc64411bf7e47d8efe6c4d4a0f21013a84e39cc93e
undefined says I see that your transaction was completed, in test networks because of the load sometimes delays.
undefined says any ideas about this?
undefined says Am I able to deploy custom tokens when running on a local fork? the same as I would for just creating a local vm
undefined says üö® A reminder that the testnet will be unavailable from 7pm ET to 9pm ET today
undefined says Hey @Chris / ChainLayer , Hope u r doing good
I have ping u on private, can U please check
undefined says Hi Team
I am trying to run the call-contract-with-token demo as shown in the GitHub README
I am getting the following error
reason: 'transaction failed',
 code: 'CALL_EXCEPTION',
I re ran the scripts with different chain, double checked all contract addresses, rebuilt my artifacts and added custom logic for gas limits.
Before adding the custom gas limit I was getting UNPREDICTABLE_GAS_LIMIT Exception.
It still isn't working. Followed the tutorial here https://www.youtube.com/watch?v=X6HwmL6Tbg0&list=PLh_q0hSKS_y23UECn5GJML0BDhJDDiiiL&index=20&ab_channel=Axelar

Note: On local everything seems to be working fine
undefined says Hey guys, how do we know if the `execute` or `executeWithToken` functions are being called by the gateway contract only? so that I can add some checks to my solidity code
undefined says Can I use Opezepplins ERC20 implementation here https://github.com/axelarnetwork/axelar-local-gmp-examples/blob/main/examples/cross-chain-token/ERC20CrossChain.sol it's kind of weird if I want to send 5 tokens, I need to pass 5*10^18 as the amount? not just for that, I also wanted to explore further using openzepplin contracts here in crosscahin implemetations
undefined says Hi there! **I want to work for free! (10h/week)**
I am Moreira and I'm currently at college doing a Masters degree in Informatics Engineering, I work as a backend developer part-time in Pulsar Finance and I also would like to expand my knowledge in blockchain technology.
I have professional experience with Javascript, Python, MongoDB, Redis, etc.. and I learned many other things in college.
At the moment I would like to develop in web3 and learn with more experienced people.
I have some experience from tutorials (Patrick Collins and Alchemy Road-to-web3) and now I started to do hackathons to learn more.
I would be available to start at the beggining of december.
I leave my contacts below:

LinkedIn: https://www.linkedin.com/in/rodrigo-moreira-1108031b6/

Gmail: rodrigoralhamoreira3@gmail.com

Twitter: https://twitter.com/Rodrig0M0reira

Github: https://github.com/RodrigoRalhaMoreira

telegram: https://t.me/R0drigoMoreira

Reach me!
Moreira
undefined says Got this error,when ran node scripts/createLocal. I copied repository from github
undefined says Could you please show the full command which you try to run? and on what platform are you trying to run it? It looks like a Windows ü§î
undefined says node scripts/createLocal Like it says in your example.Running it on windows 10 in vs code
undefined says Please make sure that you have appropriately loaded your private key into a .env file:
https://github.com/axelarnetwork/axelar-local-gmp-examples#set-up-deployer-key
undefined says thanks,i got a mistake
undefined says We are always glad to help you!
undefined says Could you please check this trx? https://testnet.axelarscan.io/gmp/0x1d3c8bd26b375b285cf6ca9d42fbced65b6f412ec36b90c655e2c56875ab900b it says that everything is done,but the destination address has 0 aUSDC,do you know why?
undefined says As i see there is a Cross-chain relayer gas fee
Does it mean that i need some aUSDC on source chain and also some aUSDC on destination chain?
undefined says Well you just need aUSDC on the source chain to paid of commission
undefined says okay,thank you
undefined says Could you check please,what is wrong? https://testnet.axelarscan.io/gmp/0x4ca66f8b22a63e26b8e42fbe298ef72cf04495f2c08dcaa80cc194ba4fbb2d8b i got enough aUSDC for commission,but i didn't get the aUSDC  on destination chain
undefined says Yeah, I see you transaction on the Polygon chain:
https://mumbai.polygonscan.com/address/0xF37955134Dda37eaC7380f5eb42bce10796bD224#tokentxns
but don't see that tokens will be delivered to the destination AVAX chain:
https://testnet.snowtrace.io/address/0x18e535Df172A16496DCBD0b39680018a4D5ad648#tokentxns

@Rok | Qubelabs Could you please help me with this?
undefined says my destination address is 0x18e535Df172A16496DCBD0b39680018a4D5ad648
undefined says Yeah! Thank you!
undefined says As i understood the problem is that Relayer execute "transfer" method,but not the "execute" method
undefined says i don't see anything wrong with this tx from our side, but can help look into why the tokens didn't arrive. can you send a code snippet in the contract on avalanche for `_executeWithToken`?
undefined says I send the tokens just to another wallet - destination address.So on polygon i got contract.I call function sendToMany from this contract.So,i don't understnad what you want me to send
undefined says the implementation of your code on the dest chain. nothing seems wrong in our logs so was offering to tak eur snippet and see if we can reproduce. outside of that, will let we know if we see any issues on the execution side
undefined says Okay i think this is the problem.How this implementation should look like? Because for now i just sent aUSDC to another wallet on avalanche chain,and nothing more
undefined says yeah that sounds right to me
undefined says So what the implementation should be on destination chain?
undefined says give me some time and i'll send across a working example today/tmrw. we actually have a similar example in one of our repos: https://github.com/axelarnetwork/axelar-local-gmp-examples/blob/main/examples/call-contract-with-token/DistributionExecutable.sol. so will be similar to that
undefined says that's almost the exactly contract on my source chain.So i call function sendToMany on source chain by my wallet
undefined says I tried to send money to some contract and it says: Transaction execution was reverted. Please check the implementation of the destination contract's executeWithToken function.
undefined says one thing to confirm, did you approve your contract on polygon to spend the tokens? (something like this: https://github.com/axelarnetwork/axelar-local-gmp-examples/blob/main/examples/call-contract-with-token/index.js#L57)
undefined says i tried the example in that local repo and it worked: https://testnet.axelarscan.io/gmp/0x56b4048d8cc1b9a59391620479bb9e18200a942e00a409b2a304cbb4ebe450d8 (tokens arriving on avalanche: https://testnet.snowtrace.io/token/0x57f1c63497aee0be305b8852b354cec793da43bb?a=0x40dd985a8b667686d9914e36460e42c69d672e3b). 

so i'd suggest taking that working example, the js snippet to invoke the method, getting that to work, and then modifying the code accordingly to distribute not to a list of recipients but the single intended recipient that you are looking to do in your app
undefined says is there any way to use `callContract` and specify a number of block confirmations before axelar calls the destination chain?
undefined says Hello Team cc @Team 
This is a blockchain engineer over 5 years with having 10 years software development background.
I'm familiar with go, rust and solidity.
I've been working as a blockchain core dev, smart contract dev and full stack dev so far.
I'd like to know if the team is open to new devs. Dm me if it is.
Thanks.
undefined says there's no on-chain call on the evm chain for this info (if that's what you're asking for). however, it's a config on the axelar network that you can query via LCD: https://axelar-lcd.quickapi.com/static/swagger/#/QueryService/ConfirmationHeight
undefined says That's interesting, thanks. When I queried "Ethereum" I got 200, it means that Axelar will wait 200 blocks before sending the message to the other chains?
undefined says errr, that can't be right. i'll clarify.
undefined says ok, some clarifications. for ethereum specifically, after the recent merge the approach is to check the block whether the tx in question is `finalized`. this generally occurs between 2-3 epochs (64-96 confirmations). for moonbeam there's a similar query. for all others, the confirmation height in that LCD query is used
undefined says alright thanks a lot for taking the time to clarify it!
undefined says @Axelar Builder 

The Axelar testnet will go through a scheduled upgrade, starting tomorrow ~9:00 AM ET (2:00 pm UTC), Wednesday, Nov 16. The network/network services will be down for a couple hours during this time.
undefined says Hey- please send us an application here: https://axelar.network/careers

So we can be sure to look it over!
undefined says ok, so make sure you have enough native token and aUSDC on your source chain for the transaction. for example if you're sending  5aUSDC from moonbeam to avalanche, make sure you have  ~6 DEV (to cover transaction cost) and  at least 5 aUSDC on moonbeam.

Also  increase your value to ~0.6DEV i.e  value: BigInt(6e17) when calling the sendToMany function from index.js. This should solve another gas fee error you might encounter.
undefined says there's something failed in the execute function of the destination contract. do you mind sending us a tx hash for more info?
undefined says I already fixed my problem,thank you
undefined says axelar testnet open now?
undefined says The testnet is open but not rewarded. Please reade this docs https://docs.axelar.dev/
undefined says Hello, I have 3 chains made with createNetwork, they all seem to function, have been able to use the deployer to deploy my contracts at the same address for each chain.  Finally got to where I'm testing a cross chain transaction, and am getting an error on the destination chain
undefined says this occurs right after the gateway.callContract
undefined says error is on the receiving chain apparently "Avalanche" according to ther error message above (chainId 43114)
undefined says is the gateway not sending gas? value: BigNumber { value: "0" }
undefined says Hey guys,me and my team are now developing a GameFi App.We want to use aUSDC as one of our main tokens.Is there a way to get much more aUSDC then from faucet on bsc and polygon testnets? @Team
undefined says Hi, I'm trying to understand and work with the solidity examples repo for the `DistributionExecutable.sol` contract inside `example/call-contract-with-token`. 

**The Question:  I do not see the path to which the contract actually calls `_executeWithToken()` to actually carry out the transfers to the recipient addresses. 
How is the `_executeWithToken() ` function getting called from `gateway.callContractWithToken()`? **

What I found out so far: 
1. the contract has a `sendToMany()` function that calls `gateway.callContractWithToken()` 
2. the contract also overrides `_executeWithToken()` from `AxelarExecutable`
3. But inside `callContractWithToken` which calls inner function `_burnTokenFrom`,  it burns tokens accordingly based on whether the token is external or internal. But it does not actually execute the transfers which is supposed to occur in `_executeWithToken()`. 

I attached the `callContractWithToken()` function inside `AxelarGateway.sol` for reference!
undefined says I'm assuming once the event is emitted, some axelar program listenes to the event and calls _execute() from the destination chain, but how do we simulate that in the test.js files?
undefined says Can you drop your address? I can send you some.
undefined says 0xF37955134Dda37eaC7380f5eb42bce10796bD224
undefined says On bsc testnet and mumbai please
undefined says Sent on avalanche fuji testnet chain: https://testnet.snowtrace.io/tx/0x17a793daa3c5fd8cb7dea6a73a37b0f0beb5555a78cbd729f258ab0e65274fdc 
You can use https://testnet.satellite.money/ to transfer it to another chain.
undefined says oh thank you a lot!
undefined says When you started local chains with `node scripts/createLocal`, there's a script (createAndExports function) that listens to `CallContractWithToken` event. 
It'll verify if you paid the gas to the GasReceiver contract correctly. If everything is correct, it will then call `executeWithToken` function at the specified `destinationContractAddress` (https://github.com/axelarnetwork/axelar-local-dev/blob/f5f054a5a0ca03cc4827f4dc930bde0b1cdef657/src/relay.ts#L231)
undefined says @jun It might be a bit hard to follow, but if you want to understand everything, here's the code you'll have to look at step-by-step:
1. createLocal - https://github.com/axelarnetwork/axelar-local-gmp-examples/blob/c1debc034571c11c999cc0d206942b86d062932c/scripts/createLocal.js#L13
2. createAndExport - https://github.com/axelarnetwork/axelar-local-dev/blob/f5f054a5a0ca03cc4827f4dc930bde0b1cdef657/src/exportUtils.ts#L36
3. In exportUtils.ts, you'll see the relay function is called periodically. https://github.com/axelarnetwork/axelar-local-dev/blob/f5f054a5a0ca03cc4827f4dc930bde0b1cdef657/src/exportUtils.ts#L74
4. relay - https://github.com/axelarnetwork/axelar-local-dev/blob/f5f054a5a0ca03cc4827f4dc930bde0b1cdef657/src/relay.ts#L311
5. updateCallContractWithToken - https://github.com/axelarnetwork/axelar-local-dev/blob/f5f054a5a0ca03cc4827f4dc930bde0b1cdef657/src/relay.ts#L188
6. executeCommands - https://github.com/axelarnetwork/axelar-local-dev/blob/f5f054a5a0ca03cc4827f4dc930bde0b1cdef657/src/relay.ts#L248
7. postExecute - https://github.com/axelarnetwork/axelar-local-dev/blob/f5f054a5a0ca03cc4827f4dc930bde0b1cdef657/src/relay.ts#L258
undefined says Hey @darrow , is that our example or your own implementation?
Here're things you need to check if you got tx reverted on the destination chain:
- The logic in `_execute`  function
- Have you passed the destinationContractAddress correctly?
undefined says @nptytn another request for large number of aUSDC please... We are currently using our own token on test net but that obviously not going to work with Axelar... we need a large amount to create a small-is liquidity pool and dish some of aUSDC out to our players as this is going to be our in-game token going forward... is this something you could give us? is so there is the address `0x588acF052631756422844856e1dc2Ef6066ce121`
undefined says Sent https://testnet.snowtrace.io/tx/0x8d422bd5f6901a1b0e11766c8989a2c2b02112fbdaef3d1d03d1127abff757f4
undefined says hero üí™
undefined says thanks, yes it is my own implementation based on your examples, using your code; the _execute is fine, never gets called though; the destinationContractAddress is the same as I used your deployer, so they are all the same; I do pass in a string version of the address though.  I've decided to give up on it, as I don't think users are really going to want to transfer NFTs between chains; I think the main feature I want to give them is to be able to mint on more chains.
undefined says thank you so much for this! am definitely trying to understand everything in depth so apprecaite this. I will get back to you guys if I have more questions :))
undefined says So I am working with a sample version of the `DistributionExecutable` example but encountering a problem where the transfer does not succeed after emitting the `ContractCallWithToken` example. 

**My Steps: **
1. `node scripts/createLocal`
2. `node scripts/deploy examples/my-example local`
3. `node scripts/test examples/my-example local "Moonbeam" "Avalanche"`
4. `my-example` is basically `DistributionExecutable.sol` with simplified adjustments to send tokens to a single address instead of an array of addresses. 
4. Examining the Following Event Log: 

The last event in the log has the following:
```
topics: [
'0x7e50569d26be643bda7757722291ec66b1be66d8283474ae3fab5a98f878a7a2',    '0x00000000000000000000000067af079dcfc60e1118ae9fc0433f8e187b4a79c8',
'0x27ad66247bcdb165b8cc175cff68858f3b194aaf6228d1d4433c07a69fd87b41'
]
```
The first element is the correct keccak256 hash of `ContractCallWithToken`, second element is the correct indexed recipient address, and the 3rd element is the correct indexed keccak256 hash of the abi encoded payload. 

My understanding is that Events are emitted chronologically, so when this event was emitted, the relayer should have picked up on this and called the `_executeWithToken()` function on my contract, emitting another `Transfer` event. 

(Actually I just ran the `DistributionExecutable.sol` to see its event log and it also has the `ContractCallWithToken` event as the last, not the `Transfer` event that should happen after in the destination chain. Why is this? Aren't events in the log appended chronologically?) 

**Question:**
So what else might be the reason that the recipient address is not actually getting subtracted after the call? 

The `while (BigInt(await destination.usdc.balanceOf(accounts[0])) === balance)` is never getting called and the test just hangs here forever waiting. 

Appreciate any help on this :))
undefined says hello everyone. i am new to the axelar ecosystem. how do i get my faucet address in order to request some faucet tokens?
undefined says The relayer doesn't only observe for the ContractCallWithToken event, but it also checks if all the parameters are matched. https://github.com/axelarnetwork/axelar-local-dev/blob/f5f054a5a0ca03cc4827f4dc930bde0b1cdef657/src/relay.ts#L279-L287

So, you need to check the parameters that passed into gas receiver contract and the gateway contract. Or you can post your source chain contract here, i can take a look.
undefined says hello üëãüèª, go to #üíß‚îÇfaucet the command to request for an airdrop is:
```
!faucet network 0xAddr
possible networks are: ['ethereum-2', 'avalanche', 'moonbeam', 'aurora', 'polygon', 'fantom', 'binance']
```
undefined says how do i get the address that starts with axelar‚Ä¶‚Ä¶
undefined says Hey, I think we have to create a keplr wallet and then copy the address after changing the network to axelar
undefined says @Team i am working on testnet for to send token but keep getting this error
undefined says Did you try deploying it before ?
undefined says Like by running

node scripts/test examples/call-contract-with-token testnet
undefined says i get this everytime i attempt to deploy to testnet. ps: my private key is in a .env file i need help @Team
undefined says yes followed all ths instruction
undefined says https://gist.github.com/junkim012/6786eb74cfcdf29b3eb1a7d3cc6a0db7 here's the public gist to the source contract I have, still encountering issues where the transfer is not completing!
undefined says @nptytn hoping I missed an easy step.  
I'm working through your fantastic composable-usdc example https://docs.axelar.dev/dev/guides/example-composable-usdc.  
Followed the readme and have my Defender Relay accounts funded with .5 eth and 1.0 Avax respectively.
Fired up the ui locally and have been trying a .01 eth -> Avax swap, but everytime my tx's hang on 'Avalanche call approval'.
https://testnet.axelarscan.io/gmp/0x746d3421d873829c7bfedfefd2e910cf84d31892367382761959818eacaaa853
Hoping you might have some insight üôè , any help is greatly appreciated.
undefined says computer
undefined says Try to do this:
1. Add a parameter called `address calldata recipient` in `sourceChainFunction` so your function signature looks like this
```sol
   function sourceChainFunction(
        string calldata destinationChain, 
        string calldata destinationAddress, 
        address calldata recipient,
        string memory symbol, 
        uint256 amount
    ) external payable
```

2. Change the parameter in the abi.encode function like below
```
bytes memory payload = abi.encode(recipient);
```

3.  Fix the way you called a function in JS file, since you changed the function signature. So it'll look similar to this
```js
const sendTx = await source.contract.sourceChainFunction(destination.name, destination.distributionExecutable, accounts[0],'aUSDC', amount, {
        value: BigInt(Math.floor(gasLimit * gasPrice)),
    });
```

4. Redeploy and re-run the test
undefined says Hey, I'm glad that someone is trying to follow that guide üôÇ

I can see that your transaction is already approved.

Note that any GMP call from `Ethereum` will take longer appoval time (it normally takes ~15-20 mins). You could try Avalanche -> Ethereum route, it will be much faster. You can see the average time spent from this page https://testnet.axelarscan.io/gmp/search?sourceChain=ethereum-2&status=executed, at the `Time spent` section.
undefined says Hi guys, a question:

I checked this example:

https://github.com/axelarnetwork/axelar-local-gmp-examples/tree/main/examples/send-ack

I understand that I can pay beforehand the gas for the ACK message (message back from destination chain to origin chain), but only if I know beforehand the payload the destination chain will use.

In my case, I don't know what the payload from destination chain to origin chain will be (imagine in the case of a DEX, slippage can cause differences on the payload I expected to be used)
undefined says is there any other way to do it that does not require me to know beforehand what payload will be used to send the ACK message?
undefined says Hey, please try to look at this example https://xchainbox.axelar.dev/?env=simulated&sample=ping-pong. Maybe it could help you get some idea. This example keeps sending a token and pay the gas between chain A and chain B until it's running out of gas. This way, you can implement the logic whether or not you should pay the gas for each leg.
undefined says Guys, we will be running out of Goerli ETH soon, if you have some please donate to our relayer address here https://goerli.etherscan.io/address/0xd14ae98c72ebdd7557de75a251f4261f3554f5ec üôèüèª
undefined says oh wow I didn't know about that sandbox, looks like an amazing tool, thanks a lot!
undefined says Thanks for this example, but I think I have the same issue. In that case the gas is paid in aUSDC, but paid for a specific payload, what if I can't predict the payload of the function that will be called from dstChain back to mainChain? I think the fact that the sender must know beforehand what the receiver will send back is a big limitation, if I understood the situation correctly
undefined says Hmm, I'm not really get your point. Regarding the ping-pong example, we paid gas separately for each trip in both `MessageSender.sol`  and  `MessageReceiver.sol` and we use the same payload passed into GasReceiver and Gateway contract. Why the sender must know beforehand what the receiver will send back?
undefined says Hi guys,

i am trying to deploy the alexar call-contract in the gmp-examples repo to the testnet and i am getting this `Error: cannot estimate gas; transaction may fail or may require manual gas limit`, any fix?
undefined says Started a thread.
undefined says What I mean is:

* I want to send a message from ORIGIN to DEST chain, when it is processed in the DEST chain, I want to receive something in the ORIGIN chain
* The examples I saw regarding ACK with Axelar, require that the gas of both messages (initial msg + ACK msg) is paid in the ORIGIN chain (2 calls to gasService one for the normal msg and the other one for the ACK)
* But when you pay gas in the service, you have to specify some params, including the `payload`, which means I have to know the payload of the ACK message beforehand, right? Since I need to pay the gas for it and the payload needs to match so the relayers know that the gas was paid for that specific call

My problem  is that I don't necessarily know what `payload` my ACK message will contain, it will be calculated in the DEST chain and it is not known by the ORIGIN chain until the ACK msg is received
undefined says Hi, 
How can you send a simple message from a contract on Secret-Network to Juno, for example?
(Using a relayer)

Would greatly appreciate your help.

*I watched this tutorial and some parts seem to me unclear,
I also did this tutorial: https://docs.axelar.dev/dev/hello-world.
And I don't see how to test this on real contracts deployed on testnets
undefined says You should do only 1 call to the gas service for the normal msg that covers full gas of the roundtrip (msg + ack). It is explained in details here https://docs.axelar.dev/dev/gas-services/pay-gas#two-way-call
undefined says ah I was being dum not realizing the while loop in the test is checking for accounts[0] not the destinationAddress... thank you so much for clarifying this! 

Also, right now I can only print out events that occur from calling the `soruceChainFunction` but if I want to list events that occur after the relayer calls the executeFunction, is there a way to observe the events emitted from that contract call on our local chains?
undefined says Hey, is this still an open problem? If so, could you please DM me and we can try to troubleshoot.
undefined says Could you please also DM me if you are still having the issue. We'll share solution here when we find it
undefined says Secret and Juno are cosmos-based chains, but GMP is currently only supported between EVM chains. Do you need any help with the EVM-EVM scenario?
undefined says Does this resolve your issue? https://github.com/axelarnetwork/axelar-local-gmp-examples/pull/48
undefined says please check your dm
undefined says I want to run an example of messaging between cosmos and any other framwork.
Is that possible?
undefined says I have a different question:

How can I connect between our testnets {Axelar, Secret} for ibc-transfer messages?
*Using a relayer
undefined says Yes, you can observe for the events in the gateway contract. Here are the events that you might want to observe: https://github.com/axelarnetwork/axelar-cgp-solidity/blob/main/contracts/interfaces/IAxelarGateway.sol#L34-L76
Also, you could observe the event from your deployed contract at the destination chain.

In `axelar-local-gmp-examples`, you can access to your deployed contract by  `destination.contract` and `destination.gateway` for the gateway contract.

you can look at ethers.js docs https://docs.ethers.io/v5/api/providers/provider/#Provider--events to see how you can observe for the event. Also, there's a similar example in xchainbox https://xchainbox.axelar.dev/?env=simulated&sample=airdrop, we observe for the event that emitted from the deployed contract at the very end from javascript file. you can pick the idea from there.
undefined says Our GMP feature for cosmos isn't available yet. We'll have more details soon.
undefined says I have a different question:

How can I connect between our testnets {Axelar, Secret} for ibc-transfer messages?
*Using a relayer
undefined says I'm looking for your testnet endpoint and other details to config my relayer
Where can I find it?
undefined says https://docs.axelar.dev/resources
undefined says Thanks, What's the testnet address to add to Keplr ?
undefined says FYI: We'll deprecate Axelarscan's EVM votes API (https://docs.axelarscan.io/evm-votes) in the next few days. It will be replaced by the new EVM polls route (https://docs.axelarscan.io/evm-polls).
undefined says cool

Is it possible to add Axelar testnet to Keplr?
undefined says https://docs.axelar.dev/resources/keplr
undefined says Thanks!
undefined says Do you have an example relayer between Axelar and another network?

I'm trying to transfer funds between Secret and Axelar testnets,
I'm using the Hermes relayer and I'm missing some configurations such as: websocket_addr, address_type,...

I have funded accounts on both Axelar and Secret testnets that can be used as relayer clients.
undefined says Got it got it will look into this! Appreciate it as always
undefined says alright man sorry I think I misunderstood something from the docs, it works for me as expected, sorry for the confusion and thanks for the help

I also want to give you some feedback, I've been checking some other multichain solutions and axelar works great, it has a lot of work in the docs&tooling (explorer, etc) and the sandbox website is a delight to test quick stuff

Keep it up with the good work! :Axelarstrong:
undefined says Does Axelar support GMP for any of the cosmos networks yet?
undefined says Do we plan to use Axelar's GMP to create a liquidity multichain router in Cosmos?  When is it fully operational?
undefined says Hey everyone, I am looking to test a platform of mine on testnet, but I need alxUSDC (it's on Terra) to do that, is it possible to get a lot (1 000 000) tokens on testnet to test all this out ? Thanks everyone
undefined says Please check #üíß‚îÇfaucet
undefined says Please Devs enable AUTH, all communities claim for AUTH enabled...üôè
undefined says ```function _execute(
    string memory sourceChain,
    string memory sourceAddress,
    bytes calldata payload
) internal override {``` how does _execute get called when in is an internal function
undefined says also whats nexus?
undefined says it is getting called by the execute function. Normally, our executor service send a tx to the destination contract to call an execute function, if the source tx is paid enough gas.
undefined says Not yet, but we‚Äôre currently working on it. We‚Äôll have more details soon
undefined says Can you explain more about why do you need 1M axlUSDC?
undefined says where do you see it?
undefined says So I went with the faucet and yeah it gives me a few bucks at a time
undefined says I'm trying to test my lending platform on Terra that is based on a stablecoin and aUSDC was my currency of choice. I want to add more liquidity to the mix to see how it behaves üôÇ
undefined says I can send you few thousand tokens, it should be enough in terms of testing the programming logic especially in the smallest unit (1 axl = 1M uaxl).
undefined says yes of course, but an issue was the rounding error I got in the logic when using very little amounts,
undefined says Thanks !!
undefined says i think you don't even need a token at all for testing the rounding logic. you can just setup unit tests with any extreme amounts.
undefined says It's in our backlog to enable authz module
undefined says out of curiosity, where do you want auth?
undefined says Yes of course I can unit test, but I need to integrate test on chain and this is where a token is needed, I need to be in the same conditions
undefined says Hello, 
I'm trying to relay messages between the testnets of Axelar and SecretNetwork.
It seems the Axelar endpoints that are here are broken:
https://docs.axelar.dev/resources

I created a hermes relayer with these Axelar endpoints:
rpc_addr = 'https://axelartest-rpc.quickapi.com'
websocket_addr = 'wss://axelartest-rpc.quickapi.com/websocket'
grpc_addr = 'https://axelar-testnet-grpc.qubelabs.io:9090'

When I run:
```hermes keys balance --chain axelar-testnet-lisbon-3```
I get:
```ERROR there was a problem querying the balance: error in underlying transport when making gRPC call: transport error```

Do you have any endpoints I can use?
Thanks
undefined says I think this can be solved by improving your on-chain tests to not depend on large amount of tokens. if you really need large amount of tokens on-chain, you should create your own tokens for better flexibility. aUSDC tokens should be only needed for testing on the cross-chain part, not a rounding logic. You can drop your address here, i will send you few thousand tokens.
undefined says axelar18u5paxcwcjeatqmeeqm2342nfhe607y826eyn3
undefined says thanks
undefined says Yeah I understand what you mean, I could simply change the number of decimals and test it like that
undefined says Thanks!
undefined says in the cosmos module /x/nexus in axelar core
undefined says We're working on support for GMP on cosmos and will update the community once we have a firm date for its release.
undefined says the `_execute()` function is a virtual method that your contract should override when it is inheriting the `IAxelarExecutable` abstract contract.

The `execute` function on  `IAxelarExecutable` will verify the call was approved on the Axelar gateway contract, then call whatever logic you define inside of  `_execute()` in your contract

https://github.com/axelarnetwork/axelar-gmp-sdk-solidity/blob/b1e0c8946d22e81ae80f4c8608deadfe6f11f670/contracts/executables/AxelarExecutable.sol#L26
undefined says The nexus module is the registry of all chains active on the network. It's the hub which other modules refer to for information about the fees, assets, and pending transfers for a given chain.
undefined says Hey @Axelar Builder FYI we added celo and arbitrum to testnet. https://docs.axelar.dev/resources/testnet
undefined says Alexer have any swap???
undefined says Yes, https://satellite.money/ 
Video guide https://www.youtube.com/watch?v=D7ooheNAvB0
undefined says If I am swap axlusdc to eth what usdc I got simple usdc or axlusdc
undefined says Because I have normal usdc on avalanche so I want to swap to eth usdc
undefined says Axl-usdc and usdc are two different tokens. You better use another bridge if you want to exchange native usdc in Avalanche network to native usdc in Ethereum network.
undefined says Tell the bridge name please
undefined says Satellite works on a different principle, when you take a native token from the Ethereum network and throw it through Satellite to another network, it creates a wrapped token (axl-token)
undefined says Please can you tell me the bridge
undefined says Or you can swap your Avalanche usdc for axl-usdc https://avax.curve.fi/factory/82 and then throw axl-usdc  Avalanche into the Ethereum network https://satellite.money/?source=avalanche&destination=ethereum&asset_denom=uusdc&destination_address= , but note the commission on the Ethereum network
undefined says So than I got native usdc on eth network right ?
undefined says yes, By sending axl-usdc from the Avalance network to the Ethereum network via Satellite https://satellite.money/?source=avalanche&destination=ethereum&asset_denom=uusdc&destination_address=, you will get native usdc on the Ethereum network.
undefined says This is on mainnet or testnet
undefined says mainnet
undefined says But I want testnet
undefined says https://usdcdemo.layerzero.network/
undefined says try it here
undefined says Okey I know this faucet but my main problem  is avalanche usdc to goerli eth usdc bridge
undefined says this bridge makes the transfer
undefined says Wait I'll try
undefined says Thanks it's work can you help me for last time
undefined says Now I have goerli usdc I want to swap usdc to eth you now any dex or swap so I can convert  my goerli usdc to goerli eth ??
undefined says I don't think such a dex exists, usually these coins are taken from the faucet.
undefined says Okey thanks
undefined says The GRPC endpoint is working fine for me. Can you try specifying the endpoint without `https://` and trailing `/` ? I don't think it's meant to work over HTTPS. If you need to specify schema, try to use `grpc://` instead of `https://`, and still no trailing `/`.
undefined says gmgm! I am able to connect to nodes using HTTPS but when I attempt to connect using WebSockets, I either can't connect at all or I get some weird responses:

For example: `wscat -c wss://axelar-mainnet-rpc.allthatnode.com:1317/websocket` returns `error: Unexpected server response: 200` without anything else. Other nodes return 405. 

Are there any docs for interacting with RPC using WebSockets? I've tried all of the nodes listed on https://docs.axelar.dev/resources. I also searched in the Discord for web socket, ws/wss but didn't find much.

Thank you in advance!
undefined says This will change when GMP is full launched on IBC?
undefined says Or the plan is to continue using wrapped tokens?
undefined says Better check with the team, but I heard about the partnership with Circle, so maybe we will see native usdc in the Cosmos Ecosystem networks.
undefined says hello, so i'm trying out the github axelar gmp examples
undefined says in trying to deploy the contract for token  examples, do i need to have gas available for all the chains?
undefined says in essence does my provided private key needs to have gas on all the chains the contract will be deployed to?
undefined says I think we need no wrapped tokens for all
undefined says More security
undefined says I thought this was the General Message Passing plan (no wrappers at all)
undefined says Yeah, we plan to transition to that model
undefined says Here's a wss endpoint
ws://rpc-axelar.imperator.co/wss
undefined says i am trying to deploy a contract in gmp-example. I can deploy on testnets but i cant sent token cross chain. I have aUsdc on polygon but i think something wrong with token contract address. Because initial balance looks 0. I re-write testnet.json base on contract address on axelar docs. But still stuck here
undefined says Amazing!!!! Good Luck Team !!
undefined says And good work!!
undefined says Can we introduce the customizable NFT 2.0 module from Kusama relay (Moonriver/Moonbeam) in the CosmosHUB using this GMP tech, right? Teritori for example, want to do this using your tech and want to use for bridge all NFTs and Tokens too.
undefined says We can probably do it directly in Axelar and the HUB
undefined says This is so big for all NFTs in the Cosmos
undefined says Are there docs for the RPC endpoints (i.e. https://rpc-axelar.imperator.co/) ? I am trying to use subscribe but it asks for a param query but can't find any docs on what it's expecting. Thanks!
undefined says hey, `subscribe` is useful for listening to event streams with websocket.
undefined says What kind of query do you want?
undefined says you can check the tendermint docs https://docs.tendermint.com/v0.34/rpc/#/Websocket/subscribe
undefined says here is an example query via websocket: 
```js
{"jsonrpc":"2.0","method":"subscribe","id":"0","params":{"query":"tm.event='Tx'"}}
```
undefined says for all possible events https://pkg.go.dev/github.com/tendermint/tendermint/types#pkg-constants
undefined says Thank you for providing these links
undefined says Appreciate it üôÇ
undefined says pleasure, if you have further questions dont hesitate to ask
undefined says 
undefined says I have this ingestion service that I spin up for bringing in websocket subscriptions into the rest of the codebase.
undefined says Moonbeam uses RPC parameters that are an array and pass in newHeads as value.
undefined says For Axelar this is an object which is passed in and has key query and value tm.event='Tx'
undefined says But the RPC request fails with error InvalidSubscriptionId. What is the subscription ID in this case? From reading the docs this is assigned by the server.
undefined says I'm not too familiar with tendermint but just perusing their docs not finding too much that's relevant but maybe I'm not sure what I'm looking for.
undefined says Any ideas? üôè
undefined says In screenshot I also tried NewBlock (sorry for discrepancy) but I've tried both, all of the event types and still happens.
undefined says The frustrating part is just passing the values in raw thru wscat I am able to get the databack. I guess having issues with jsonrpsee but i'd rather not rip it out for an alternative. :froge:
undefined says Thanks in advance :uwupumpkin:
undefined says Thanks, indeed.

Now when I run:
```hermes create connection --a-chain axelar-testnet-lisbon-3 --a-client 07-tendermint-180 --b-client 07-tendermint-42```

Using this configuration:
```rpc_addr = 'https://axelartest-rpc.quickapi.com'
websocket_addr = 'wss://axelartest-rpc.quickapi.com/websocket'
grpc_addr = 'http://axelar-testnet-grpc.qubelabs.io:9090'```

I get the following error:
```2022-11-27T14:00:41.674693Z  INFO ThreadId(01) using default configuration from '~/.hermes/config.toml'
2022-11-27T14:00:41.925732Z  INFO ThreadId(01) Creating a new connection with pre-existing clients 07-tendermint-180 and 07-tendermint-42

2022-11-27T14:00:45.378202Z  INFO ThreadId(01) :champagne_glass: axelar-testnet-lisbon-3 => OpenInitConnection(OpenInit { Attributes { connection_id: connection-112, client_id: 07-tendermint-180, counterparty_connection_id: None, counterparty_client_id: 07-tendermint-42 } }) at height 3-5031442

2022-11-27T14:00:57.399653Z ERROR ThreadId(01) failed ConnOpenTry ConnectionSide { chain: BaseChainHandle { chain_id: pulsar-2 }, client_id: 07-tendermint-42, connection_id: None }: 
failed during an operation on client '07-tendermint-42' hosted by chain 'pulsar-2': 
error raised while creating client for chain axelar-testnet-lisbon-3: 
failed fetching src network latest height with error: 
RPC error to endpoint https://axelartest-rpc.quickapi.com/: serde parse error: expected value at line 1 column 1```

Have you ever occurred something like this before?
undefined says seems developers that are trying out the axelar gmp examples can't get help here. then i wonder why we were asked to seek help from the discord
undefined says Not super inclusive to call developers new to Axelar "newbies" (has bad connotations IMO) but I get what you're saying and I agree. Will say it /is/ a weekend tho so I'm not personally expecting immediate responses.
undefined says Thanks for pointing that out,it's been adjusted. I actually expected to see responses trying to help out. but then its the weekend, maybe that adds up
undefined says Disregard this, it is because the "id": 0 param wasn't being passed. jsonrpsee doesn't expose this param from what I see so doing some more research in their docs. Thanks so much!
undefined says Hi guys! Is it possible to send my custom token from my own cosmos sdk' blockchain to my polygon (or another EVM-like chain) address (bridge for custom token) (and vice versa using axelar)? Is there any manual on how can one do it or maybe github repo? I want flow, similar to AXL (on axelar)<-> AXL (on EVM-like chain) -> I found this in the axelar dev docs, but it's tied only to Axelar blockchain and AXL token.
undefined says from cosmos, not yet. once GMP for Cosmos goes live over the coming month or so, you'd be able to do it. Across EVM chains you can deploy your own token today. see some examples here: https://github.com/axelarnetwork/axelar-local-gmp-examples/tree/main/examples
undefined says was confused by this point.
undefined says there is a way to deploy your cosmos token at the network layer to be omni-chain across all supported chains [as AXL and other tokens deployed]. DM the team if that's what you want. with GMP coming, you'd be able to do all this yourself.
undefined says If you're deploying gmp examples to testnet, then yeah, the account you specified will need gas on those chains. For the local env, the wallet is already funded with tokens.
undefined says @Axelar Builder The Axelar network will go through a scheduled mainnet upgrade starting `~9:00 am EST (2:00 pm UTC), Tuesday, Nov 29`. The upgrade are expected to take about `~2 hours` and during this period,  https://satellite.money/ and network service will be down.
undefined says increase ur gas price in index.js file in Bigint to 5e17
undefined says you mean gasLimit right?
undefined says got the same error, is there someone who can share us the address set for relayers?
undefined says yes
undefined says didnt work either getting same error
undefined says I can managed to run hello world example but not with token
undefined says you should have funds on your wallet both testnet and aUSDC.
undefined says set it like value: BigInt(5e17)...it takes time like more than minute to compelete for me
undefined says same error
undefined says its looks like i dont have any aUsdc but i have 9.85
undefined says heyy I resolved this issue with below config, try it out üòé 
```rpc_addr = 'https://axelartest-rpc.quantnode.tech'
grpc_addr = 'http://services.staketab.com:9090'
websocket_addr = 'wss://axelartest-rpc.quantnode.tech/websocket'```
undefined says I have both
undefined says u should check for usdc on axelar explorer which will be shown on cross chain i bot have transfered it 2 u
undefined says then increase gas limit than carries out the transaction..that how its work for me
undefined says 
undefined says i can sent messages but not tokens
undefined says increase gas limit like this
undefined says i did https://discord.com/channels/770814806105128977/955655587260170272/1046771375311954000
undefined says dont change gas limit var..
undefined says only chnage line 63
undefined says not line 53
undefined says still same
undefined says after increasing gas limit u need to have at least 0.5 testnet moonbeam
undefined says i dont have that much
undefined says then collect them from faucet
undefined says moonbeam faucet
undefined says faucet only give 0.25 in 24h
undefined says try to use polygon if u have usdc there
undefined says I change the gas limit to 5e16. its stuck like this i am guessing not enough avax for that.
undefined says no it takes time mine also  takes more than 1 minute
undefined says https://apps.moonbeam.network/moonbase-alpha/faucet/
undefined says gives u 1.1 moonbeam
undefined says Status: Error! There is a 24 hours cooldown between requests. Try again in 20 hour(s)
undefined says you didnt see "Insufficient Fee"
undefined says enter other wallet then transfer to source address on metamask
undefined says hi guys! does anyone know why `hermes` is printing this error? hope someone know... üò¢ 
```
task encountered ignorable error: link error: link failed with underlying error: gRPC call failed with status: status: Unknown, message: "account sequence mismatch, expected 15, got 13: incorrect account sequence [axelarnetwork/cosmos-sdk@v0.45.10-0.20221026063150-7d9818dc359a/x/auth/ante/sigverify.go:265] With gas wanted: '0' and gas used: '143761' "
```
undefined says and one more weird thing is that, even though I'm trying to connect to not "terra" chain, it keep mentioning `terra`
```
{src_chain=cube_47-5 src_port=transfer src_channel=channel-0 dst_chain=axelar-testnet-lisbon-3}: task encountered ignorable error: link error: link failed with underlying error: gRPC call failed with status: status: Unknown, message: "failed to execute message; message index: 1: acknowledge packet callback failed: chain terra registered for IBC path transfer/channel-0 is deactivated [cosmos/ibc-go/v3@v3.3.0/modules/core/keeper/msg_server.go:628] With gas wanted: '0' and gas used: '234198' "
```
undefined says Thanks man!

But are you able to 'hermes start' without errors?
Because I get some weird ones
```
hannel-12}: found counterparty chain for client client=07-tendermint-37 counterparty_chain=pylons-testnet-3
2022-11-29T12:16:23.999002Z ERROR ThreadId(01) scan.chain{chain=axelar-testnet-lisbon-3}: failed to scan channel, reason: spawn: missing chain config for 'pylons-testnet-3' in configuration file channel=channel-12```

Despite it not being the channel i just opened
undefined says Have you set the chain or chains.packet_filter in your config.toml?
undefined says Hey @Axelar Builder as a heads up the Axelar network is going through a scheduled mainnet upgrade, starting now.

The upgrade is expected to take ~2 hours to complete. During this period, https://satellite.money and network services will be down.

You can follow the https://twitter.com/axl_status?s=21&t=ck6-MFNkq0M-nCzFJ_e1rA account for more updates!
undefined says The scheduled mainnet upgrade has been completed successfully. Network services and https://satellite.money/ are back online :Shakehands:
undefined says how can i wrap my custom token to axelar-wrapped token?
undefined says @Axelar Network how can we get AxlearAssetTransfer status by trace id? i want to use axelar sdk or api to get asset transfer status.
undefined says Hey, so we don't support arbitrary tokens yet, they still have to be explicitly registered, which is done by us. Currently, you can get around that restriction by using general message passing, but then you would have to implement the locking/minting logic in your own contracts.
undefined says We don't usually work over DM in the spirit of open discussion, but if you'd prefer sure send your thoughts over DM! Please do verify though that you're only interacting with this account
undefined says Hi,members!
I‚Äôm a Web3/Blockchain developer and was wondering if anyone here is in need for a developer to help them out with their projects.
What I can do:
- Front-end Development (Pixel-Perfect, RWD)
  React, Next.js
  Vue, Nuxt.js
  Styled-components, Tailwind CSS, Material UI, Chakra UI
- Back-end Development
  Node.js, Express, Nest.js, Typescript
  Laravel, Codeignitor
  MySQL, MongoDB, Firebase
- NFT collection generation from your artwork
- NFT minting / staking dapps development
- White-label NFT marketplace development
undefined says @Axelar Network  Hey all - I have a question RE the cosmos GMP.

Will the interface for the cosmos cosmwasm contracts be the same as it is for EVM.

Currently the contract on the destination chain needs to implement `_executeWithToken`, is it safe to assume that we will need to implement `ExecuteWithToken` in our rust code?
undefined says Hey there team! I don't think `axelarAssetTransfer.getDepositAddress` is working for testnet. Promise just hangs without resolving/throwing any errors. Can anyone check?
undefined says It's best to check https://axelar.network/careers
undefined says Hey @Juno which sdk version are you using and what parameters are you putting in the `getDepositAddress` method?
undefined says I'm using `@axelar-network/axelarjs-sdk@0.11.7` and calling `getDepositAddress` with the following params: `'ethereum-2', 'osmosis-4', 'osmo1f6gkkh9n6k4rn876qvkmv7qf89w9ru3adt7fd9', 'uausdc'`
undefined says Has anyone done some sort of on-chain analytics on Axelar's network?

Interested in learning how it might work
undefined says osmosis testnet has a problem with their network. Can you try another network?
undefined says You mean this? https://axelarscan.io/
undefined says Could Axelar with his GMP participate as Parachains in the Polkadot and Kusama Crowdloans?  this would be exciting.
undefined says sure will try
undefined says Hello, I try to use Axelar for bridging my app between Ethereum and Polygon, but for now, when i make tests on testnet my transaction stuck in "Call approved", someone have an idea for why ?
undefined says My last tx : https://testnet.axelarscan.io/gmp/0x70a92051002c225f0676a4383de59ef466551cdaffee54f59eecc01ed304213d:291
undefined says Hi,
How can I send commands with axelard to testnet? it tries to connect to localhost and I couldn't find where to change it.
Thanks.
undefined says @Axelar Builder Please note, We are about have a Testnet upgrade in **~1hr **.  Network services are expected to be out of service between **1-1:30 pm EST **
https://discord.com/channels/770814806105128977/869603957360713778/1047922103980142692
undefined says HELLO engineer team 
https://axelarscan.io/tx/799766F9AAAC18D2757000383EB7E3686C78994B1D4B7B910960D82F5B5227EB
I have question about this transaction.
anyone can answer my question?
undefined says above transaction is ConfirmERC20TokenDeployment.
poll id in above transaction is "24055"
undefined says 
undefined says above many vote transaction is executed in single block.
Isn't voting done manually by a person? is it automatic?
undefined says automatic. axelar is a decentralized network powered by consensus that validators run and vote on events from external chains. https://axelar.network/blog/an-introduction-to-the-axelar-network
undefined says Is Axelar planning on a Bridge to FVM (Filecoin Virtual Machine)? It will be EVM compatible.
undefined says Lauching in Feb 8th
undefined says ye EVM connections are pretty easy to instantiate.
undefined says @sergey Great! I'm building a DEX for the FVM and would need to bridge over assets from a few chains. Ethereum, BNB, Polygon, Avalanche, and Moonbeam.
undefined says is correct that token deploying start from external chains event?
```solidity
    modifier onlySelf() {
        if (msg.sender != address(this)) revert NotSelf();
        _;
    }
    ...
    function deployToken(bytes calldata params, bytes32) external onlySelf {
        ...
        emit TokenDeployed(symbol, tokenAddress);
    }
    ...
    function execute(bytes calldata input) external override {
        (bytes memory data, bytes memory proof) = abi.decode(input, (bytes, bytes));

        bytes32 messageHash = ECDSA.toEthSignedMessageHash(keccak256(data));

        // returns true for current operators
        bool allowOperatorshipTransfer = IAxelarAuth(AUTH_MODULE).validateProof(messageHash, proof);
        ...
       (bool success, ) = address(this).call(abi.encodeWithSelector(commandSelector, params[i], commandId));

            if (success) emit Executed(commandId);
            else _setCommandExecuted(commandId, false);
        }
    }
```
undefined says following above code, token deploying does not start from external chain.
undefined says token deploying process is below correct?
axelard command (create-deploy-token) -> create valid proof data -> call `execute` function in external chains -> call `deployToken` -> validator automatic vote
undefined says validator automatic vote is not before calling `deployToken` function?
undefined says i am confusing T_T
undefined says does anyone have a reverse lookup to go from `tokenAddress -> tokenSymbol`. Looks like the gateway only implements the opposite direction `tokenSymbol -> tokenAddress`
undefined says right now, each time my contract is called with a token, i store symbol in a mapping with the address as a key. this seems more gassly than necessary
undefined says Everything is ok with GMP on Cosmos DevNet ?
undefined says how to become controller on axelar network?
https://docs.axelar.dev/cli-docs/v0_27_0/axelard_tx_permission_register-controller
if i execute just above command and become full node validator, can i register controller on axelar network?
undefined says what are you trying to do?
undefined says yes, in-dev. will release as soon as possible.
undefined says I am just getting started with Axelar.  Here is my first GMP, which has stalled: https://testnet.axelarscan.io/gmp/0xd62f8c9b8928a471119de65545dc90bd435e208858967ebb02afc154216114bd I did NOT pay gas fees from the destination contract on Goerli testnet. After connecting (on Goerli) to axelarscan and hitting [Approve] I get a blue status bar at the top that says "Approving". No Metamask popup. After 5+ seconds the status bar turns red with `cannot find chainethereum-2`. If I hit then [Add Gas] button, I get a blue status bar with `Estimating & Paying gas` and then eventually a red bar with `Couldn't query the gas price`. Thoughts? Suggestions?  (Note: for this initial test, the specified destination address does not exist at the destination chain (`mumbai`). So I am expecting the execution to fail ultimately. Not sure if this might be related to the inability to add gas)
undefined says i want to deploy my custom token.
following official document, i think becoming controller is important for token deploying
undefined says @sergey is it incorrect?
undefined says i want to know how to deploy my erc-20 token haha..
undefined says If I have no idea about code and validators, do you think I can learn from 0 with the Axelar academy?
undefined says those erc-20s are permissioned, but you should follow this example to deploy your own chain-agnostic token: https://github.com/axelarnetwork/token-linker.
undefined says i think axelar academy is pretty outdated right now. the blog might be a better place to start https://axelar.network/blog & docs. https://docs.axelar.dev/
undefined says you should pay to the gas receiver contract on the `source` chain from which the call is made. then the transactions will be approved / relayed.
undefined says You mean that exists erc20 token deploying need specific permission?
Anyone can not deploy any token in mainnet environment?
undefined says can i deploy custom token in mainnet environment without your mentioned repository method?
undefined says @sergey 
Channel-0 for ibc between terra classic and axelar is in deactivated state, any input on this matter?
undefined says Can you add me on TG? Jason_c_ma
undefined says Hey @Riteshit's easier to keep the Qs in the channel here and not to use threads! Can you give us a better idea of the issue so we can help troubleshoot?
undefined says Cant transfer anything to channel-0 because the path been blocked/deactivated
Who should I talk this to?
@Jason Ma | Axelar @talal | DevOps @ Axelar 
Iam sorry for tagging üôè
undefined says Thank you, sergey. I have now had several successful GMP calls, each from Goerli to Mumbai. My most recent attempt is the first time I have two `callContract()` calls within the same txn. Via `/gmp/search` I was able to find both calls, looks good so far,. BUT..... it has now been 3+ hours for each, still in `CALL APPROVED` status for both. My prior GMP calls took between 20-40 minutes each. Goerli->Mumbai: https://testnet.axelarscan.io/gmp/0xb047070d2f689702fe579fe43b6f2cedac420e1175774668b8bfe56229ebb800:69 Goerli->ArbitrumGoerli: https://testnet.axelarscan.io/gmp/0xb047070d2f689702fe579fe43b6f2cedac420e1175774668b8bfe56229ebb800:71

(*side note: when I look at https://testnet.axelarscan.io/gmp/search I see many GMP calls that fully executed in 1-3 minutes. Any tips on how to get in on that action?*) üòâ
undefined says Hello,
I've sent USDT to this address: https://axelarscan.io/account/0xC970d1798C427911c1f160e6C27aC3a8e1608c4b
which is confirmed in the Polygon network (for over 1h) but I don't see any sign of it in Axelar. Any idea what could be happening?
undefined says Hey, is there a way to fetch the first block from an API like the following?
https://rest.cosmos.directory/axelar/cosmos/base/tendermint/v1beta1/blocks/1
undefined says This still hasn't arrived, so I think something is wrong. But this is a simple transfer, and I've followed all the instructions here: https://docs.axelar.dev/dev/axelarjs-sdk/token-transfer-dep-addr
The deposit is able to pay for the fees.
undefined says Hey! Please open a ticket on Zendesk. The team wil take a look soon as possible. 
https://axelar.zendesk.com/hc/en-us/requests/new
undefined says Just following up on this. I *now* see many other GMPs in a similar "call approved" state for many hours. Is there an issue with the relayer network at the moment? As a test, I took the values from the Axelarscan page (https://testnet.axelarscan.io/gmp/0xe9b8cd68c472874e0721fa199bda7865541285e3a0eae2bdfdbcb244a624b72c:108) for `Payload Hash`, `sourceChain`, etc. and submitted those directly to the `execute()` function on the destination contract. The transaction succeeded (https://mumbai.polygonscan.com/tx/0xd5c1db27b5f7c09e94cf9e480956e3119712c5ef5f12879d2d467668e94000ec), so at least in this case, the issue does not seem to be a revert on the destination side of things. Thoughts?
undefined says Seeing the same thing
undefined says what actually is happening in gmp ??

I pass source chain then destination chain with a message
It calls gateway contract on source chain with destination chain and message as parameter
then, gateway takes to axelar blockchain which then gives your message to gateway on destination chain


but the value it sets is actually a value of any function on destination chain gateway contract ??
undefined says The payload of your encoded variables gets sent to the `execute` function on the destination contract -- in that function, you decode the payload and perform any actions with the variables sent from the source chain. Example: https://github.com/axelarnetwork/axelar-local-gmp-examples/blob/main/examples/call-contract/ExecutableSample.sol#L40
undefined says Hello @everyone!
As a web developer with 6 years of full stack experience, I would like to set up a new job opportunity for myself, who has led several projects to success and received good reviews from many clients.

***This is my website: https://dennis-stephens.vercel.app***
You can check my experiences, projects with my name in team section, several certifications and Linkedin recommendations here.

It can be said that the strengths that I can see are the simultaneous guarantee of project speed and quality, accurate time management, and sincerity.

If you are currently in need of a new developer for your team, want to bring up a new startup, or need a freelancer, please check my website and feel free to send me a message.
undefined says In playing around with the `manualRelayToDestChain` function from the SDK, I received the following response from one of my stuck GMP txns: 
```error: 'Broadcasting transaction failed with code 5 (codespace: sdk). Log: 4309uaxl is smaller than 51156uaxl: insufficient funds: insufficient funds'```
FWIW, I submitted 0.01 (Goerli) ETH for each of two GMPs from this source txn, for a total of 0.02 ETH (Source txn at https://goerli.etherscan.io/tx/0xe9b8cd68c472874e0721fa199bda7865541285e3a0eae2bdfdbcb244a624b72c)
undefined says It seems there has been some moonbeam testnet outages, so check to make sure new moonbeam is creating new blocks. Regarding your other transactions it looks like there were multiple gmp calls with only one gas payment. Can you double check your smart contract?
undefined says No, the ones with multiple GMP calls included one gas payment **for each**. Alexarscan has marked "gas paid" as "SUCCESS" in each case.  I am seeing the same stuck GMP calls in cases where neither source nor destination is Moonbeam (ie. Goerli to Mumbai).   Here an an example: source txn: https://goerli.etherscan.io/tx/0xa9fb77e3968087b409c25cccf46a67bd97cb5f273b4ab784fd01b9b27037a6d2 (note the two payments for gas). Goerli-to-Mumbai GMP: https://testnet.axelarscan.io/gmp/0xa9fb77e3968087b409c25cccf46a67bd97cb5f273b4ab784fd01b9b27037a6d2:25 )
undefined says Also, looking at https://testnet.axelarscan.io/gmp/search shows that 80-90% of GMP calls in the past 12+ hours are in this state (gas paid==success).  While I can't speak to the details in contract calls for these, it seems like more than a coincidence.
undefined says Update: a recent GMP with a *single* GMP destination succeeded after an hour: https://testnet.axelarscan.io/gmp/0x9db34aac42e4bd1f8ff92bf419daa99b995fcd0cb20a7bcc8ba981c805d967e6:10. Not sure if the difference was due to having only one GMP in the source txn .... or something else.
undefined says there some RPC issues on the relayers that the network is experiencing. the team is looking into it.
undefined says Hi,Our team is developing a cosmos application chain, we want to integrate with axelarnet, how should we do it
undefined says hey seems a nice idea , can we chat about it a while ?
undefined says yes
undefined says Are you a axelarnet team member?
undefined says No , I am a web3 developer looking to explore axellar , I basically make dapps üôÇ
undefined says hi @markcarey @sergey I am facing this error when trying to execute this cmd  `node scripts/deploy examples/call-contract-with-token testnet`
undefined says FWIW, this (executed successfully) single-GMP txn shows up under "EVM Polls": https://testnet.axelarscan.io/evm-polls?chain=ethereum-2&transactionId=0x9db34aac42e4bd1f8ff92bf419daa99b995fcd0cb20a7bcc8ba981c805d967e6 but for a near identical txn with **two** GMP calls -- both of which show gas paid == success -- nothing shows under EVM Polls: https://testnet.axelarscan.io/evm-polls?chain=ethereum-2&transactionId=0xf199df0b363fe29d462808b5c0fcf9d50862be1eda83a438617e4ce3b053791b (source txn = https://goerli.etherscan.io/tx/0xf199df0b363fe29d462808b5c0fcf9d50862be1eda83a438617e4ce3b053791b)
undefined says can someone help me ? deploying to local works fine but facing errors in testnet .
undefined says Once resolved please let us know
undefined says @talal | DevOps @ Axelar 
Another day asking to reactivate ibc channel-0 to Terra Classic
Is there anything I can help to reactivate this channel? I cant help but restless If I stay in the dark not knowing what's the problem
undefined says I have just gone through 60+ pages of the GMP screen on Axelarscan, looking for source txns with multiple `contractCall`s. The only ones I was able to find were one that I myself have sent. All of which are stuck in the Gas=Success, Call Approved=Pending status. Using the *same contract*,  if I send one GMP it gets relayed, if I send 2+ they get stuck, reproduce-able. Is this functionality broken?
undefined says you mean two calls to the gateway and the gas receiver in the same TX?
undefined says Yes, like this example (see logs and verified contract code): https://goerli.etherscan.io/tx/0xc97429ab77f6d811fa55b8279659c1e85052e3c0b10007c50694211f18030cdc
undefined says Lol
@markcarey I had the same issue with it about two weeks ago

Mine actually went through but it took almost an hour for the two two actually update

It's probably a feature that's not really worked upon completely yet
undefined says we didn't really have usage of this before, so don't think the e2e flow for multiple transactions is all there. can this be done in a single TX instead?
undefined says Hey @Kamal  ! Not sure what exactly is happening there.  Seems like you forgot to fund your `EVM_PRIVATE_KEY`  for Moonbeam. Can you share your public address for your EVM key?
undefined says The main benefit of my project is being able to *send messages to multiple chains from a single source chain transaction*. There is an example cited in yours docs: https://docs.axelar.dev/dev/gas-services/pay-gas#sending-messages-to-multiple-destination-chains-from-a-single-transaction -- though the txn is now months old, so maybe something has broken since then?
undefined says ok noted. we'll take a look.
undefined says works in progress
undefined says here is the public add 0x69B97e0dC6b0A47656E75e55cD997579C9752C30
undefined says Any dev with proper understanding of axelar ecosystem?

I m having troubles.
undefined says Hey @sergey is it possible to make cross chain view calls on axelar?
undefined says yes, it's possible to make cross-chain view calls. i'm not sure about your use-case. If you want to update source contract state, but you need to retrieve data from the destination chain.
You can use 2-way `callContract` Here is an example of such transaction https://testnet.axelarscan.io/gmp/0xe67bc1b0efb72645d4e40412d606f0ec16f439bf19409fa40e09bbf8ad897389:7
undefined says Oh it's basically like a gmp but just updating the state after the two way call
undefined says Thanks
It's not quite what I needed
But I've found a way to go about it
undefined says We are on it, see https://www.mintscan.io/axelar/proposals/21
undefined says Okay, Iam waiting to reactivation
Can't send anything to this channel
undefined says Hey guys
It does not move with call approve
Also when I try to approve I get the error
https://testnet.axelarscan.io/gmp/0x27ae6ccea13c281186f4fe17c88458cf6af8802f4f03511aedcadcdbff26265a
undefined says @tomoki_adachi do you know how can i add funds in moonbeam for the testnet to work?
undefined says I've checked your transaction. You have to contract call and pay gas in the same transaction for the approval. Please see an example here https://xchainbox.axelar.dev/, `MessageSender.sol`.
undefined says If you need native token for moonbeam testnet, you can get it here. https://apps.moonbeam.network/moonbase-alpha/faucet/
undefined says Yeah, it is not active yet.
undefined says Any estimate?
undefined says I implemented it like that, but it demanded me to pay for gas
here is transaction and code
https://testnet.axelarscan.io/gmp/0x8c7e9adb3a8ae589d69cdbbdbbc7cb636ef1f93e7b80b30bd20fb2e66dfcc33b
undefined says can you check the `gasReceiver` address? Our gas service contract address is: `0xbE406F0189A0B4cf3A05C286473D23791Dd44Cc6`
undefined says If you paid gas correctly, you should see `NativeGasPaidForContractCall` event in the tx log like this transaction https://testnet.snowtrace.io/tx/0x6063fcca26ea05bce180ab7ecbd3a9c538a2f0484a09f0fac93da36642d46112#eventlog
undefined says It is in progress, we will ping directly when done.
undefined says I watch tx log and there is no tx logs of `NativeGasPaidForContractCall`
undefined says Okay, back to waiting then ...
undefined says @tomoki_adachi  Also, you check for `msg.value > 0` but you pass `relayerFee` as a fee. I think that might be wrong too.
undefined says Thank you, I'll try it
undefined says I was able to pay the gas bill, but approve won't finish next time
https://testnet.axelarscan.io/gmp/0x048157f6eb1606c10e9999da8f95821150c36d6a2f8bb58510e39973e4679340
undefined says Hi Team, I've initiated a transaction message from goerli to mumbai chain. But it is stuck at Call Approved step. I'm not sure what I'm supposed to do next. Kindly help. Transaction: https://testnet.axelarscan.io/gmp/0x72b71b2a8cec36bd0e1686a62bf91b870734e1c4974e7e064f585a53d643f2f7
undefined says seems it's approved. ethereum finality is 64-96 blocks so it takes some time.
undefined says transaction is reverted at the destination. check you application logic. https://goerli.arbiscan.io/tx/0x8e70de31f607f786b24beb0cb02a81291c493a2380463d6bdabda38693fe36c2
undefined says 
undefined says Yeah now we can see that you funded your test account. I hope the issue is resolved
undefined says Drop of the day: the Aptos local dev environment is ready!

üîó   https://github.com/axelarnetwork/axelar-local-gmp-examples
undefined says We're experiencing delayed in Axelarscan to index the  `Approved` event. We're currently working on this. 
If you recheck now, you can see we sent out the approve tx within 2mins. Also, there's error in your destination contract, so please check the `execute` function too üôÇ
undefined says Correction: It should be  https://github.com/axelarnetwork/axelar-local-gmp-examples because we already merged it to the main branch.
undefined says sadly no
undefined says hey, i can see a wallet interacting with the axelar gateway with lunc assets, i know the proposal was passed last week or so but the UI does not list the assets, is it safe to interact directly with the contract to bridge these assets?
undefined says gm - flagging that axelarscan's TVL page is blank right now and the underlying API is no longer returning `price`
undefined says Hey- the team will be adding lunc to satellite soon, so we would advise that it's better to avoid doing it directly yourself, in case you somehow end up losing the tokens in the manual process. Just our 2 cents!
undefined says Hey I'm having a hard time setting up either `axelar-local-gmp-examples` or `axelar-local-dev`. 
Installing dependencies for both of them is failing at `@axelar-network/axelar-cgp-aptos@1.0.0`

Attaching screenshot for more details.
undefined says Nevermind, pinning axelar-local-dev's version to 1.1.0 worked.
undefined says hi
undefined says 
undefined says I can't see Celo
undefined says LUNC/USTC is available on Satellite now: https://satellite.money/?source=avalanche&destination=terra+classic&asset_denom=uluna
undefined says Hi, faucet seems not to work and I need aUSDC to test my hackaton app
undefined says Also satellite for testnet does not work, I cannot move ausdc I have on Axelar to goerli..
undefined says hey @Kiryl how to set the manual gas limit through this axellar command ?
undefined says `node scripts/deploy examples/call-contract testnet --gasLimit 100000 `is this the right way ?
undefined says m holy stuck at this point , getting this error 
`node scripts/deploy examples/call-contract-with-token testnet `
undefined says does someone know how to get out with this ?? @Axelar Network @Jake | Axelar @sergey  ?
undefined says Hey guys, any way to get some wrapped usdc on testnet? Faucet does not seem to be working atm? Many thanks for info! @Axelar Network
undefined says Hey! Please wait! The team will look it on it. Right now is some problems, which soon will be solved.
undefined says Cool, @Pavel-LV | C.Sailors do you know if AxelarSDK asset transfer also has some problems? Tried to do testnet transfer from eth to moonbeam by depositing funds to generated address but nothing happened (made sure I put more than fees) or maybe I understand GMP incorrectly? Thanks in advance!
undefined says have TX ids?
undefined says https://goerli.etherscan.io/tx/0x1044694f6a88e809c7df3fb7912d3f9da016420689a7cf9750bf554372036d36
undefined says How i calculated addr => const depositAddress = await axelarAssetTransfer.getDepositAddress(
                  this.key, // source chain
                  this.keyy, // destination chain
                  this.addr, // destination address
                  this.token // denom of asset. See note (2) below
                );
undefined says you want to call the gateway with send token? the address is here: https://docs.axelar.dev/dev/build/contract-addresses/testnet
undefined says I wanted to do GMP token transfer via deposit addr https://docs.axelar.dev/dev/axelarjs-sdk/token-transfer-dep-addr
undefined says through Axelar SDK
undefined says what asset are you trying to deposit there?
undefined says eth-wei I think, correct me if I am wrong. Or does it have to be wrapped? Because I sent classic eth
undefined says WETH
Ethereum Goerli
ID: ethereum-2
eth-wei
undefined says Yeah, it needs to be wrapped ETH. You can check the specific token address that corresponds to the identifier eth-wei (sorry about the confusing naming) on the network here:
https://docs.axelar.dev/resources/testnet#assets

We'll be rolling out native ETH deposit in the SDK over the next couple of weeks too.
undefined says how can I mint this wrapped eth? Many thanks for info. Will this asset transfer through deposit work as expected once I generate address and transfer amount that is bigger than fee into it?
undefined says You can wrap/unwrap the native token by doing this: https://docs.axelar.dev/resources/wrapped-tokens
(you can call the method programmatically too of course)

And yes, once you send the token to the deposit address, it'll transferred automatically.
Also, I can send you some aUSDC if you provide your address while the bot is down.
undefined says Beautiful, thanks! This info helped alot. Here is my addr: 0xa085190c859eAe92bCCED9CE05b10DDb363FE5Ea
undefined says sent on goerli
undefined says Thanks! Onto testing it is then! Cheers!
undefined says @Milap Transfering aUSDC from ETH to Moonbase does not appear to happen for me? I generated deposit addr above, sent tokens to it (On goerli) and tokens are not on Moonbase yet (10min later), any hints as to what I might be doing incorrectly? Thanks!
undefined says Ethereum finality takes about ~20 mins
you can filter your tx status here:
https://testnet.axelarscan.io/transfers/search
undefined says So what I found out is, that contract transferred tokens to different address than what I entered
undefined says is that normal behaviour?
undefined says can you provide your tx and what values you submitted?
undefined says https://goerli.etherscan.io/tx/0x855ecf5c9ac590cb4af2b6e4246549bc17842808ef70689f5737f318cbffc70c
undefined says i wanted to send it to same addr i sent it from
undefined says so sender 0xa085190c859eae92bcced9ce05b10ddb363fe5ea receiver 0xa085190c859eae92bcced9ce05b10ddb363fe5ea
undefined says instead token went to 0x74897085e199767dbee4d37e84773d2549ad6a6e
undefined says the way cross-chain token transfers work with axelar is that the axelar network generates a deposit address on the source chain that's controlled by our gateway contract, linked to the recipient. Once you send the tokens to that deposit address, and the block has been finalized (~20 mins on ethereum), it'll arrive to the recipient address you entered
you can see the deposit address is linked to your receiver on the explorer:
https://testnet.axelarscan.io/account/0x74897085e199767dbee4d37e84773d2549ad6a6e
undefined says oh so it will arrive it just did not arrive yet right? or
undefined says yep, just need to wait for about ~10 mins more. it's much faster when going from other chains like avalanche/moonbeam etc. since blocks are finalized faster
undefined says Example transfers:
https://testnet.axelarscan.io/transfers/search
undefined says oh okay, because I sent one from Ethereum to Moonbeam 25min ago and nothing arrived yet so was wondering..
undefined says https://goerli.etherscan.io/tx/0xfef502bcfa729ae524f71f2ae4b745cd00dce532c1d3be2f96d8e076aba99f73
undefined says this one
undefined says Looks like that deposit address was generated for WETH, not aUSDC, so that won't arrive
https://testnet.axelarscan.io/account/0x2f25f85970062ee2a6229c5c951b16a6f3cc5dec

You need to generate one for aUSDC (asset name is `uausdc`)
undefined says i sent you some aUSDC on avalanche
undefined says oh yeah could be, I accidentally sent one like that before... Okay I will wait a little till that one on avalanche arrive to see if it arrived just fine üôÇ
undefined says thanks! I will test ava->moonbase then
undefined says My 0.9 aUSDC from ethereum arrived to avalanche just few seconds ago!
undefined says Huge thanks for your help @Milap ! Appreciate it.
undefined says Hey! Can anyone help me understand this examples for two-way communication please?

https://github.com/axelarnetwork/axelar-local-gmp-examples/tree/main/examples/send-ack
undefined says Hey guys, have any of you encountered following error when interacting with aUSDC contract on testnet?     const txHash = await srcErc20
        .transfer(depositAddress, ethers.utils.parseUnits(amount, 6))
        .then((tx: any) => tx.wait())
        .then((receipt: any) => receipt.transactionHash);
undefined says Error: cannot estimate gas; transaction may fail or may require manual gas limit
undefined says @Axelar Network
undefined says 
undefined says RESOLVED: It was  ethers.utils.parseUnits(amount, 6) that caused this to fail. Manually inputting sum worked.
undefined says what question do you have? 
It's a pattern used to do a 2-way callback. I.e.
1. a  call to a gateway on the source chain,
2. sends a transaction on the destination chain, 
3. that in-turn calls the gateway on the destination chain
4. that triggers the contract on the source chain. 
you can use it to establish synchrony.
undefined says Thanks. That makes sense. Got a little confused by the "ack" terminology.
undefined says It looks like there is an issue with GMP gateway on Moonbase alpha network
undefined says helo, does `chain.giveToken` not work on locally forked networks? 

cc: @sergey @Canh T
undefined says @nptytn could you help?
undefined says If I had to tweak this a bit. I want to just call `gateway.sendToken` on the destination chain rather than calling the source chain contract again. How do I pre-pay the gas for this using the GasReceiver contract on the source chain?
undefined says Hi, for `sendToken`, it doesn't require you to pay to the `GasService` contract. So, `pre-pay` is not needed. Our network will take fee from your sent amount. So you'll get a bit less tokens at your destination address.

Note: If the sent amount less than required fee, your transfer will be stucked. But it can be resumed when your "total paid" to given address >  fee. You can query the fee with the sdk as described here https://docs.axelar.dev/dev/axelarjs-sdk/axelar-query-api#gettransferfee
undefined says should work. it'd be helpful if you can provide more details for checking. what chain are you trying to fork? can you give me an example of what you run?
undefined says DMing you the details in a bit.
undefined says hi all
undefined says For research & development purposes, I'm trying to figure out if I can get a new network connected to axelar's network. It is a small network running a consensus approach that is more amenable to on chain gaming.  The technical side of this sounds fine. But if there is a lot of inertia in getting validator support it might not be the right idea. Some more info about our project can be found here: https://www.polysensus.com/ .
undefined says Is it hard to connect a completely unknown test net in this way ?
undefined says Hmm, "The Axelar validator must obtain a secured and private RPC endpoint for the EVM chain. This is usually done by the validator running their own node for the EVM chain" - what other ways would there be for a validator to obtain a "secured and private RPC" ?
undefined says Hey @nptytn 
It seems like all the gmp transactions are taking a while to go through
undefined says Is there any issue currently?
undefined says @sergey
undefined says Because we have a deadline of a few hours for the hackathon submission if this could be resolved soon 
Would really appreciate that
undefined says @Milap
undefined says Alright, thanks.
undefined says hey, is that testnet or mainnet? what are your source chain and destination chain?
undefined says Is there a sample app using the sdk?
https://docs.axelar.dev/dev/axelarjs-sdk/token-transfer-dep-addr
undefined says Hello, we're looking for a team member to discuss a technical integration. We want to integrate our frontend with the Satellite bridge to bridge a token between ETH<->COSMOS.
undefined says hey @nptytn -- please check my DM.
undefined says Testnet 
Source chain fanton
Destination chain avalanche
undefined says I think it has something to do with avalanche as the destination chain
undefined says Was working fine yesterday
Today it isn't approving
undefined says @nptytn
undefined says Hi Axelar team, I seem to remember a page with a bunch of API endpoints to query data about Axelar. Could I get a link?
undefined says Now the explorer isn't picking up any of my transactions anymore
undefined says have TX ids?
undefined says Nope it's not even showing up
undefined says Plus any transaction that uses avalanche as it's destination chain doesn't get approved
undefined says Am I the only one experiencing this?
undefined says Started a thread.
undefined says Hello @everyone!
As a web developer with 6 years of full stack experience, I would like to set up a new job opportunity for myself, who has led several projects to success and received good reviews from many clients.

***This is my website: https://dennis-stephens.vercel.app***
You can check my experiences, projects with my name in team section, several certifications and Linkedin recommendations here.

It can be said that the strengths that I can see are the simultaneous guarantee of project speed and quality, accurate time management, and sincerity.

If you are currently in need of a new developer for your team, want to bring up a new startup, or need a freelancer, please check my website and feel free to send me a message.
undefined says Hey @markcarey, I can see there was only a single gas paid event for multiple contract calls. Currently the gas receiver requires that you pay the minimum fee for each contract call in the transaction individually. So for 3 `ContractCall` events there must be 3 matching `GasPaidForContractCall` events in the tx
undefined says @_j The txn shows two separate gas payments: https://goerli.etherscan.io/tx/0xc97429ab77f6d811fa55b8279659c1e85052e3c0b10007c50694211f18030cdc And the Events do indeed show the **two** `NativeGasPaidForContractCall` events as you indicated.
undefined says How much does AXL AXL unlock calendar
undefined says why is this cmd `node scripts/test examples/call-contract-with-token testnet "Ethereum" "Polygon"  1 0x6426f98F4728Fb8D2D8904c55983Be4c3132be6D "Hi  Kamal sending you 1aUSDC token"` resulting in error of rpc_error
undefined says faucet for Polygon , Avalanche arent working despite the correct syntax.
undefined says Can someone please send me some axellar faucets over Polygon or Avalanche network to this address 0x69B97e0dC6b0A47656E75e55cD997579C9752C30 üôè
undefined says Hello, I am studying the example code for working with compound. AxelarForecallable shows error about missing 2 argument address forecallService_, what does 2 argument mean? Or we could fix it in the example. Thank you.
undefined says 
undefined says Hello! Did you try #üíß‚îÇfaucet channel?
undefined says Hi @Sergey Pish what does the error say if you hover your mouse on it?
undefined says 
undefined says need 2 argument - forecallService_,
undefined says what does it mean - forecallService_?
undefined says Are you importing it from there with the latest version? https://github.com/axelarnetwork/axelar-gmp-sdk-solidity/blob/main/contracts/executables/AxelarExecutable.sol (https://www.npmjs.com/package/@axelar-network/axelar-gmp-sdk-solidity)
undefined says yess , its not working , check this https://discord.com/channels/770814806105128977/1002423218772136056/1052210211009609728
undefined says The question is not in AxelarExecutable.sol but in AxelarForecallable.sol
undefined says 
undefined says This use AxelarForecallable
undefined says @_j just following up on this. Thoughts?
undefined says Yes you are right, i meant `AxelarForecallable` The example has not been updated with the latest version as the second argument should be the forecallService. I'll ping the team to update
undefined says Thank
undefined says Hey, anybody had luck with using the `chain.giveTokens` function with chains created using `forkAndExport`? Fails to work for me.
undefined says Investigating- we'll let you know when the issue is resolved!
undefined says `
npm ERR! > @axelar-network/axelar-cgp-aptos@1.0.1 postinstall
npm ERR! > run-s build
npm ERR! 
npm ERR! 
npm ERR! > @axelar-network/axelar-cgp-aptos@1.0.1 build
npm ERR! > run-s build-aptos
npm ERR! 
npm ERR! 
npm ERR! > @axelar-network/axelar-cgp-aptos@1.0.1 build-aptos
npm ERR! > ./aptos/build.sh
npm ERR! npm WARN using --force Recommended protections disabled.
npm ERR! npm WARN using --force Recommended protections disabled.
npm ERR! npm WARN using --force Recommended protections disabled.
npm ERR! ./aptos/build.sh: 4: aptos: not found
npm ERR! ./aptos/build.sh: 5: aptos: not found
npm ERR! ERROR: "build-aptos" exited with 127.
npm ERR! ERROR: "build" exited with 1.
npm ERR! npm ERR! code 1
npm ERR! npm ERR! path /home/user/.npm/_cacache/tmp/git-clone1fbchx
npm ERR! npm ERR! command failed
npm ERR! npm ERR! command sh -c run-s build
npm ERR! 
npm ERR! npm ERR! A complete log of this run can be found in:
npm ERR! npm ERR!     /home/user/.npm/_logs/2022-12-13T16_29_44_819Z-debug-0.log

npm ERR! A complete log of this run can be found in:
npm ERR!     /home/user/.npm/_logs/2022-12-13T16_29_38_342Z-debug-0.log
`
undefined says getting this error while trying to do `npm install` in hello world example
undefined says Hey, fam I am new to the axelar and trying to figure it out for my project but I am stuck here.
undefined says sent you aUSDC on avalanche, until the faucet issue is resolved
undefined says can you pull the latest version of the repo and try again?
undefined says by latest you mean https://github.com/axelarnetwork/axelar-local-gmp-examples.git this right?
undefined says I just cloned it an hour ago.
undefined says Do you get the same issue when doing npm ci in a fresh repo? We'll take a look at it
undefined says yes @Milap
undefined says Thanks, it helped me. Though I hope this will be solved and all the packages will be updated soon in the main repo.
undefined says @ak101_ are you running it on windows?
undefined says No, its ubuntu
undefined says hmm, can you try to remove the node_modules folder, clean npm cache and run `npm i` ? (works here on node v16.18.1)
undefined says Can you send your package.json ss, I did try `npm i` `npm install` `npm ci` nothing worked unless I changed `axelar-network/axelar-local-dev` version to `1.1.0`
undefined says is it the latest pull?
undefined says @ak101_ yes
undefined says tried and it didn't work for me
undefined says hey, i need some info to check. what's the output of `npm list @axelar-network/axelar-local-dev`?
undefined says The issue has been flagged to the team and has been manually approved.
undefined says Thanks for following up - we are working on a fix
undefined says hello , can someone please help me with this transaction 0x0f737af42caf0cb23934b694d8ba54d7fff0f15f2d95cf2026dc03ad8a84b3c6
undefined says how do i solve this `insufficient fee` error  ? @Milap @Axelar Network @Jake | Axelar
undefined says are you using the sdk call to estimate gas? you need to pay more for processing/execution on the destination chain.
undefined says I am just following the commands from the axellar-gmp github
undefined says i even tried paying more gas fee , but it says `failed to fetch` while approving @sergey
undefined says Fixed is deployed to testnet. Can you try sending a tx again?
undefined says our testnet relayer is running out of fund. I just funded it now, so can you try again?
undefined says @Kamal btw, if you don't send sufficient gas in the same tx as contract call, then you add more gas later, your tx won't be automatically approved. this is a work in progress on our side.
undefined says @ak101_ hey, i can reproduce your issue on ubuntu. can you pull the latest commit from main branch and retry?
undefined says Boom: https://testnet.axelarscan.io/gmp/search?txHash=0x468119ca80be2a94f7aa9a5b92e75ddb16a3be7eba06115f0e6b4ee985f208ef Looks good üëç
undefined says Hello there
I applied for the Moonbeam hackathon on gitcoin
we have developed a cross-chain voting system
Please check it üëç
https://github.com/adachi-440/cross-chain-voting
undefined says Hey, I am new to using axelar and am exploring it. I am not able to figure out how to use ConstAddressDeployer, can someone please help me???
undefined says I am new to cross chain development
undefined says What's the real circulating supply right now Team?
undefined says https://coinmarketcap.com/currencies/axelar/
undefined says Hi. i just finished running node.
Can you tell me how to generate wallet or private key from this node?
undefined says So this is correct, ok, thanks
undefined says https://docs.axelar.dev/validator/setup/manual#generate-keys
undefined says ???
undefined says Hello @0xAyush, here's a comprehensive guide on `ConstAddressDeployer` https://docs.axelar.dev/dev/build/solidity-utilities#constant-address-deployer
undefined says I was reading the whitepaper, I have a doubt at which you explained connecting with bitcoin network for asset transfer.
Consider if I'm doing tx from Ethereum network to Bitcoin network, after deposit and committing threshold signature on axelar chain how can we ensure it got settled in correct account/ basically how can we ensure if payload is not changed.
cc @Ilya Lukyanov @Kiryl
undefined says Hello I have a question toward if the message send by axelar network failed, do we have an options to retry it again later on automatically? I saw the document where you could retry by cli only  https://docs.axelar.dev/cli-docs/v0_27_0/axelard_tx_evm_retry-event 
Thank you
undefined says @0x00 @mewpawee I see your questions- getting you answers from the team!
undefined says :Cross1: @Axelar Builder we‚Äôve got an Axelar Builder‚Äôs Telegram group for anyone actively building on Axelar or thinking of taking their idea or dApp cross chain- it‚Äôs a great place to meet fellow devs and teams and get in on the projects launching soon! 

If you join, please do introduce yourself and your project, and feel free to add your team as well! 

üîó https://t.me/+AqjGpPEvvNxmZmEx
undefined says Can you please tell me how can I call the execute function to deployToken to the gateway contract. Where can I find an example of converting data to bytes?
undefined says Please does axelar have positions for internships?
undefined says Hey Team, i am building a POC on testnet and there's a bunch of my Transaction Stuck. some got passed and some didn't.
1- https://testnet.axelarscan.io/gmp/0x81ceaad6c129d4847e5bc69c9aeecc567b32fe5b28029840bca323d7cfd674d3 (onCall approve => `cannot find chainethereum-2`)
2- https://testnet.axelarscan.io/gmp/0x9cb9f4fc745a99b3570f0805f38b15fb679c153d4b354a8f33ed632374be1f73:2 
3- https://testnet.axelarscan.io/gmp/0x5c7ecbef6134a5ecc6bc77dbd17e877db79cb3a10ec1c0ee1ad62aff52b11394:127
4- https://testnet.axelarscan.io/gmp/0xceef3becc2d4f1ef37f8cffb99a0ae98f374d89abac492055c0f3e37403a057e:2

Any insights where's the issue? also i noticed that the Relayer is not assigned to all of those TXs. Thanks (Manual approve fails with `cannot find chainethereum-2` for ETH<>ARBT and with `Failed to fetch` for other chains)
undefined says did u get an answer?
undefined says No I haven‚Äôt gotten a response yet
undefined says will investigate.
undefined says Anyone can please help me with how to get private key and how to embed that onto that alexar-example helloworld.sol
undefined says Hey @xabdou for transactions 1, 2 and 4 the amount of gas paid was below the threshold, so our relaying services didn't confirm them. Normally you can use this API https://docs.axelarscan.io/general-message-passing/getFees to get an idea of the fees (or corresponding SDK methods), however currently it won't return the right values when Arbitrum, Celo or Kava are your destination chains. Those three chains were recently added and minimal base fees haven't been set yet. I forwarded this to the team to get configuration sorted. In the meantime, make sure you transfer at least `1500000000000000` in source chain token when any of those three are the destination, or use different destination chains paying at least the amount of `source_base_fee` returned by the API (better for some padding to allow for gas fluctuations).

The third transaction is confirmed now. Our relaying services wait for finality on the source chain before confirming. For that purpose, worst-case finality on Arbitrum takes a long as `finality on Ethereum + L2->L1 sync frequency` which can be in the 30-40m range. Our relayer services are currently using a non-optimal approach to finality that causes some additional overhead. In this case it took ~50m. It's hard to tell how much of that was the overhead - maybe ~10m, maybe less. 

It's in our short/mid term roadmap to optimise finality on Arbitrum, but in the meantime just allow it more time when Arbitrum is the source chain.
undefined says Hey @Magical_vybez @Kamal Unfortunately, no. At this stage we don't have any open internship positions.
undefined says Noted. Thanks for the quick response.
undefined says I will added more gas from smart contract and let you know
undefined says @0xNickK_HilL you can just use any EVM-compatible crypto wallet (e.g. MetaMask) and create a new account or use an existing one. It will allow you to export the account's private key. Then after doing `cp .env.example .env` you can edit your `.env` file and set the `EVM_PRIVATE_KEY` variable to be your private key. 
Private keys don't go into smart contracts per se, but are used to deploy them or pay for transactions, so you'll need some funds on the account of the private key you'll be using. You can get testnet funds via faucets of the corresponding chains.
undefined says Btw, `1500000000000000` is `0.0015` Ether/equiv, i sent already more that that value, can you please double check the number?
undefined says all Txs gas is increased to + `0.1` , so i guess after increasing the gas it was not picked up again, clicking `Approve` button is not working as well. not sure if i initiate another Txs if gonna pass even though that previous ones are stuck? Thanks.
undefined says GOT it ser, But from where I would find the aptos address and the Aptos token linker
undefined says Can u please help me with that?
undefined says hey can someone please investigate this
undefined says I have funded all my acc but still this is the 8th time I am getting the same issue https://testnet.axelarscan.io/gmp/0xa0ac0a7477811d3ca4a1ae7ed1cfe72ff0289776eddfb49490590892972e87cb .
undefined says @Aawessels | P-OPS Team @PlasticGoat @Kiryl @Jake | Axelar @Axelar Network can any of u help me in this , Its now becoming üíî üò¢.
undefined says Looks like the tx needs to be confirmed from the Avalanche network. As the swap is from that side.
undefined says Hi Team
Please let me know if you are looking a blockchain full stack developer
Thanks
undefined says so when they gonna do it ? like I tried approving it but i get this error
undefined says please file a ticket here https://axelar.zendesk.com/hc/en-us/requests/new
undefined says Hello @Kamal , let me check it further with team members. In the meantime, can you please try a new GMP call on testnet with sufficient gas paid in the same transaction as the contract call? 

Adding gas functionality (`addNativeGas`) hasn't been fully supported by our relayers. However, we're actively working to support it in the next release.
undefined says Hey guys, who can I contact regarding business?
undefined says If you can drop more info about what this is regarding to I can connect you to the right person
undefined says Can you point me in the right direction to discuss this further?
undefined says Best to contact @james_friel | Axelar for this
undefined says Thanks man!
undefined says As it seems that he doesn't accept dms, could you be so kind as to give him a heads up to accept my friend request first? Appreciate it
undefined says The mention in here ought to be enough I reckon. Just sit tight üòâ
undefined says Not currently- will share any more updates regarding programs like this here!
undefined says Alright thanks for the response
undefined says Hi, may i know how the outgoing transactions are signed by the axelar gateway?
undefined says is it by a multi-sig?
undefined says does not feel too decentralized to me
undefined says Multi-sigs aren‚Äôt decentralized, and that‚Äôs why we don‚Äôt use one! Axelar runs a PoS blockchain instead, supported by our decentralized network of validators that are responsible for maintaining the network and executing transactions. The validators run the cross-chain gateway protocol, which is a multi-**party** cryptography overlay that sits on top of Layer 1 blockchains. They are responsible for performing read and write operations to gateway smart contracts deployed on connected external chains, voting and attesting to events on those chains.

Here‚Äôs a helpful article to learn more about the network, and we‚Äôve got plenty more blog posts there as well! 

https://axelar.network/blog/an-introduction-to-the-axelar-network
undefined says here's another article that would be helpful: https://axelar.network/blog/security-at-axelar-core.  üôÇ
undefined says Hi @Kate | Axelar! Added you as a friend, hoping I can shoot you a DM for a question I have r.e. building on Axelar. Thanks üôÇ
undefined says Any plan to add arweave to Axelar?
undefined says Hey- I‚Äôm Axelars community lead so won‚Äôt be much help over DM I‚Äôm afraid, but all of our core engineering team are here in this chat to answer any questions about building, troubleshooting or general Qs!
undefined says If you drop it here we‚Äôll get you some answers
undefined says @Jason Ma | Axelar would be a good point of contact in this case
undefined says @Kate | Axelar @PJ thanks a lot! certainly seems much better than wormholes 13/19 multisig!
undefined says Security and decentralization are at the core of Axelar's design!
undefined says hello! i'm having some trouble transferring aUSDC on testnet from ethereum-2 (goerli) to Osmosis (osmosis-4).

Here is one of my attempts: https://testnet.axelarscan.io/transfer/0x1b826e383adcf07f572df5fc9ed546888bee03bd4a23b46e4178a666c356ae8c

all of them seem to be getting stuck at the IBC transfer step. Am I missing something? I've basically just been following the docs for setting up deposit addresses: https://docs.axelar.dev/dev/axelarjs-sdk/token-transfer-dep-addr
undefined says @0xNickK_HilL sure, please DM me if you still need any help
undefined says Hey Builders - Electric Capital is publishing their annual web3 developer report soon. Please check to ensure that all your public repos are accounted for in the link below. There is a PR process to submit any missing repos by this Friday, Dec 23rd. Appreciate the help from everyone!

https://github.com/electric-capital/crypto-ecosystems/blob/master/data/ecosystems/a/axelar-network.toml
undefined says IBC channel to Osmosis testnet expired since their testnet was halted for some time. We'll add their new testnet once that's live as a supported connection.
You can try other testnets in the meantime: https://docs.axelar.dev/dev/build/chain-names/testnet
undefined says Hi everyone
undefined says I'm trying to make a cross-chain transfer through the  `call-contract-with-token` contract in my local dev net. I have set up my local dev environment and successfully deployed all contracts with the `node scripts/deploy examples/call-contract-with-token local` command. But when I run tests, I keep getting this error:
undefined says ```
node scripts/test examples/call-contract-with-token local "Moonbeam" "Avalanche" 100 0xBa86A5719722B02a5D5e388999C25f3333c7A9fb
--- Initially ---
/home/mide/Axelar-Task/Axelar-Project/axelar-crosschain-token-contract/examples/call-contract-with-token/index.js:51
          (await destination.usdc.balanceOf(account)) / 1e6
                                  ^

TypeError: destination.usdc.balanceOf is not a function
    at logAccountBalances (/home/mide/Axelar-Task/Axelar-Project/axelar-crosschain-token-contract/examples/call-contract-with-token/index.js:51:35)
    at Object.test (/home/mide/Axelar-Task/Axelar-Project/axelar-crosschain-token-contract/examples/call-contract-with-token/index.js:58:9)
    at test (/home/mide/Axelar-Task/Axelar-Project/axelar-crosschain-token-contract/scripts/test.js:17:19)
    at Object.<anonymous> (/home/mide/Axelar-Task/Axelar-Project/axelar-crosschain-token-contract/scripts/test.js:51:5)
    at Module._compile (node:internal/modules/cjs/loader:1103:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1157:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Function.Module._load (node:internal/modules/cjs/loader:822:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
    at node:internal/main/run_main_module:17:47
```
undefined says Here is my `index.js` file
undefined says Does anyone have an idea of what I'm doing wrongly?
undefined says thanks for the info.  I guess the IBC relayer is down but the actual osmosis testnet network is still running?  I can still send swap messages for swapping assets and they still seem to go through.
undefined says The IBC channel itself expired, since osmosis mentioned they were launching a new testnet soon, we decided to wait on adding a new IBC channel, since the current one is not planned to be maintained
undefined says gotcha, thank you!
undefined says @Jason Ma | Axelar @Ilya Lukyanov
undefined says Hello devs, how do I get the proxy address of a validator? I want to get the proxy address of a validator and track the voting status.
undefined says i think the best way is; subscribe to tendermint tx event.
undefined says I tried, but there is a difference in quotes in the events and it returns a syntax error.
undefined says and I know I can't get proxy address with tendermint events. Maybe can get vote events but it not working for proxy address.
undefined says not sure what you mean here. but something like this should work for you: 
```json
{"jsonrpc":"2.0","method":"subscribe","id":"0","params":{"query":"tm.event='Tx' AND axelar.vote.v1beta1.Voted.action CONTAINS 'vote' AND axelar.vote.v1beta1.Voted.voter CONTAINS 'axelar1...'"}} 
```
This way you get the vote events but it may be necessary to write it to a db and parcel it out
undefined says umm can get help from LCD for this - one sec
undefined says `/cosmos/tx/v1beta1/txs?events=message.sender='axelarvaloper...'&events=message.action='RegisterProxy'`
undefined says But you will need an archive node
undefined says see https://docs.axelar.dev/resources
undefined says Passed this onto the team to get you some help!
undefined says Upon more research, I got more questions! I see that the axelar deployer writes to the axelar gateway. Who is the authority for the axelar deployer? I understand it has to do with the validators, but how does it work, given that the validator set might be changing all the time?
undefined says Candle is an EVM-compatible blockchain network that is seeking talented developers, designers, and marketing professionals to join our team. If you have a passion for blockchain technology and want to make a difference, we encourage you to apply for one of our open positions at Candle. DM.
undefined says Because it looks like if the axelar deployer is compromised‚Ä¶. Then everything is messed up ü•≤
undefined says That‚Äôs very scary to have billions depend on a single addresss
undefined says We also have open positions at Axelar as well üòâ 
https://axelar.network/careers
undefined says Hey, validators on the Axelar network are the decentralized authority. After verifying user deposits/cross-chain calls, they create signed approvals/commands (and batch them). These signed batches of commands can be relayed by anyone, since our gateway contract verifies the signatures. Axelar deployer is just a relayer we run for user's convenience and security is not affected at all if it's compromised.
You can find these batches (and relay them yourself!) here: https://axelarscan.io/batches

When the validator set on Axelar changes, the network also signs an update to the validator set for the gateway contract. For e.g:
https://axelarscan.io/batch/polygon/1c3ec4cf1adaedaaa0dd0bfafb15d9c8aa3766f831398410af05c52ba7cb173e
undefined says @Jake | Axelar we are in the meeting.
undefined says Thank you üôèüèΩ
undefined says üëã  when there is a cosmos chain that is not listed under the mainnet cosmos chains, what needs to be done such that tokens can be transfered to that chain?
undefined says I'll help 10 people how to earn $45,000 in just 72hours from the crypto market.
Dm me to know How
undefined says got it, so the validators will sign the approval and the deployer is simply the address that relays it, so the gateway contract will simply reject it if the signature is not provided correctly by the validators. thanks!:)
undefined says and when the validator set changes, the old validator set signs an update to the transfer the ownership of the deployer contract to a new addresss?
undefined says what does "weight" in this case mean?

https://axelarscan.io/batch/polygon/1c3ec4cf1adaedaaa0dd0bfafb15d9c8aa3766f831398410af05c52ba7cb173e
undefined says i am very worried about security these days given all the major cross chain hacks
undefined says Anyone knows about this project? 

https://twitter.com/88x_finance?t=V-0qkvvz2opA9WNJ7M5XQA&s=09
undefined says what are the batches for though?
undefined says Yes we know them well
undefined says hi, can you answer me on pm
undefined says Feel free to ask in here, perhaps we can also help you.
undefined says Hi! How hard is it to connect a new blockchain, is it permissionless or requires development from Axelar team?
undefined says Blockchain platform builders can seamlessly plug-in their blockchains to all other blockchain ecosystems, through a single point of integration. It takes less than 10 minutes to integrate a new EVM chain with all other interconnected chains on the Axelar network so setting it up is simple. Here are the basic steps: https://twitter.com/axelarcore/status/1499053636969709568

Feel free to reach out to Milap for help with this process.
undefined says And then we need to ask validators to set up new nodes? How to make the communication less rpc-dependant? They use to fall down, even infura's.
undefined says Yep, the weight corresponds to the power each validator has in the signing set. It's based on quadratic voting (to improve decentralization), you can read more about it here: https://axelar.network/blog/security-at-axelar-core
undefined says The batches are just a list of approvals that were signed together as an optimization, instead of having to relay each approval individually.
undefined says What's the risk to use it?
undefined says @Axelar Builder We're excited to be partnered with Web3 Builders  Alliance :itshappenin:

Upskill your code and work hands on with Axelar tooling!  

Come build with us:

 https://twitter.com/comebuidlwithus/status/1605677214501986305?s=46&t=n1_LHHHxMOV8lTitUGec-Q
undefined says Why Satellite don't detect Metamask balance for Evmos?
undefined says They haven't launched yet and are still in waitlist- for anything like this it's always DYOR!
undefined says #üì°‚îÇsatellite we can help you here
undefined says 
undefined says As a heads up, the Axelar Relayer services will undergo a scheduled upgrade starting 9:30pm UTC Friday, Dec 23 for about ~2 hrs. 
Satellite, token transfers, and GMP will not be available. The Axelar network will not be affected.
This update adds native token transfer support in the relayer.
undefined says Liquid staking through protocols and smart contracts:

 It's good but I would like to see a solution that allows liquid staking directly to all the Tokens in stake of the HUB without the need for us to block our tokens through a SmartContract.

 Is Axelar working on a solution of this magnitude?  tell me yes...
 So if we will have a true 1:1 liquid staking for the entire ecosystem, we will only have to authorize our wallets to link our native tokens to the derivatives of these in staking, and these will be generated, something similar to how AUTH does with delegations but allowing that in In the event that you sell your derivatives, you can no longer access the native token, as is the case with these protocols and their smart contracts.
undefined says This is fake sir please report and don't spread
undefined says might be a really silly question but what does native token transfer support in the relayer exactly mean? Does this mean able to transfer (for example) xyz chain's native tokens to ethereum (and vice versa) without swapping it to already supported tokens (like USDC/axlUSDC)?  

If not, Is there any documentation on what the process is for supporting having native tokens registered?
undefined says We're adding support to allow transfers of native tokens like ETH/AVAX/MATIC etc. instead of using Wrapped ETH
undefined says Nice! Thanks for the clarification
undefined says why does TMPC have weights tho, isn't it just M of N
undefined says also, i don't get the hype for L0
undefined says L0 looks like a multi-sig with fraud proofs? why is everyone talking about it like it is the best thing in the world
undefined says Very little, if you DM me I'll connect you with their team.
undefined says https://github.com/axelarnetwork/axelar-local-gmp-examples
undefined says /Can anyone help me with the cross-chain deployment
undefined says @talal | DevOps @ Axelar 
Can you check this?
0xd94adeedd637dd89d88e94ba6ed1a0ec5153cf535cf94514816ac0ccc00ac419
Using SendToken from Moonbeam to Avalanche several months a go, its still on vote confirm
This is when moonbeam has problem back then
Havent receive the token
undefined says I have a question, how do we pay gas costs for cross chain function calls and how are they calculated?
undefined says Best to open a ticket over here https://axelar.zendesk.com/hc/en-us/requests/new
undefined says Iam using SendToken method from gateway contract, so there is no deposit address, etc, thats why I am asking about it here
undefined says Ah gotcha
undefined says Hello i was directed here because I believed I was eligible for the airdrop but when I check for claim. It stated I was address not valid.
undefined says Hello ! The criteria for receiving airdrop were announced in the #üì¢‚îÇannouncements  channel.
undefined says Hi, Check it out here https://discord.com/channels/770814806105128977/955655587260170272/1036624321784856616
undefined says What could be the problem of insufficient fee even when there are funds in my wallet for every network ( I used https://github.com/axelarnetwork/axelar-local-gmp-examples)
undefined says @Technical Moderator
undefined says Btw everything is working on local
undefined says @nptytn looks like the relayer requires funding.
undefined says How can I give funding?
undefined says Anyone?
undefined says @Everyone think this is impossible to do it?
undefined says I see that there is a special relayer that performs cross-chain transactions. Is it possible to run a such relayer?  To be completely permissionless, wouldn't it be better for it to be public as well?
undefined says and wouldn't that make for less pending transfers?
undefined says hello, i have a simple "DummyGasService" contract in my test infra that implements the IAxelarGasService Interface. The compiler fails to compile this contract because of "Stack Too Deep" simply because of the nine-argument method `payGasForContractCallWithToken`. Are any of you aware of how to get this interface to compile? Is the following considered the most up-to-date version of this interface? How is Axelar compiling their Gas Service implementation ?

```    function payGasForContractCallWithToken(
        address sender,
        string calldata destinationChain,
        string calldata destinationAddress,
        bytes calldata payload,
        string calldata symbol,
        uint256 amount,
        address gasToken,
        uint256 gasFeeAmount,
        address refundAddress
    ) external {}```
undefined says @PlasticGoat ?
undefined says relaying is completely permisionless. you can do it manually or spin up independent services.
undefined says How can do that? any docs about it?
undefined says Hey @katzman ! We had the same issue with the compiler. The workaround is to use `string memory symbol` instead if `calldata` in your params:
```
    function payGasForContractCallWithToken(
        address sender,
        string calldata destinationChain,
        string calldata destinationAddress,
        bytes calldata payload,
        string memory symbol,
        uint256 amount,
        address gasToken,
        uint256 gasFeeAmount,
        address refundAddress
    )
```
undefined says that works! thanks for the tip
undefined says gm! quick question: does axelar have support for the substrate evm pallet (https://docs.substrate.io/tutorials/integrate-with-tools/evm-integration/)
undefined says @Jake | Axelar
undefined says Yes, moonbeam is an example of this
undefined says axelar (AXL) will be accepted on the Powered by PREMATCH Betting Platform.  In the near future it will be available!  üöÄ‚ú® To the Moon!

 Website: Prematch.io/

Is this legit?
undefined says what's the reason callcontractwithtoken is not enabled for aptos?
undefined says also, is there a cost and latency difference between callcontract and callcontractwithtoken?
undefined says Is it possible to get the axelar deployer to call an arbitrary endpoint?
undefined says We are not in contact with them. However, it is possible they are accepting AXL.
undefined says you can deploy your own cross-chain linker / token on top of general message / contract call interface.
undefined says none, execution path is identical.
undefined says can you elaborate what you have in mind?
undefined says is there a doc or example we can look at how to do that? what some stuff for a better understanding on how it works and is it something achievable without axelar's involvement?
undefined says is there a doc for how to programmatically fetch a list of token supported by callcontractwithtoken  and cost for executing them?
undefined says meaning, i see now that axelar calls the axelar endpoint. can i deploy my own contract and have axelar validators sign and the deployer call that contract function?
undefined says any info on the roadmap on supporting more tokens? e.g. when WETH gonna be supported on other chains, e.g. like arbitrum?
undefined says does it make sense to support weth on arbitrum
undefined says you can just wrap it if you need, no?
undefined says hey I'm sorry if this is a basic question, but I'm having a bit of trouble of finding info about this. How does one deploy their own ERC20 token to Axelar (I understand that it's then wrapped afterwards)?
undefined says do you use this: https://docs.axelar.dev/cli-docs/v0_27_0/axelard_tx_evm_create-deploy-token ?
undefined says wait, so currently you can bridge native eth directly to arbitrum?
undefined says @sergey Apologizes if this is covered in another channel/elsewhere, but is documentation for Cosmos GMP on testnet available yet to start building and testing? Thanks!
undefined says is there a flow diagram on lifecycle of a transaction submitted from chain A to chain B? basically try to understand if we want to setup local testnev, what's the minimzed relayer setup? i can't get anything working with a local setup wonder what i am missing here? how long should we wait ethereum->polygon if we use forked chain?
undefined says Thank you for this.
Does this means however that axel at validator will still need to vote in favour of supporting the new chain?
Or the EVM node client that they should be running will make any EVM compatible chain to be supported
undefined says yes, we have a devnet you can build against.

* You can spin up a connection to it from your own network, create an IBC channel, and play with sending and receiving messages.
* The devnet doesn‚Äôt have a relayer running yet, so you‚Äôll need to ‚Äúrelay‚Äù messages manually for now. All these steps will be automated by the relayer once it‚Äôs ready, so you won‚Äôt need to do them.
* The current instantiation works for a native module integration. You can forward packets to smart contracts also, but more work is needed to decode the packet.
* Here‚Äôs the notes on how to create an IBC connection and instantiate sends/receives. https://github.com/axelarnetwork/evm-cosmos-gmp-sample
* You may encounter some bugs. Please send any feedback to the team.
undefined says you can deploy your contract on top of the Axelar gateway. make calls to the gateway and the network will process and deliver to other chains. gateway supports arbitrary messages.
undefined says native tokens of L1s should go live pretty soon (this month).
undefined says you can deploy your own interchain token using this as an example: https://github.com/axelarnetwork/token-linker. it runs on top of the axelar general message passing.
undefined says Thank you very much for that ser! üëç
undefined says Most chains' mainnet and testnets have been given the same chain name. Is that intentional?
undefined says Is there a reverse function for `IAxelarGateway.tokenAddresses` i.e., can I convert token address to symbol using some utility?
undefined says @sergey Is the code for AxelarGateway open source?
undefined says does Axelar support Flow blockchain?
undefined says yep, it is: https://github.com/axelarnetwork/axelar-cgp-solidity/blob/main/contracts/AxelarGateway.sol
undefined says Not at this stage. You can check supported networks here: https://docs.axelar.dev/resources/testnet, https://docs.axelar.dev/resources/mainnet
undefined says If you have an address and know the chain, you can just query the ERC20 contract on that address for its symbol name, e.g. https://github.com/axelarnetwork/axelar-cgp-solidity/blob/7a8978819940469d15fe7a7029ea51d2464982e7/contracts/ERC20.sol#L39
undefined says ping us once you set-up the IBC connection. we'll need to auth the route of messages to it.
undefined says Can anyone give me a tldr of what the `vald` directory is in the axelar repo? Is it the Axelar validator daemon?
undefined says yeh, but how do i get the gateway to trigger arbitrary functions on the other chain?
undefined says take a look at some of the examples here: https://github.com/axelarnetwork/axelar-local-gmp-examples. once messages arrives at the destination chain, then a relayer service executes it to the destination contract address.
undefined says yes
undefined says Hello team, I really wish you can enable a bridge for the Exosama Network, Multichain is now an axis there for bridges and our technology is much better as well as allowing the transfer of NFTs between chains as well, it is one of the largest projects currently in the Substrate ecosystem and is closely related to Moonbeam and Moonriver.
undefined says The ecosystem is so big:

https://www.dailysama.com/stats/market
undefined says @Jake | Axelar
undefined says yes that's correct. It's a sidecar process that validators use to verify external information and to sign data
undefined says whats the contract address for ausdc?
undefined says ausdc https://docs.axelar.dev/resources/testnet
https://axelarscan.io/assets
undefined says Sorry for the late reply- chain maintainers still need to identify which chains they want to support (and add corresponding deposits).
undefined says Long term, the validators won't be involved. Only the people running the new vald process will be chain maintainers.
Short term will be a hybrid. We will permission the chains onto the network, but even today the validators don't vote to support the chain they just register as chain maintainers.
undefined says hey guys, i tried yesterday some dummy ausdc transfer from mumbai to osmosis-4 and it seems that ibc transfer is still pending
https://testnet.axelarscan.io/transfer/0xdadf088d6e83bb25ad108ee8c2f1edcca5a7ae94729e1f5e0280cee89178e6c5

incidentally i tried to fund an osmosis wallet using the cross-chain faucet, but this yields the same result, ie pending ibc tansfer
https://testnet.axelarscan.io/transfer/084FCE7A0881B089E4CBE8ADBF9B57B5EC4728D23CAB09719AF4A995C8B432F3

 any ways to check for relayer status, or is there something i'm doing wrong here ?
undefined says osmosis testnet was down, ibc channel expired and we haven't reestablished it yet. try to use other cosmos networks on the testnet if that works for your use-case
undefined says Hey, we have this doc https://docs.axelar.dev/dev/gmp-overview#flow-architecture-in-steps . Please let us know if you have further questions. 

If you are going to experiment on supported testnets, you don't need any setup - just initiate the flow by calling AxelarGateway on the source chain with contractCall or contractCallWithToken and we'll relay everything for you. If you're having issues with your local environment, we can help too - feel free to DM me with details about the issues.
undefined says Thanks
undefined says Hi, I am not familiar with Axelar Networks features. But, I have seen it from Polygon Supernet partnership. I wanted to ask if it is possible to use Axelar Network to obtain Chainlink features like VRF, data feeds and external adapters on a Polygon Supernet?
undefined says Such features could be build on top of the axelar protocol, but are not natively implemented
undefined says Thank you for the fast reply
undefined says Hey Builders,

I know some builders are using multiple message passing solutions in their architecture. If you are using LayerZero, please read the report by L2Beat to understand the security risks they discovered.

https://twitter.com/l2beat/status/1611008135086411779?s=20&t=UsoqNW1AtCknpEHqarX9ug

"As we could see above, even though our token was built using LayerZero and used its mechanics as intended, we were able to steal funds from the tokens‚Äô escrow. Of course, it was a fault of the application (CarpetMoon token in our case) and not the LayerZero itself, but that proves that LayerZero by itself does not provide any security guarantees.

When LayerZero describes their security model regarding Oracle and Relayer, they assume that app owners (or someone in possession of their private keys) won‚Äôt do anything irrational. But that assumption is incorrect in an adversarial environment. Moreover, it requires the users to trust the application owners as a trusted third party.

In practice, as a result of this, one can not make any assumptions about the security of the applications built using LayerZero ‚Äî each app should be considered risky until proven otherwise."
undefined says In contrast, Axelar security is powered by a combination of:
* Proof-of-stake decentralized design at the core.
* Novel quadratic voting mechanism increases decentralization of the network.
* Validator security policies, such as mandatory key rotations.
* Network functions that enable mitigation of malicious interconnected chains [suspend traffic from them].
* Contract limits that specify how much can be transferred over a time period.
* Rigorous audits & bug bounties.

Read more here: https://axelar.network/blog/security-at-axelar-core
undefined says Pinned a message.
undefined says hmmm
undefined says this article seems a bit unfair right? i mean, they are assuming that both owner and relayer gets compromised
undefined says isnt it kinda similar in the case when the whole axelar system gets compromised
undefined says It's not similar. The main focus of the analysis is that LayerZero uses an isolated security model and is incredibly centralized.

"LayerZero claims that ‚ÄúLayerZero‚Äôs design eliminates the possibility of collusion‚Äù. But in fact, that statement is not true (which we prove in the experiment showcased below), as each user application can define its own Relayer and Oracle. LayerZero does not guarantee by design that those components are independent and that they cannot collude. It‚Äôs up to the user application to provide those guarantees. And if the application chooses to break them, there‚Äôs nothing in the LayerZero mechanics that can stop it from doing so."

Axelar uses a shared security model where it is built using the battle-tested proof-of-stake consensus with a diverse and dynamic validator set. Anyone can join, anyone can participate, anyone can contribute to the security of the network.

In most Byzantine systems, if you break liveness, the system halts its operation, but an adversary would need to do much more to break safety. For instance, a blockchain may halt under a denial-of-service attack on its validators, limiting their ability to send messages and reach consensus. But to break the safety of the blockchain, the adversary might need to find vulnerabilities in validator nodes and extract their secret keys.
Robustness of such systems is thus achieved via diversification of software deployments. One validator might deploy on an Ubuntu machine, another on Debian, some in cloud environments, some on-premise [definitely the preferred route].
undefined says Very well said :Axelarstrong:
undefined says Why the scan shows 676M de AXL staked?
undefined says That's how many tokens are currently bonded. Locked tokens can be staked as well.
undefined says Hello admin this contract 0x523e50e3dbe6f5E76FdC5cc70b14c9E4b5467588 was recently deployed by axelar just curious any tag or name for the contract
undefined says Hello can i deploy contract on axl native chain?
undefined says <https://docs.axelar.dev/dev/guides/example-composable-usdc>

i'm not familiar with how the circle bridge works, but what address gets passed into _circleBridge when calling `constructor(address _usdc, address _circleBridge)`?
undefined says @Jason Ma | Axelar
undefined says hey, this is nothing more than a transient contract used to transfer USDC from ethereum to osmosis. the address itself (0x523e50e3dbe6f5E76FdC5cc70b14c9E4b5467588) is a one-time deposit address generated by our network, which you can replicate in these docs: https://docs.axelar.dev/dev/axelarjs-sdk/token-transfer-dep-addr
undefined says this feature is not available at the moment
undefined says Jason is one of our BD team leads, please avoid pinging the team! We'll get back to all the messages posted here, the core team and the mods are in all the channels here.
undefined says Would it be possible to use a method similar to AUTHZ to read the wallets that have their Tokens deposited in staking by securing the networks to create a liquid staking model whereby authorizing this new AUTHZ, we can receive or lose a Liquid Token in our wallets? It is a way to get liquid staking without the need to deposit and block our funds through a contract, but I have doubts if once authorized to have free access to our Liquid Tokens, these can be burned in case the Native Token enters an unstaking period of and stops securing the network.
undefined says https://docs.cosmos.network/v0.47/modules/authz
undefined says https://github.com/cosmos/cosmos-sdk/tree/v0.46.0/proto/cosmos/authz
undefined says Or probably using this Bank:

https://docs.cosmos.network/v0.47/modules/bank
undefined says https://github.com/cosmos/cosmos-sdk/tree/v0.46.0-rc3/proto/cosmos/bank
undefined says The only thing we should do if it works is to authorise the reading of our wallets to this Liquid Staking module and grant permissions to create or delete Liquid Tokens from our wallets.
undefined says I'm sorry about that
undefined says No worries!
undefined says Hello, I was trying to do a Axelar transfer from Goerli to Arbitrum Goerli, but the transaction is repeatedly failing.
undefined says https://dashboard.tenderly.co/tx/goerli/0xfdee1ba2d54149501268098b0b0212ce2eadf93faae870a2dee11cf92f345e56
undefined says Is recommended to send this to Axelar Builders on Telegram?
undefined says Dear Axelar Team!

I have a question about architecture of Axelar GMP:

For each GMP transaction (general case - without tokens transfering) we have 2 transactions on destination chain: Call Approved and Executed. 

For example here:
https://www.axelarscan.io/gmp/0xae9994b77405f76668d47913b95bb67e3a672fe81186819ac2159e2b7f3dee5e:3

Both transactions are performed by Relayers. 

But it is quite confusing: why we need two transactions on destination chain? It seems, that it is enough 1 transaction to perform execution in destination chain.

At which stage Call Approved happens? At which stage Executed happens? Several seconds between this calls? What does happen on Axelar network between this two calls? Which changes happens at state of Axelar Networks? 

If I understand it correctly,  cross-chain request with gathered signature are stored on Axelar network (permanently). 

Please can you also explain process of consensus on network level and handling of 1 request?


@Jason Ma | Axelar @mati.h @galen
undefined says if i am not wrong, the axelar network reaches consensus on the validity of the message on the original chain
undefined says then writes a message to the destination chain gateway with the validated information
undefined says We are using your SDK as a big strategy business. Because there are a lot of demands from our user to your AxelarQueryAPI. We currently get 429 frequently, is there any chance to bypass and communite  your bridge smoothly? Please reply thanks a lot.
undefined says What do mean under "on original chain"?
undefined says Dear Axelar team! @here I am making lecture about oracle infrustructure (cross-chain messeging part) and I need to get answer in order to avoid misleading statement in my lecture, therefore, please help me)
undefined says Hi @here, I hope you are all well.

I have expertise and experience in working for Frontend with React.js, Next.js, Angular, Vue, TailwindCSS, Material UI as well as interacting with smart contracts and wallets using Web3.js, Ethers.js, GraphQL,  SQL databases, Node.js and Python and more.

I'd like to apply for the position of Full Stack Web2/3 Engineer if possible.
Looking forward to hearing from you soon.

Regards!
undefined says Hey Builders,

Our ecosystem page is live! 
https://axelar.network/ecosystem

We don't have all the projects listed there yet. If you are building on Axelar, please fill out this form to be included on our ecosystem page.
https://haz8ao8c4f2.typeform.com/to/PVxhWAlp?typeform-source=axelar.network
undefined says Please apply here https://axelar.network/careers
undefined says The purpose of the two transactions is to separate authentication (fixed cost) from execution (variable cost). CGP commands are batched together to make paying for authentication efficient, as one signature can verify many commands that were authorized by the Axelar validator set. 

The calldata in the `ContractCall` will call arbitrary code that cannot be known to GMP ahead of time  - it depends on the developer's application. If execution were included in this command batch then it would be possible for arbitrary execution to require an amount of gas that would exceed the limit, causing all the commands in the batch to revert. This would require each GMP request to be signed by the network separately, severely limiting the network throughput.

It is also more secure to have the arbitrary execution occur in a separate transaction to the authentication.

Doing both together would limit the amount of gas available to execution as well because the authentication would use up some of the gas.
undefined says Apologies, I don't understand what you're after. Which information are you trying to query? What do you mean by bypass?
undefined says Your solidity code does not appear to be calling any methods on the Axelar gateway on Goerli at `0xe432150cce91c13a887f7D836923d5597adD8E31` see https://docs.axelar.dev/resources/testnet#evm-contract-addresses

To perform a transfer you will need to call `sendToken` or `callContractWithToken` on the gateway contract https://docs.axelar.dev/dev/build/gmp-tokens-with-messages
undefined says Hey, what functions are you calling?
undefined says Thank you! Very clear and helpful explanation! Does it mean following?

Step-by-step explanation:
1) New block  #1000  with 100 GMP request appears on Source chain.

2) Axelar validators parse source chain block, get these request objects (events actually) and compose block with request from source chain.

3) Axelar validators started process of consensus for this particular block and if get 2/3 voting power (if I drew the right parallel to the way Tendermint works, then for a block to be signed by so many participants that their total stake exceeds 2/3 of network)

4) If the block was successfully signed it is saved in Axelar storage and anyone can get access to this block.

5) Relayer (anyone can do that) take this block to  from Axelar network and send it to the destination chain to Gateway smart-contract. 

6) Smart-contract makes sure, that block is presented on Axelar network (Merkle proof? Or which mechanic?)

7) If everything ok, all events from Block #1000 are registered on destination chain. That means that smart-cantract will allow to send "execution transaction" for cross-chain request with certain registered number. 

8) Anyone can pull prepared data for request with certain registered number from Axelar Network storage and pay gas for execution of this logic. In order to do that, Relayer need invoke execute method in Gateway smart-contract.
undefined says getTransferFee from the sdk
undefined says please give an instruction for help?
undefined says Are you calling it from a node js script? The rate limiting is by design. We will discuss it internally. Roughly after, how many requests are you experiencing the 429 status code?
undefined says Which version of the sdk are you using? The issue might come from the rpcs that we rate limit. Try using public rpcs
undefined says `import { AxelarQueryAPI, CHAINS, Environment } from "@axelar-network/axelarjs-sdk";

async function main() {
  const axelarQuery = new AxelarQueryAPI({
    environment: Environment.MAINNET,
    axelarRpcUrl: "https://rpc.cosmos.directory/axelar",
  });

  const fee = await axelarQuery.getTransferFee(
    CHAINS.MAINNET.AGORIC,
    CHAINS.MAINNET.ETHEREUM,
    "uusdc",
    1000
  );

  console.log({
    fee,
  });
}

main();
`
undefined says Pinned a message.
undefined says we made the function as a hub, there is around 100-200 request to your sdk function in a second. Let me try with the public rpc. Thanks for your suggestion
undefined says Hi. Axelars xchainbox playground will be down for a few hours for maintenance.
undefined says Faucet in testnet will also be down for 30-60 min
undefined says This broadly correct with some changes

2) 
The network is made up of a safety layer (validators) and a liveness layer (relayers). The relayer layer notifies the validators of GMP requests hitting the gateway. It is not the responsibility of the validators to parse every single block. When they are told about a specific transaction they will vote for the GMP requests it contains. We are working on several optimizations to this process to improve performance, but it's simplicity allowed us to launch the mainnet with high confidence in the security.

This separates network monitoring, which has its own set of reliability concerns, from voting on confirmation of finality. Anyone can submit transactions to the Axelar blockchain to confirm it, but we operate a relayer service which will do the monitoring and confirmation on your behalf when you pay fees to the `AxelarGasService` contract, but it is possible for anyone to operate an alternate service layer.

4) the block is not saved to storage. For each transaction in a block the validators vote on the list of transactions they contain. The GMP request parameters are saved to the Axelar chain if the validators agree on them.

5) the validators will periodically sign a batch of GMP requests to be delivered to a destination chain, which anyone can relay

6) if the batch signature matches the signatures of the active validator set then all the command IDs in the batch are approved for execution

7) request payloads (calldata) are not stored on axelar, only the sender, destination address, destination chain, and payload hash.
undefined says Can someone explain why no refund was processed for https://testnet.axelarscan.io/gmp/0x5cd595e697cb4e5f1530e0484bdb84ea2aca5ecda7ea33dd4ac52db0039d277d:1 ?
undefined says Looking into this now! Hang tight
undefined says Hello @everyone!
I am very happy to join here.
undefined says 
undefined says ü§ö
undefined says As an experienced and passionate developer I hope to help anyone with my skill and experience
undefined says Hello @Axelar Network, is there a way to estimate the amount of fees needed for a General Message Passing on-chain and/or off-chain? I'm aware that excess fees is anyways refunded by the gas service, but I would like to be able to initially pay as close to the actual amount as possible
undefined says Alright, update: 

 The gas service owner account on Goerli ran out of funds. It was funded -- should be ok now.

The transaction has been refunded: https://testnet.axelarscan.io/gmp/0x5cd595e697cb4e5f1530e0484bdb84ea2aca5ecda7ea33dd4ac52db0039d277d:1
undefined says Do you know about GMX defi platform?
If anyone is interested in GMX defi, ping me anytime
undefined says You can get the estimation via the AxelarJS SDK: https://docs.axelar.dev/dev/axelarjs-sdk/axelar-query-api#estimategasfee
undefined says "The gas service owner account on Goerli ran out of funds. It was funded -- should be ok now."
undefined says Was this an unexpected occurence or is it something we should account for when building an application that uses Axelar?
undefined says no. it's on our end.
undefined says Hey guys! I was wondering, how do you handle gas payments for destination chain execution. For instance if I am building my cross-chain dapp and I am using Axelar to execute a message on a destination chain, how do I know how much Eth to supply the send transaction on the source chain? (I assume it needs to be enough to cover the gas cost on destination chain or else it gets dropped)
undefined says You can get the estimation via the AxelarJS SDK: https://docs.axelar.dev/dev/axelarjs-sdk/axelar-query-api#estimategasfee. If the paid gas is insufficient, you can either recover the transfer via Axelarscan UI or the AxelarJS SDK: https://docs.axelar.dev/dev/monitor-recover/recovery.
undefined says Are you from the GMX team?
undefined says No, but I have experience in GMX fork
undefined says @Axelar Builder We're planning on updating the Mainnet services on January 18th, 2023 at 5:00PM Eastern Time (10:00PM UTC). This release finishes adding support for native transfers with wrapping and unwrapping when using getDepositAddress. The relaying services should be down for less than 2 hours. Satellite, token transfers, and GMP will not be available. The Axelar network will not be affected.
undefined says I see, thank you! Also curious if there is any method to do this on-chain.
undefined says We don't have a contract for this yet, but in plans.
undefined says oh neat, any place I can follow this update?
undefined says Please stay tuned for that by following #üö®‚îÇupdates and #üåê‚îÇdev-tavern. Then, the detailed information & technical guide will be updated at https://docs.axelar.dev.
undefined says Awesome, thank you! For the time being, I see mention of overpaid gas being able to be refunded at the bottom of https://docs.axelar.dev/dev/monitor-recover/monitoring, but I wasn't super sure how to actually trigger that refund or how it works. Could you explain what I need to do if I overpayed ETH and wanted to retrieve it?
undefined says I am also super curious on the reason for using chain names as a string, rather than just using `ChainID` int such as 1 for mainnet, 5 for goerli, etc.
undefined says How does the ConstDeployerAddress work, how can you deploy with the same address without having the same nonce?
also, errors are introduced in solidity 0.8.4, the pragma is ^0.8.0, can't this create confusion?
thanks in advance for the answers
undefined says Apologies for the delay here, we'll get you some answers! Hang tight :Shakehands:
undefined says @Rok | Qubelabs hope it's ok to ping you here.
undefined says Hey, sure, replied in general already.
undefined says Do you know where the websocket address comes in?  That's like one of my final issues.  I'm not sure if it's needed by hermes and if it is where I can find it?  I was thinking it was the tcp/unix address in the config.toml in the actual node files but I don't believe that is it.
undefined says It's the `IP:RPC PORT/websocket`. If you're running on the same server, you can use localhost.
undefined says Oh it's the RPC port?
undefined says Yes JSONRPC request can be made via websocket.
undefined says Interesting.  I still get a failed driver error.  So if my rpc_addr is 12.34.567.89:26657 then my websocket_addr should be 12.34.567.89/websocket.  Is that right?
undefined says `ws://12.34.567.89:26657/websocket`
undefined says Our relayer handles the refund process automatically. No action is needed on your end. https://docs.axelar.dev/dev/gas-services/refund
undefined says Should I have something configured in the config.toml of the rpc_addr on the node as well?
undefined says Oh!  I think I got it.
undefined says errors are gone there
undefined says Now to try to get terra up
undefined says If you need to expose it externally, then it should be `tcp://0.0.0.0:26657`.
undefined says Yes.  I got that working.  Thank you!  
So, the last thing I think I need to do is initialize the terra chain in hermes in order for it to work right.  Do you have or know where to look for the initialization process?
undefined says Thanks! Has it ever been a requested to turn off this automatic refunding in favor of one big, user initiated refund transfer?
undefined says A potential problem with the above is that for many small refund TX's, the total refund amount is greatly reduced because each one needs to pay gas for execution on the source chain.
undefined says Other thing that I am super curious about is duplicate TXs. Let's say I want a reference to the message I just sent (e.g. maybe for topping up gas payment). It seems it takes a `bytes32 txHash`, is this a reference to the source chain tx hash, or a the hash that get's emitted from the Gateway https://github.com/axelarnetwork/axelar-cgp-solidity/blob/7a8978819940469d15fe7a7029ea51d2464982e7/contracts/AxelarGateway.sol#L83 hashing the raw payload?
undefined says Our relayer processes the refund for each GMP call separately. Therefore, it doesn't support summing up the refund across different GMP calls.
undefined says It refers to the source chain tx hash.
undefined says the ConstDeployerAddress uses CREATE2 the deploy contract so it's independent of nonce
undefined says Hey @IAN sharing your Q here in the developers channel so the right people can help: https://discord.com/channels/770814806105128977/1047184634179498125/1064660671029063730

Q: what are the steps to get a new axl-wrapped token over to Cosmos? For example if a protocol would like to utilize PAXG, would that be possible? Not a Cosmos token but a token on Eth. For example, I want to bring PAXG over to Cosmos from Ethereum.
undefined says Hi @Axelar Network is there any timeline on when a planned bridge to Solana will happen?
undefined says We haven‚Äôt announced a plan to integrate with Solana at this time !
undefined says May not have been announced yet, is it possible to connect with someone from the team just to make sure we aren't double building?
undefined says Sure, the BD and engineering team are in this chat, what are you working on?
undefined says Working on a bridge from Regen network to Solana to bridge carbon credits. Just wanted to see if that was something Axelar was working on currently at all or if we should just move forward.
undefined says yeah, saw the EIP today, but what about the error keyword?
undefined says Not currently no! And no announced plans
undefined says hello! I would love to consider using GMP in a cosmos smart contract, are there any examples of that in the testnet?
undefined says Ok thanks for letting me know.
undefined says Interesting thanks! Is the emitted Keccek256 hash of the data used for anything then?
undefined says @Axelar Builder  The Axelar Testnet will undergo an upgrade to v31 starting on January 24th, 2023 at 9:00AM Eastern Time (2:00PM UTC) for approximately 2 hours. This release is focused on general bugfixes. During this time, the testnet versions of Axelar Network, Satellite, token transfers, and GMP will not be available.
undefined says Hello guy hope everyone is fine
undefined says Please i have an issue when i want to deploy my contract
undefined says this is the message i got
undefined says ` reason: 'processing response error',
    code: 'SERVER_ERROR',
    body: '{"jsonrpc":"2.0","id":49,"error":{"code":-32000,"message":"contract creation code storage out of gas"}}\n',`
undefined says Help !!!! please
undefined says Hello! It appears the issue related to the out of gas. Did you try made an attempt with more gas value?
undefined says No
undefined says No but I will try
undefined says Okay, thnx! Let us know how it goes üôÇ
undefined says Okey I try it now
undefined says hey, which contract you are referring to?
undefined says how to increase gas in depoy
undefined says Please how to increase gas in deploy function of axelar
undefined says the hash of the payload is used when execute the actual payload on the destination chain. The gateway requires payload being executed is the one that it approved.
undefined says hey, we will have docs up around mid Feb
undefined says this is my config file
undefined says `require('hardhat-gas-reporter');
require('solidity-coverage');

import('hardhat/config').HardhatUserConfig

module.exports = {
   
    solidity: {
        version: '0.8.9',
        settings: {
            evmVersion: process.env.EVM_VERSION || 'london',
            optimizer: {
                enabled: true,
                runs: 1000,
                details: {
                    peephole: true,
                    inliner: true,
                    jumpdestRemover: true,
                    orderLiterals: true,
                    deduplicate: true,
                    cse: true,
                    constantOptimizer: true,
                    yul: true,
                    yulDetails: {
                        stackAllocation: true,
                    },
                },
            },
        },
    },
    paths: {
        sources: "./contracts"
    }
};
`
undefined says Now i got this error
undefined says `      reason: 'processing response error',
      code: 'SERVER_ERROR',
      body: '{"jsonrpc":"2.0","id":49,"error":{"code":-32000,"message":"gas required exceeds allowance (882352)"}}\n',`
undefined says @Axelar Builder we're slipping another change in during next week's Testnet network release. This change will apply to relayer services and won't include any additional downtime. 

There is a change to how gas fees for GMP is calculated.

* Gas fee estimation for GMP transactions (`callContract` and `callContractWithToken` will start to be calculated dynamically based on the current market price for the native token being used to pay the fee on the source chain and the current gas price on the destination chain
      SDK method: https://docs.axelar.dev/dev/axelarjs-sdk/axelar-query-api#estimategasfee
      Axelarscan Documentation: https://docs.axelarscan.io/general-message-passing/getFees
* If you are caching gas fee estimations you should decrease the TTL of your cache as fee estimate volatility will be higher
* For transactions that fail due to insufficient gas, you can resubmit them for approval by calling the `addNativeGas` method on the `AxelarGasService` contract.
undefined says some one can help me please
undefined says Hello please how to resolve this
undefined says `{"jsonrpc":"2.0","id":49,"error":{"code":-32000,"message":"contract creation code storage out of gas"}}`
undefined says Hey guys, is axelar compatible with the filecoin virtual machine?
undefined says or how to increase gas  when i want to deploy
undefined says Hello, our team is looking for web3 developers to create an NFT marketplace in the game.
We need people with web3 experience.
If you are interested, DM me.
undefined says Hi, please see: https://discord.com/channels/770814806105128977/955655587260170272/1048265828212154478
undefined says Could you give us more specific detail what tutorial/example you are following? So, we can take a closer look. 

Having the max gas consumed usually means either the gas limit was too low, the contract construction function throws or reverts, or something invalid. Also, please ensure you have enough native tokens to pay gas fees on that chain.
undefined says @everyone The scheduled Axelar Testnet upgrade is complete. Axelar network, Satellite, token transfers + General Message Passing are back online.
undefined says Hello guys, I have a question: If I deploy a smart contract on axelar, am I able to trade on ethereum and polygon for example? If yes, how does the switch work? So lets say I trade on Uniswap v3 both times, how can I tell the smart contract to first trade on eth and then on poly?
undefined says @Axelar Builder A proposal to upgrade the Axelar Mainnet is being made for January 30th, 2023. This proposal would cause an upgrade starting at at **12:00PM Eastern Time (5:00PM UTC)** taking the network down for approximately 2 hours. This release is focused on general bugfixes. During this time, the Axelar network, Satellite, token transfers, and General Message Passing will not be available.
undefined says is it a safe assumption that the symbol returned by `IERC20Metadata(tokenAddress).symbol()` on an erc20 contract will ALWAYS match inverse case for a gateway lookup `gateway.tokenAddresses(tokenSymbol)` ?
undefined says How does the destination chain know it was "approved" on the source chain?
undefined says In general, yes, although there is one exception (`DOT` on gateway vs `xcDOT` as the actual symbol on Moonbeam) and if a token contract is upgradable, while unlikely, it's symbol could change in the future
undefined says Axelar gateway contract on destination gets an approval for the payload from the Axelar network (signed by the validators after confirming the source call contract)
undefined says but since this is a non-nonced hash (https://github.com/axelarnetwork/axelar-cgp-solidity/blob/7a8978819940469d15fe7a7029ea51d2464982e7/contracts/AxelarGateway.sol#L83) couldn't a malicious sender repeat the same payload over and over? Since the first one was approved, all subsequent ones would be too?
undefined says Hello @Axelar Network, is there a way to estimate the gas fee needed for a cross chain call (let's say using the `estimateGasFee` function) at some point in time in the past?
undefined says Hey! Maybe this post will help you: https://discord.com/channels/770814806105128977/955655587260170272/1066112485679181845
undefined says Can I ask for help - I haven't received USDC on the arbitrum network, it's been over an hour.
undefined says Please create ticket here: : https://axelar.zendesk.com/
undefined says Thank you, sent, reply come on mail ?
undefined says Do you have a smart contract example where some tokens are transferred from one chain to another? And is there a difference for some chains or tokens or does it work the same for all?
undefined says it's nonced by the axelar network with a `commandID`:
https://github.com/axelarnetwork/axelar-cgp-solidity/blob/7a8978819940469d15fe7a7029ea51d2464982e7/contracts/AxelarGateway.sol#L123

The approval is only made for this globally unique `commandID`, so repeat payloads would need to be confirmed again in the same manner, and a new `commandID` will be assigned for them.
undefined says So it's not-nonced on the source chain, rather by your off-chain infra? 

So for a specific payload it would look like:
```
src chain      |           off-chain infra           |        dest chain
hash(payload)------>hash(payload)+1=commandID---> commandID
``` Is that correct?
undefined says Yes
undefined says Can someone help clarify this flow for me? 

Say I utilize a cross-chain call from chain A to chain B with a token to `myContract` on chain B. I know the gateway will call `_executeWithToken` on `myContract` along with the associated payload and data. 

However, which of the following is accurate:
***A) ***`_executeWithToken` is called atomically with the ERC20 token transfer to `myContract` 
***B) ***The tokens are sent to `myContract` and then in a separate tx `_executeWithToken` is called
***C)*** The tokens are stored at some address (the Gateway?), and `myContract` is set to be an approved spender

The docs are a little fuzzy on this. Clarity would be greatly appreciated
undefined says `npm ci` is not working for me. I get the error in the screenshot.
I tried cleaning cache and `npm i`. Someone has an idea?
undefined says commandID is based on the source tx hash, log index and src chain id, so it'll be unique for each contract call even if payload is duplicated
undefined says By the way I try to clone this repo: `git clone https://github.com/axelarnetwork/axelar-local-gmp-examples.git`
undefined says Can someone help me setting up this repo correctly?
undefined says Hello Hope everybody is fine
undefined says got this is issue
undefined says i got this message when i want to deploy my contract
gas required exceeds allowance (835260)
`'{"jsonrpc":"2.0","id":49,"error":{"code":-32000,"message":"gas required exceeds allowance (835260)"}}\n',`
Some one can help me
This is my balance on Goreli Testnet : 1.2298
GoerliETH
undefined says Please someone can tell me how to increase the allowawnce when i want to deploy
undefined says üôè
undefined says the intermediate step is done on the axelar network, it's not off-chain
undefined says re-pinging this unanswered question. Thanks for your help!
undefined says can you try `npm install --ignore-scripts` ?
undefined says Are there ways to get a list of all $AXL token holders at a specific block? For example if I want to airdrop all wallets that held AXL at a specific block
undefined says Thank you very much, that works üî•
undefined says One more question: By running `node scripts/deploy examples/call-contract local` I get the error: `Error: Cannot find module '../../artifacts/examples/call-contract/ExecutableSample.sol/ExecutableSample.json'`
So it looks like the smart contracts are not compiled before deploying them. Can someone tell me which step I am missing here? (I am only familiar with hardhat...) 
Thanks!
undefined says using "off-chain" to refer to anything that isn't on the source or destination chain - reason being it doesn't derive security from either
undefined says have u run npm run build?
undefined says Yes but the output was: `> axelar-local-dev-examples@1.0.0 build`
> `rm -rf artifacts && npx hardhat compile`
`Der Befehl "rm" ist entweder falsch geschrieben oder`
`konnte nicht gefunden werden.`
I thought it works fine, because the first time running this, there shouldn't be a artifacts folder, but maybe thats the thing going wrong here
undefined says Oh its a german error message, I can translate if necessary
undefined says Once the call gets confirmed by Axelar network, the Axelar Relayer calls the `executeWithToken` (https://github.com/axelarnetwork/axelar-cgp-solidity/blob/main/contracts/interfaces/IAxelarExecutable.sol#L27). It triggers the `the validateContractCallAndMint` that mints the tokens for the destination contract (https://github.com/axelarnetwork/axelar-cgp-solidity/blob/7a8978819940469d15fe7a7029ea51d2464982e7/contracts/AxelarGateway.sol#L146). Then, the internal method `_executeWithToken` is run and performs a custom logic that  have been implemented. 

https://docs.axelar.dev/dev/build/gmp-tokens-with-messages#example
shows an example if the destination contract wants to forward the token it received to a recipient provided in the payload.
undefined says OK I solved the issue. If someone has the same problem: I have changed `rm` to `del` now in my `package.json` file for `Scripts/build` (Because I am using vs code on windows machine).
After that I installed hardhat with: `npm i hardhat --ignore scripts` and then run `npm run build` -> After that it worked correctly
undefined says Hello guys, I‚Äôm doing a testnet validator node and right now we don‚Äôt have token enough to become an active node. Would you mind to delegate in our node?

https://testnet.axelarscan.io/validator/axelarvaloper1fzsmceetzcvtv3su6z53jjt8a7yc2qczpkh2t4
undefined says Hey @Axelar Builder in case you missed it, we announced support for a pretty exciting feature last week üëÄ

Axelar now enables native EVM cross-chain asset transfers :Rocket: 

Axelar abstracts the wrapping and unwrapping necessary to transfer EVM tokens across chains. For the user, there are no extra steps. Axelar SDK handles it on the back end. 

What does this mean for builders?  You can integrate native EVM cross-chain asset transfers into dApps using the AxelarJS SDK (version 0.12.1+) by following he steps at this link: 

üëâ https://docs.axelar.dev/dev/axelarjs-sdk/token-transfer-dep-addr

(See examples 3 and 4 for code snippets for wrap/unwrap transactions.)

As always, all wrap/unwrap transactions are visible on  Axelar's cross-chain block explorer: https://axelarscan.io

Here's an example of an unwrap ‚§µÔ∏è

https://axelarscan.io/transfer/FDF6C47D173EE2B30D3645C41CF65FE78D610EC8B01EB7A0979A0BA56EAEAA95

And here's one of a wrap ‚§µÔ∏è
 https://axelarscan.io/transfer/0x2e4ff01af379bb8f3a2a8cefe67792d24b9a344e22edf33b268bd6d26f26392c

üîó Curious to learn more? Read the full blog post here: https://axelar.network/blog/native-evm-cross-chain-asset-transfers
undefined says Is this on desktop or mobile?
undefined says Hello, is there a way to split the amount when I bridge a token?
undefined says Like 1 TokenA = 0.3 TokenB
undefined says hey, i am trying the example contracts for message passing given on axelar github
i am getting an error while trying to send a message
undefined says 
undefined says the local deployment is working but the message is not being sent
undefined says just reading through this and trying to understand for my self. 

1. How does a relayer notify validators of the GMP requests hitting the gateway? Is this via an endpoint that the relayer is hitting? 
2. Is the relayer constantly monitoring the gateway contract? How does it know whether an entry has been entered into the Axelar chain?
undefined says Hey guys, we're working off EST time here so we'll get to your Qs soon !
undefined says Can I add Arbitrum network to axelar local dev? And I want to use hardhat console to log data in my smart contract. How can I turn this on in local dev?
undefined says what did you mean by this? can you give us more info?
undefined says Hi, can you please check this tutorial? https://www.youtube.com/watch?v=D5Z6lCbjZNA
Please let us know again if you still have the issue.
undefined says for example : 
I would like that when I bridge a token of A : 
(network 1 to network B)
1 token is burned on A
and
0.33 token is minted on B

and when I go back : ( B to A) 
1 token is burned on B
and
 3.03 token is minted on A
undefined says Thank you for your feedback, we have incorporated this into the forum so others can find it as well: https://discord.com/channels/770814806105128977/1061962357154254868/1069653093299536012
undefined says hey, i had a questions regarding the message passing using axelar

is it possible to restrict what is sent using the messages ?
like if as an admin i want the user to send only the word "hello" and nothing else in the payload
would it be possible by the user to send whatever they want using the contract, if so how can we restrict that?
undefined says Hi, I'm trying to send a ERC 3475 token from one EVM chain to another. Would I use a GMP contract like NFTlinker (even though its not an NFT)? What are your recommendations? I'd like to Burn the token on the sending chain and send the token on the receiving chain to the owner's address.
undefined says Thanks for the thoughtful reply. If a reversion happens in the custom logic of the `_executeWithToken` block, the mint will be reverted. How does the reversion get picked up by the Axelar contract? Do the originating funds get returned to the original sender?
undefined says Are you referring to a sort of token swap? Our friends at Squid are working on this: https://0xsquid.com/

It will be going live very soon so stay tuned!
undefined says bumping this!
undefined says ?
undefined says it is not a swap but a bridge that I want. Between 2 token only
undefined says call is made from chain 1 to chain 2
_execute is called on chain 2
 
_execute on chain 2:
    function _execute(
        string calldata sourceChain,
        string calldata sourceAddress,
        bytes calldata payload
    ) internal override {
        (sourceChain, sourceAddress);
        uint256 gchainId;
        bytes memory gdata;
        address gsrcaddr;
        // <TODO> srcAddress should be linkN, srcChain is N chain
        (uint256 nonce, address caller, bytes memory payloadActual) = abi.decode(payload, (uint256, address, bytes));
        gateway.callContract(sourceChain, sourceAddress, abi.encode(nonce, caller));
        emit execEvent(sourceChain,sourceAddress,nonce,caller);

        (gchainId, gsrcaddr, gdata) = abi.decode(payloadActual, (uint256, address, bytes));
        this.receiveCall(gchainId,gsrcaddr,gdata);
    }

gateway.callContract is called in _execute to send an ack to chain 1

I get the below error (when _execute is called on chain 1 to receive ack):
Fail with error 'address length not correct'

Function: execute(bytes32 commandId, string sourceChain, string sourceAddress, bytes payload) ***
https://testnet.snowtrace.io/tx/0x40d242148f31bc089a9f308d07cadfc8efe213014e27e04c90bb40f4491be1fb
The string length corresponding to address is 0x40 in this call

sourceAddress is sent as a string to callContract in the _execute function in chain 1.  
Any idea why is the string length not correct when it is sent to chain 1?
how to debug this?
undefined says Hi Nero. You can add your logic/restrictions at the source chain contract. E.g. you can set up a rule where the payload the used sends is "hello", or revert otherwise.

you can experiment in the Axelar Code Sandbox with a simple "Hello World" example.
https://xchainbox.axelar.dev/
undefined says Hello! Yes the gateway is monitored. Transactions at the gateway contain specific logs that declare the type and payload of the incoming message. From that point, our services pick it up and ask the validators of that chain to vote on whether the transaction indeed exists and is valid. If validators vote yes, then the transaction is considered approved at the Axelar chain.
undefined says Experimenting with code similar to NFTLinker's (but for your desired ERC) sounds like a good start üëç

Update:
If you want to use ERC3475 as fungible tokens similar to ERC20, then this might be a better starting point -- just inherit the erc3475 interface interface instead of erc20
https://github.com/axelarnetwork/axelar-examples/blob/main/examples/cross-chain-token/ERC20CrossChain.sol
undefined says Hi @X-Factor. Yes you can use Arbitrum like any other evm chain. I have to check with the team regarding hardhat and get back at you.
undefined says Hello @CODA. Not exactly sure what you mean (is the desired balance 0.33 A tokens at the end of your example?). You should be able to implement custom logic in your contracts at the source/destination chain. From what I understand, you want to implement a standard bridge, with the difference that you'd burn X tokens at chain A and mint X/3 token at chain B -- and vice versa. You should be able to code that into your smart contracts given that you control mints/burns at source/destination chain.
undefined says Hello yes it is. I had thought about this technique, but it means that I control the token of the source chain. Which is not my case
undefined says your snippet looks OK to me. what does your `_execute` on chain 1 look like? are you running this on axelar-local-dev? can you DM me your repo and we can try and help you debug?
undefined says Hey @Axelar Builder as you may have seen Squid is live!

Here's the TL;DR: 

üìç Squid acts as a router that connects existing DEX liquidity across chains through Axelar‚Äôs secure cross-chain platform. 

üìçUsers can get any token on any of Axelar‚Äôs supported chains in a single click. Each swap is powered by Axelar, inheriting their speed, security and wide chain coverage.

üìçSquid‚Äôs goal is to put this powerful, user-centric approach into the hands of developers who are building the next generation of crypto-native apps. 

üìçThey enable this through their API, SDK and front-end widget, a prebuilt UI that takes minutes to integrate.

And here's how you can start leveraging their platform: 

‚Üí Build using their docs: http://docs.squidrouter.com
‚Üí Join Squid's launch celebrations on Discord: http://discord.gg/squidrouter
‚Üí Try their app: http://app.squidrouter.com
undefined says bumping this follow up question
undefined says the protocol doesn't have any auto refund logic. The application should handle the error and it can choose to forward the tokens to the recipient or send it back to the src chain
undefined says on the register broadcast proxy step - what is the source of this error?

```
Error: rpc error: code = NotFound desc = rpc error: code = NotFound desc = account <broadcaster_address> not found: key not found
```
undefined says is it because I registered the broadcast-proxy twice? Or is that taken care of by executing `unsafe-reset-all` ?
undefined says Can you check whether the account is funded? Usually `key not found` errors come up on empty accounts.
undefined says so interestingly, I ran the `query` command on an account with an address specified in the `genesis.json` (I'm trying to set up a axelar nodes locally to work with each other) and I get

```
Error: rpc error: code = NotFound desc = rpc error: code = NotFound desc = account <address> not found: key not found
```
undefined says that address sits in the `genesis.json` though - why would it not exist?
undefined says is there a way to list all accounts?
undefined says in the context of a Cosmos app "address  not exists" == "address has 0 funds".  You can list all keys of a node with `axelard keys list`.
undefined says ya so the keys exist, the genesis.json also looks like this

```
          "body": {
            "messages": [
              {
                "@type": "/cosmos.staking.v1beta1.MsgCreateValidator",
                "description": {
                  "moniker": "test-validator-1",
                  "identity": "",
                  "website": "",
                  "security_contact": "",
                  "details": ""
                },
                "commission": {
                  "rate": "0.100000000000000000",
                  "max_rate": "0.200000000000000000",
                  "max_change_rate": "0.010000000000000000"
                },
                "min_self_delegation": "1",
                "delegator_address": "axelar1r38a5wkl9uhcvdllrtg5h5sr4xtuz3hlgr38ra",
                "validator_address": "axelarvaloper1r38a5wkl9uhcvdllrtg5h5sr4xtuz3hlgz8z3j",
                "pubkey": {
                  "@type": "/cosmos.crypto.ed25519.PubKey",
                  "key": "AZxuadCdEwNzfXIVN9EMMapMdGPl05Y6mwFXgF75Wpo="
                },
                "value": {
                  "denom": "uaxl",
                  "amount": "5000000"
                }
              }
```

In gen_txs
undefined says ^^ so one would expect the validator address to hold some amount of tokens --> but when I query it just says key not found
undefined says you can check the balance of an address with `axelard q bank balances <axelar-address>`
undefined says do I need to do something extra to make sure the accounts are funded? I thought the blockchain read state from genesis.json and initialized?
undefined says Are you running nodes locally for your own testing purposes, or you are trying to set up a testnet/mainnet node/validator?
undefined says that brings out `Error: rpc error: code = Unknown desc = runtime error: invalid memory address or nil pointer dereference: panic` 

and my genesis.json has

```
    "bank": {
      "params": {
        "send_enabled": [],
        "default_send_enabled": true
      },
      "balances": [
        {
          "address": "axelar1r38a5wkl9uhcvdllrtg5h5sr4xtuz3hlgr38ra",
          "coins": [
            {
              "denom": "uaxl",
              "amount": "1000000000"
            }
          ]
        }
      ],
      "supply": [
        {
          "denom": "uaxl",
          "amount": "1000000000"
        }
      ],
      "denom_metadata": []
    },
```
undefined says I'm trying to set up my own axelar network locally because I've gone through all the cosmos sdk tutorials and I wanted to see what it took to stand up a real application
undefined says I've already set up a validator that works with testnet
undefined says do you know why there would be a segfault if the genesis.json has at least the validator defined as an address with balance?
undefined says I am going to need to ask the team on this one. Will let you know soon.
undefined says thank you!
undefined says just trying to learn cosmos sdk and you guys have a pretty interesting architecture
undefined says does this panic comes from axelar-core or vald?
undefined says it doesn't say - if I put in ```trace``` I don't get a full stack trace
undefined says is there a way for me to get a full trace?
undefined says Hello!
undefined says I am trying to create a deposit address the same way Satellite does but when I call the endpoint locally I get a 403 status code and a(1020 error code.

```POST
    https://deposit-service.mainnet.axelar.dev/deposit/wrap
PAYLOAD:
{"salt":"0x0000000000000000000000000000000000000000000000000000000000000000","source_chain":"avalanche","destination_chain":"osmosis","destination_address":"osmo1l3kn4swsz82hmp6qnwafwzwwndq6kajzkxtlds","refund_address":"0x4f671f34d2d23fec3eE3087E3A0221f8D314D9dF"}

Expected RESPONSE:
    {"address":"0xa080859c4ab624b474df53f88f3b5a17dd1950a4"}
Actual local RESPONSE:
        Status 403
        error code: 1020
```
Am I doing something wrong? Could you guys point me in the right direction?
undefined says Hello @EpithSlayer. That's a private satellite's endpoint and is not publicly available. The implementation of this endpoint wraps this deposit-service smart contract function that can call with the same arguments:
https://github.com/axelarnetwork/solidity-cgp-gateway/blob/32b6173a89cd7c48a7a72a88baf2be3a7cc0be25/contracts/deposit-service/AxelarDepositService.sol#L64-L82
undefined says you can read more on wrap/unwrap here
https://docs.axelar.dev/resources/wrapped-tokens#connect-metamask-to-a-block-explorer
undefined says ohh! thank you! üôÇ
undefined says Is there a way to call that without using the js sdk? our project is in python... :/
undefined says thus why I tho that endpoint would do the trick
undefined says maybe I am not understanding something but... should that be called on (ETHEREUM example) in this contract? `0x4F4495243837681061C4743b74B3eEdf548D56A5` ? but if i check the contract on ethereumscan I don't see that method :S
undefined says That's the ethereum gateway contract address. That call needs to be done to the deposit-service, which is a different smart contract. The address of this contract is `0xc1DCb196BA862B337Aa23eDA1Cb9503C0801b955` in all chains.
undefined says THANK YOU!
undefined says ~~I don't think that's supported by the sdk yet~~, but let me ping some team members and get back at you
undefined says also... do you have the abi of that contract?
undefined says sorry for the confusion. The SDK *does* support wrap/unwrap. You can take a look here:
https://docs.axelar.dev/dev/axelarjs-sdk/token-transfer-dep-addr#3-send-native-tokens-from-a-evm-chain
undefined says but that is a js sdk... we work in python :/
undefined says rest of the service is python
undefined says Sorry, we currently only support the sdk in JS for now üòï
undefined says yes, that is ok, just wanting to re-write in python
undefined says i can simply call the correct contracts and methods
undefined says At this point, in python you'd need to generate the ABI of the contract and make a Web3 call in python.
Here's the contract call you need to make: https://github.com/axelarnetwork/solidity-cgp-gateway/blob/32b6173a89cd7c48a7a72a88baf2be3a7cc0be25/contracts/deposit-service/AxelarDepositService.sol#L64-L82
undefined says yup, do you have the abi? etherscan does not provide, I can infere it, but if you guys provide one happy to simply take it
undefined says you can generate the ABI with `solc` (it's generally available at all package managers). Once `solc` is installed, you can run `solc --abi <file>.sol`
undefined says sweet ty
undefined says Gm, I would like to understand if it is possible to get a value from a specific event on chain B, into a smart contract on chain A.

I've read in the whitepaper that this should be possible, but within the docs I only found CLI commands to communicate with the Axelar nodes directly, not a way to start and end the process from within a smart contract. 

The optimal flow I'm looking for would look something like this:
1. User connects to dapp on chain A, giving as user input the destination chain, as well as a tx hash on that chain or maybe an event plus contract address to extract a certain value
2. This request gets encoded into a payload within a contract on chain A, and sent to the gateway on contract on chain A
3. Axelar nodes would query the light clients of chain B, reach consensus on the value requested, and relay answer back to contract on chain A
4. Contract on chain A does something with this value etc.

Thanks in advanced for the help!
undefined says Hello @Zitzak! Sounds like you are searching for something like a General Message Passing (GMP). GMP allows you to send data from chain A to chain B, where you can define the logic at the sender and the receiver end.
You can read more for GMP here https://docs.axelar.dev/dev/gmp-overview, and experiment with the sender/receiver code in your sandbox: https://xchainbox.axelar.dev (tips on how to use here: https://docs.axelar.dev/dev/axelar-sandbox/how-to-use)
undefined says Hey @br3 , thank you for the quick answer. I have looked into this but what I am searching for is a way to query past events/tx so to say, not the current state. I might be missing something but the custom logic on the destination chain will let me of course call a specific contract state, but not past transactions of that contract right?
undefined says The smart contract at the destination chain can hold the past state you want to query at some point in the future.
If I get this right, you want your dAPP to have a functionality like "user from chain A wants to know if an event happened at some point in the history of chain B". If that's the case, one way to go would be to store the data of all GMP calls from A to B (or a small description for efficiency), so that you'd be able to query this historic data.
undefined says So you are almost right, I indeed want to now if a certain event has happened at some point in the history of a specific contract, on chain B. This contract however has been deployed some time ago, so the "history" in this case is not something I can record myself for future reference. The event I am looking for might have been emitted a year ago.
undefined says hey all - I know this is the developer chat, and apologize if this is not the right place, but Im trying to build out some Axelar dashboards in Flipside and Im having trouble figuring out how to capture cross-chain transfers (osmosis to Ethereum, for example).

https://axelarscan.io/transfer/C2432A71AAC72C710733284EEC818045B36EB5CA357C8B910F351B911A73B5FB <--- as an example

There has to be a unique ID that is created that bundles the 4 separate txs (link, sent, confirm deposit, received), but I cant find it...are depositAddresses in the linked tx unique for IBC txs (from Osmosis to Axelar) and thats the unique ID bridging all of these diff txs together?

Im in the Flipside Axelar forum too, but wanted to come to the source
undefined says Hi, Everyone! My name is Eric. 
I am an expert developer with about 7 years of experience. 
My main skills are React, Vue.js, Node, Solidity, Ethereum, NFT and web3.
undefined says Check out https://axelar.network/careers for any open roles that might fit you!
undefined says Check out https://axelar.network/careers for any open roles that might fit you!
undefined says That's an interesting use case. However, validators monitor axelar gateway contracts on each EVM chain, so they wouldn't be able to answer questions about arbitrary transactions. So I believe the only way to handle this kind of requests would be at the application logic in the destination GMP smart contract which is tracked by validators. But I am not aware of any way that a smart contract can query the blockchain for weather an event historically happened on that chain.

As you mentioned above, the custom logic on the destination chain lets you call a specific contract state, but only in the current state of the destination contract.
undefined says Yeah so because, as you are stating, it is not possible to query a past event from within the given blockchain I wondered if there would be a way to have the validator nodes that run light clients do this, and then make this information available somehow through the gateway contract. It seems that this is currently not possible then right?

In regard to what you've explained here:
```
So I believe the only way to handle this kind of requests would be at the application logic in the destination GMP smart contract which is tracked by validators. 
```
If I understand your idea here correctly then what you are suggesting is that an application on a destination chain, like for example a dapp, could query the blockchain and store the needed information on that chains GMP contract, from which it could be retrieved again from the source GMP contract
undefined says I would be able to query the validator nodes directly through mean of using the CLI, for example methods like this (see link)? Where I would specify chain and event and it would return the event from a given chain. Am I understanding the docs in this correctly? @br3 

https://docs.axelar.dev/cli-docs/v0_31_2/axelard_query_evm_event#axelard-query-evm-event
undefined says Hello @effortcapital 
The deposit address is the closes to a unique ID that bundles all events. This address is unique for each transfer. That's  `axelar1k404qzxe43a4f283nnq4yh3ee77hssw7gq6ljl` in your example tx. 
I.e. for transfers from chain A to chain B:
1. link has a deposit address [DA] on chain A (+amount is [AM], and recipient address is [RA] on chain B): https://axelarscan.io/tx/674846582F0B92049D6C4168411CD41E625814307E3D87828A2D72CDB908CF41
2. send's receiver is [DA]: https://www.mintscan.io/osmosis/txs/C2432A71AAC72C710733284EEC818045B36EB5CA357C8B910F351B911A73B5FB
3. confirm's deposit address is again [DA]: https://axelarscan.io/tx/0073C4388B2892AFF17E833B421673AC19CCE34ACF68861CD05064B0F7B1E549
4. received address is [RA] (+amount is [AM-fees]): https://etherscan.io/tx/0xa5e983ee814406238f0f404a9f2fb773fd54028168a6328e1c9550d9a4d2026b
undefined says Correct. You can query the validators directly through CLI or gRPC, yes. But note that you are only going to be able to query axelar events, not arbitrary events on the EVM chain.
Event ids are axelar-related EVM transaction logs in the form of <TxID>_<log index>. I.e., this query
```
axelard q evm event arbitrum 0x74105bf5a656687637995ff0df3db0152e7d6bd3ebe26aac1a09082085b9365a-0
``` 
will return info about this arbitrum transaction (which is a token transfer) https://goerli.arbiscan.io/tx/0x74105bf5a656687637995ff0df3db0152e7d6bd3ebe26aac1a09082085b9365a
undefined says Ahh okay, so I can only query event from the Axelar Blockchain, which emits these event when users interact with the Axelar Network?
undefined says exactly
undefined says That clears thinks up as well.

Thank you for your answers and timeüôè  I think I have a good understanding of what is possible through the Axelar Network in regard to my use case
undefined says I do have one more question, will these functionalities be developed in the future, or are they outside of the scope of Axelar?

I'm asking this because when reading the whitepaper it seems that something like this would be possible. In the paper is stated;
> Let Qs denote an arbitrary question about the state of chain S
With one added example I highlighted that seemed to me something that would fit my need, query the chain about a past tx.
undefined says Good question :D. Please let me get a clearer view on future plans about this and I'll get back at you as soon as possible. Note that parts of the whitepaper might be outdated at this point. We are working on a revised version and will publish it in the near future.
undefined says There's not a clear timeline atm, but we are certainly exposing this functionality in the future. Most of the building blocks already exists, but it's currently in our backlog. Please stay tuned for future announcements üôè
undefined says Thank you for looking into it.
undefined says hello there,

what's the best approach to calculate how much tokens/gas send to the gas service to have your contract call executed? (using axelarjs sdk). I'm using `estimateGasFee` method but it returns to any combination i try
undefined says hello @leamsi.eth, what exact issue are you facing when calling `estimateGas` from the sdk?
undefined says I'm not sure if i'm using the method properly, in the code i'm attaching i'm always getting `0` as a value for the gasfee
undefined says hmm the endpoint seems ok to me https://docs.axelarscan.io/general-message-passing/getFees
I am getting a response with this payload
```
{
    "method": "getFees",
    "sourceChain": "moonbeam",
    "destinationChain": "polygon",
    "sourceTokenSymbol": "GLMR"
}
```
undefined says endpoint works for me too but the sdk doesn't. thanks for sharing the link I can use the api endpoint instead üëçüèº
undefined says alright, I'll ping one of the sdk team members to have a look in the meantime
undefined says @leamsi.eth it works for me. Which version of the sdk are you using?
undefined says 0.12.5-alpha.1
undefined says thank you!
undefined says https://discord.com/channels/770814806105128977/770814806105128980/1071193202427703316

üëÜ Reposting here, @PJ @Sirapop maybe you could help?
undefined says Hi guys, any axelar developer here to support us with tools for our project at https://www.stillapay.world/
undefined says Can you be more specific? Is there a path you need help to set up, some debugging issues or any questions we can answer? Our engineering team is here in but we need some more clarity on how we can assist!
undefined says That's right
undefined says We are having challenges deploying contract for the connect wallet button on our website for AXL
undefined says For some reason deploying contract on netlify  never works as in the example guide provided by Axelar on github so we are hoping the developer team could guide us through with setting it up
undefined says Got it, can you send some screenshots so we can try and assess the issue? Also please keep in mind it's the weekend so we will be slower to respond than usual, but we will get you sorted!
undefined says Understood
undefined says Currently on mobile and can't access netlify for screenshots but we been trying to build a dapp in cloning https://github.com/axelarnetwork/axelar-examples for the connect wallet button on our website to link directly to Axelar for users
undefined says 
undefined says 
undefined says This is the feedback we get when deploying on netlify
undefined says 8:04:06 PM: build-image version: 6fd4b129abc97418b4cd2d48c553dd4a014a6965 (focal)
8:04:06 PM: buildbot version: 6fd4b129abc97418b4cd2d48c553dd4a014a6965
8:04:06 PM: Fetching cached dependencies
8:04:06 PM: Failed to fetch cache, continuing with build
8:04:06 PM: Starting to prepare the repo for build
8:04:06 PM: No cached dependencies found. Cloning fresh repo
8:04:06 PM: git clone --filter=blob:none 
8:04:06 PM: Preparing Git Reference refs/heads/main
8:04:08 PM: Parsing package.json dependencies
8:04:09 PM: Starting build script
8:04:09 PM: Installing dependencies
8:04:09 PM: Python version set to 2.7
8:04:09 PM: v16.19.0 is already installed.
8:04:10 PM: Now using node v16.19.0 (npm v8.19.3)
8:04:10 PM: Enabling Node.js Corepack
8:04:10 PM: Started restoring cached build plugins
8:04:10 PM: Finished restoring cached build plugins
8:04:10 PM: Attempting Ruby version 2.7.2, read from environment
8:04:10 PM: Using Ruby version 2.7.2
8:04:10 PM: Using PHP version 8.0
8:04:10 PM: Started restoring cached corepack dependencies
8:04:11 PM: Finished restoring cached corepack dependencies
8:04:11 PM: Started restoring cached yarn cache
undefined says 8:04:11 PM: Finished restoring cached yarn cache
8:04:11 PM: No yarn workspaces detected
8:04:11 PM: Started restoring cached node modules
8:04:11 PM: Finished restoring cached node modules
8:04:11 PM: Installing npm packages using Yarn version 1.22.19
8:04:11 PM: yarn install v1.22.19
8:04:11 PM: warning package-lock.json found. Your project contains lock files generated by tools other than Yarn. It is advised not to mix package managers in order to avoid resolution inconsistencies caused by unsynchronized lock files. To clear this warning, remove package-lock.json.
8:04:11 PM: [1/5] Validating package.json...
8:04:11 PM: [2/5] Resolving packages...
8:04:12 PM: [3/5] Fetching packages...
8:04:23 PM: [4/5] Linking dependencies...
8:04:23 PM: warning "eslint-config-richardpringle > eslint-config-prettier@6.15.0" has unmet peer dependency "eslint@>=3.14.1".
8:04:23 PM: warning "eslint-config-richardpringle > eslint-config-standard@14.1.1" has unmet peer dependency "eslint@>=6.2.2".
8:04:23 PM: warning "eslint-config-richardpringle > eslint-plugin-import@2.26.0" has unmet peer dependency "eslint@^2 || ^3 || ^4 || ^5 || ^6 || ^7.2.0 || ^8".
8:04:23 PM: warning "eslint-config-richardpringle > eslint-plugin-mocha@6.3.0" has unmet peer dependency "eslint@>= 4.0.0".
8:04:23 PM: warning "eslint-config-richardpringle > eslint-plugin-node@11.1.0" has unmet peer dependency "eslint@>=5.16.0".
8:04:23 PM: warning "eslint-config-richardpringle > eslint-plugin-standard@4.1.0" has unmet peer dependency "eslint@>=5.0.0".
8:04:23 PM: warning "eslint-config-richardpringle > eslint-plugin-node > eslint-plugin-es@3.0.1" has unmet peer dependency "eslint@>=4.19.1".
8:04:28 PM: [5/5] Building fresh packages...
undefined says 8:04:28 PM: error /opt/build/repo/node_modules/@axelar-network/axelar-cgp-aptos: Command failed.
8:04:28 PM: Exit code: 127
8:04:28 PM: Command: run-s build
8:04:28 PM: Arguments:
8:04:28 PM: Directory: /opt/build/repo/node_modules/@axelar-network/axelar-cgp-aptos
8:04:28 PM: Output:
8:04:28 PM: /bin/sh: 1: run-s: not found
8:04:28 PM: info Visit https://yarnpkg.com/en/docs/cli/install for documentation about this command.
8:04:29 PM: Error during Yarn install
8:04:29 PM: Build was terminated: Build script returned non-zero exit code: 1
8:04:29 PM: Failing build: Failed to build site
8:04:29 PM: Failed during stage 'building site': Build script returned non-zero exit code: 1
8:04:29 PM: Finished processing build request in 23.096s
undefined says That's the deploy log
undefined says Hey guys, since these contracts are upgradable/pausable, I was wondering who is permissioned to actually call those functions?

I see in update() https://github.com/axelarnetwork/axelar-cgp-solidity/blob/7a8978819940469d15fe7a7029ea51d2464982e7/contracts/AxelarGateway.sol#L232 function covered by `onlyAdmin` modifier from https://github.com/axelarnetwork/axelar-cgp-solidity/blob/7a8978819940469d15fe7a7029ea51d2464982e7/contracts/AdminMultisigBase.sol#L25
undefined says Does this mean some small set of approved count towards *onlyAdmin*, or all token holders count and can vote?
undefined says We see your Qs here and we'll get you some answers! Please note our engineers are less active here over the weekend, but we'll be back tomorrow.

In the meantime, here's a great developer resource we've been working on including an FAQ with all the troubleshooting, debugging and more questions we've seen here and across socials. Check it out to self serve in the meantime!

https://community.axelar.network/c/developers/25
undefined says I want to find the inflation rate.
However, calling /cosmos/mint/v1beta1/inflation as this endpoint gives incorrect results.
How can I call the correct value
undefined says Good morning, I have a question about some of the Axelar capabilities. Would it be possible to query all past interactions/tx of a given address with the Axelar Network? This includes all tokens transfers, GMP etc
undefined says Hi guys, Glad to be here.
I am a CosmosSDK engineer and a full stack developer, based in Connecticut, US, looking to join the Axelar team.
Do you have any open role in the dev team?
undefined says Feel free to check https://axelar.network/careers
undefined says Hey, we have a pretty comprehensive dashboard here: https://axelarscan.io/

You can query past TXNs, GMP activity, and more and can customize the search parameters as well.
undefined says Hello @Zitzak this data is on the chain, but I think it's more straight forward to make use if the axelarscan API:
* transfers: https://docs.axelarscan.io/cross-chain/transfers
* GMP: https://docs.axelarscan.io/general-message-passing/searchGMP
undefined says what values are you getting?
Can also try https://docs.axelarscan.io/inflation
undefined says At the moment, it's a selected set of people, as there were a bunch of feature upgrades that were rolled out. In an upcoming release, this will require all Axelar validators to co-sign making the process similar to network upgrades
undefined says Hello @effortcapital does this endpoint meet you needs?
https://docs.axelarscan.io/cross-chain/transfers-stats
undefined says let me look at it and get back to you! Thank you
undefined says thanks so much! this works for me
undefined says Thanks. Is this set of people documented anywhere?
undefined says The addresses can be queried from the explorer. The identities aren't public for security, so they can't be targeted
undefined says Mintscan returns 15%, but axelarscan returns 8.5%. Which opinion is correct?
undefined says When distribution start?
undefined says Hi Team !!

I am facing issue in doing crosschain transaction in testnets (Goerli - Polygon).
https://github.com/axelarnetwork/axelar-examples/tree/main/examples/evm/call-contract


Although it works fine with local ...
Can someone help ??
undefined says The monthly distribution for Coinlist buyers has already ended. If you can't find your tokens please check on desktop, they're probably in staking.
undefined says Hm, looking into it
undefined says Hey, can you give us some more detail into the issue you're facing? Some screenshots or code grabs would be helpful for us to understand the problem
undefined says Alright, to answer your question, our inflation logic is custom however Mintscan hardcodes it, hence the discrepancy. We've reached out to them to update the params, but as an FYI you can hover the "inflation rate" box on the front page to see how axelarscan calculates it:
undefined says 
undefined says Okay
undefined says yep I've already checked that, Just want know why two are different, thank you for your kind reply
undefined says 8.5 - fyi: also you can use our api: https://backend.testnet.run/axelar/inflation and https://api.axelarscan.io/inflation
for apr: https://backend.testnet.run/axelar/calculations/apr
undefined says Yup 1317 is the port that redirects the API in the application config file by default in chains built with cosmos sdk.

This API (inflation) is routed from the backend built for Axelarscan UI, so these are simply different things.

Here is the repo: https://github.com/CoinHippo-Labs/axelarscan-api
undefined says @Axelar Network 

I just followed the steps and removed all chains except Polygon and Avalanche.
Deployed contracts and executed cross chain message script...

But the message was not sent to the other side..

I suspect I need to do any additional setup ??
undefined says What could be the reason...
While using testnet ..it stucks at
undefined says Hi Team !

Not sure how to fix .

Can someone help ???
undefined says https://testnet.axelarscan.io/gmp/0x5ef36d9b390484760490fc79909ee36c30876ab73ba5aedb8ddfbb44e9402c7f:2
the gas paid for this contract call is insufficient base fee `(0.00327705)`.
when you pay gas you need to cover `Base fee` and the execution fee.
I suggest you to use the sdk when you calculate the amount of gas.

üëâ sdk: https://docs.axelar.dev/dev/axelarjs-sdk/intro
undefined says Hello Team, how can I setup local and remote chain locally in order to test cross chain messaging
undefined says I have done recently
undefined says pls tell me how
undefined says @powxconsensus

https://github.com/axelarnetwork/axelar-examples/tree/main/examples/evm/call-contract 
inside root do 
```npm ci
npm run build

```
Make sure you setup your wallet in .env
and try call-contract
undefined says @powxconsensus 
**chain-config : **I removed all except the chains i want to use
undefined says Fund with faucets whatever network you want to use
undefined says @Amit Kumar thanks bro but I am not looking for this, also  I already gone through this
undefined says Can you pls guide, what if I want to deploy all protocol level contract my myself without using sdk, how can I do this?
Also if someway possible add some content in docs explaining different contracts what the functionality it holds as hyperlane did, as a developer who is interested in core functionality it's pretty much needed, it's my opinion
undefined says AxelarExecutable[gateway_]: gateway contract address

AxelarGateway[authModule_,tokenDeployerImplementation_] : token deployer address but for deploying auth contract, I didn‚Äôt find contract in package, I found only AxelarAuthWeighted.sol in auth folder but
undefined says In order to deploy AxelarGateway, we need to deploy using it‚Äôs proxy contract, since there is a constructor in AxelarGateway which is setting Auth and tokenDeployer implementation in it‚Äôs storage, it will not stored in proxy contract storage, and If this is made this way then in order to access an function which need these parameter then we have to call via implementation function not via proxy.
Please correct me if I am wrong anywhere.
undefined says The axelar examples can create the local environment where it deploys the relevant contracts. Here's the script that's used for that to refer to:
https://github.com/axelarnetwork/axelar-local-dev/blob/main/src/Network.ts
undefined says thanks, sure I will go through it
undefined says Let us know if there are any steps you need some help with!
undefined says Love to see it, thanks for stepping in here friend!
undefined says But i need help
undefined says can i dm
undefined says We don't work over DM, if you need help sharing here is better as everyone can learn from issues and fix theirs if they're experiencing the same issues :Shakehands:
undefined says thanks, I followed the step mentioned in above repo, I successfully deployed to my local, and called contractCall on mylocal, now I want to relay that message after validating to dst chain, How can I do that as i have log of "emit ContractCall(msg.sender, destinationChain, destinationContractAddress, keccak256(payload), payload)" this event
undefined says and also how do we map remotechain with contract address of dst chain on src chain, do we need to do this step or not like other protocols?
undefined says In the interim before the core team gets back with some answers, you can check out our community forum with developer FAQs we've seen across here and other socials: https://community.axelar.network/c/developers/25
undefined says thanks, but I didn't find that I looking for
undefined says Hello, could someone provide some documentation on transferring a chain's native currency using Axelar?
undefined says Hey Builders,

https://axelar.network/blog/future-proof-interop-path-adaptability-for-cross-chain-dapps
undefined says @Axelar Builder we're getting some reports that indicate some testnet transactions might not be indexing properly on testnet.axelarscan.io right now, making it look like testnet GMP transactions are stuck/failing. We are investigating and will share more information when we have it.
undefined says Hey there, making a very simple tutorial getdepositAddress call but Im getting 403 errors, do you know what that means ?
undefined says I am waiting, pls somebody from team, answer it
undefined says hey, i think you can get the idea from the https://github.com/axelarnetwork/axelar-examples repo. Follows the guide there to setup and run this example https://github.com/axelarnetwork/axelar-examples/tree/main/examples/evm/call-contract
undefined says actually I want to write test for my contract where I don't need to deploy the contract to testnet
undefined says I see. I think this test could be useful. it's running tests against networks in your local machine. https://github.com/axelarnetwork/axelar-examples/blob/main/examples/tests/checkExamples.js
undefined says `npm run test`  to run it
undefined says Okay I will go through this, thanks
undefined says this is worth too look too https://github.com/axelarnetwork/axelar-examples/blob/main/scripts/start.js#L43. this script runs networks in the local machine. It deploys axelar contracts like gateway, gas service, aUSDC contracts to every chains. `createAndExport` function automatically detects GMP transaction at the source chain and relay it to the destination chain.
undefined says Okay üôè
undefined says let me ask you one more question, is there contact point when using this api commercially 
there are many company usually provide 1317 lcd port, but this api seems to be provided exclusively by the axelar foundation
undefined says getting the same error as well, any advice? this is for mainnet
undefined says I wonder if we need to register to use a private node or something
undefined says Hello are you still looking for a solidity developer?
undefined says Check out https://axelar.network/careers for any open roles that might fit you!
undefined says https://dune.com/axelarnetwork/axelar
undefined says Axelar's dashboard is now trending on Dune, check it out above! 
if you have any ideas on metrics or graphs that you'd like to see included, feel free to share it below üôå
undefined says i am looking to sign messages from avax to polygon and wondering about the cost and security compared to like hyperlane.

When axelar writes to the deployer contract on say avalanche, how is the message signed? i see a whole list of top 60 validators, but are they signing via TMPC or multisig? if its a tmpc or multisig, then why do we need to write the weights on each of the chain as well?
undefined says When distribution start?
undefined says For?
undefined says Will get back to everyone here, the team is slower to respond over the weekends!
undefined says Hey, we have various community provided LCD/RPCs for mainnet/testnet that can be found here:
https://docs.axelar.dev/resources
undefined says @coconut @galouzeau can you share with me what parameters you are using for these calls that give you the 403s? can't reproduce any errors from our side and logs look clear, so we can help if you send along some snippets
undefined says When an app calls our gateway contract API on avalanche/src chain, Axelar network‚Äôs validators verify it and sign an approval for Polygon/dest chain. The gateway on Polygon is a light client of Axelar (it tracks the Axelar validator set‚Äôs quadratic voting power/weights).

You can see the signed command batches here: https://axelarscan.io/batches

And axelar validators quadratic voting power here:
https://axelarscan.io/validators

You can also read more on Axelar's security model here: https://axelar.network/blog/security-at-axelar-core
undefined says I mean this url (https://api.axelarscan.io/inflation) 
It seems to be run by foundation isn't it?
undefined says by the team* - Also check this https://discord.com/channels/770814806105128977/955655587260170272/1072718850908491826
undefined says I'm sorry. I'm not used to English, so I couldn't explain in detail.
I mean, I'm asking if this url(https://api.axelarscan.io/inflation)  is commercially available. 
And the reason I ask you is because this seems to be owned by the team and you seem to be Foundation people.

I'm sorry if there was a guide for commercial use in the document you linked, and I couldn't check it.
undefined says const axelarAssetTransfer = new AxelarAssetTransfer({
  environment: Environment.MAINNET,
});

let getDepositAddressParams: any = {
  fromChain: "ethereum",
  toChain: "osmosis",
  destinationAddress: "osmo12ndfvm5pmpl0w9gpz7qep5q44exfkz8ulywz4a",
  asset: "uusdc",
};

const depositAddress = await axelarAssetTransfer.getDepositAddress(getDepositAddressParams);
undefined says Hi guys
undefined says Beginners question, when to use the AddressToString and StringToAddress Utilities??
undefined says im posting the request using nodeJS, code is similar's to @galouzeau
undefined says i have traced the error to the  `getInitRoomId`  function in axelarjs-sdk, with error code 1020
undefined says it works when i use getDepositAddress on a frontend webapp, but not when i use getDepositAddress on nodeJS
undefined says I am building a Axelar subgraph for Messari (https://github.com/messari/subgraphs). I have two questions about the AxelarGateway contract I hope someone can help me:
1. what is the use case for `burnToken()`? Unlike sendToken, it seems to me it locks/burns tokens, but not necessarily tiggers a cross-chain transfer

2. when tokens are received via `mintToken()` on the destination chain, is it possible to find out the source chain/address originated the transfer, ideally using on-chain data?

thank you!
undefined says Hello, has another calculation method been added to the apr calculation formula?
Again, I ask because there is an apr difference between axelarscan and mintscan.
undefined says Hey, no need to apologize, we're here to help :Axelarstrong: 
About your question, i don't think the related usage will pose a problem. So i think you can use it. 

anyway, let confirm this for you;
@PJ
undefined says the formula is still same but axelarscan may have added the avg validator commission rate to the apr formula
undefined says Same problem here as of now:
 - getTransferFee()
 - nodejs, fresh npm install
 - both mainnet and testnet
 - http 403 and 'error code: 1020' as response data
undefined says Probably an issue related to cloudflare for rpc.axelar.dev
"Error 1020 Access Denied is caused when a firewall rule has been violated on a site protected by Cloudflare"
undefined says Issue is resolved if you connect to another node. Example:

    const axelarConfig = {
        environment: Environment.MAINNET,
        axelarLcdUrl: 'https://lcd-axelar.whispernode.com',
        axelarRpcUrl: 'https://rpc-axelar.whispernode.com',
    }
    const queryApi = new AxelarQueryAPI(axelarConfig)
    ...
undefined says Tagging @Milap here, perhaps Milap can help with checking the firewall rules.
undefined says Hi team !!

I am trying executed this example 
https://github.com/axelarnetwork/axelar-examples/tree/main/examples/evm/send-ack

But error is showing ...
undefined says https://testnet.axelarscan.io/gmp/0xa2e4737020ba805d6341c11426d39f170c03b1ebe33e1194beb497b0dd7be328:1
undefined says any help how to fix ??
undefined says Next step would be to try debugging your contract and then making a new call- here's some support docs on this: https://docs.axelar.dev/dev/monitor-recover/recovery
undefined says hey all - is it still the case that 80% of validator vote power needs to approve and co-sign any cross chain tx?
and 90% of validator vote power needs to collude to withdraw funds or forge a state proof?
these were the thresholds in the WP and just want to confirm its the same still - I didnt see these numbers in the docs anywhere
undefined says and Im assuming thats based on quadratic voting since the upgrade in Q4?
undefined says Hello!

-->>hey all - is it still the case that 80% of validator vote power needs to approve and co-sign any cross chain tx?
According to the WhitePaper nothing was changed regarding this: 
```
Subsequently, the Axelar base layer is aware of the state of external blockchains at any point in time, creating the ‚Äúincoming bridges‚Äù from other blockchains. The validators collectively maintain threshold signature accounts on other blockchains (e.g., 80% of validators must approve and co-sign any transaction out of it), which allows them to lock and unlock assets and state across chains and to post state on other blockchains, the ‚Äúoutgoing bridges.‚Äù Altogether, one can view the Axelar network as a decentralized crosschain read/write oracle.
```
and 90% of validator vote power needs to collude to withdraw funds or forge a state proof?
```
Maximum Safety. Axelar sets the safety threshold to 90%, meaning that almost all validators will need to collude to withdraw any funds that are locked by its network or forge state proofs1. In practice, it has been observed that PoS validators have very high up-time (close to 100%), assuming they are properly incentivized. Hence, Axelar network will produce blocks even despite this high threshold. However, in the rare case that something goes wrong and the network stalls, the network needs robust fall-back mechanisms to reboot the system described next.
```
More details you can find here: https://axelar.network/axelar_whitepaper.pdf

-->>and Im assuming thats based on quadratic voting since the upgrade in Q4?
Yes, you are right.
undefined says appreciate that!
undefined says We are always at your service!
undefined says Hello! Sorry if this is silly question but... I understand that we have this deposit service contract on all supported EVM chains on this address `0xc1DCb196BA862B337Aa23eDA1Cb9503C0801b955` and then we have `addressForTokenDeposit` and `addressForNativeDeposit` to create the deposit address that will transfer the funds... now... what about when the origin is a cosmos chain or when it's between cosmos chains? Documentation for sdk says `sdk.getDepositAddress(...` but as I am not using the sdk... can some1 explain what the sdk does underneath?
undefined says hey Anton, I have a question related to malicious validators.

In the event a malicious validator(s) are slashed, are the slashed funds used to make a user whole if their funds are stolen?
undefined says or are slashed validator funds burned (like most Cosmos chains)
undefined says IBC start with error endpoint ws not work it got it from https://docs.axelar.dev/resources  , Please give me correct endpoint ws.
ERROR ThreadId(01) supervisor.init_subscriptions: failed to subscribe to events of axelar-testnet-lisbon-3: event monitor error: failed to create WebSocket driver for chain axelar-testnet-lisbon-3 with address ws://rpc-axelar-testnet.imperator.co/wss
undefined says can try this one: `wss://rpc-axelar.stakerun.com/websocket`
undefined says no answers? :S
undefined says Thank you
undefined says Sorry we missed this- we'll get you some answers here ASAP!
undefined says thank you üôÇ eagerly waiting
undefined says Hello.
Hope you are doing well.
I am a senior web and blockchain developer.
 - DEX and Swap functions and Bridge
 - DeFi development(token staking, farming, bonding, borrowing and lending )
 - NFT Marketplace, NFT staking
 - Dapp stack (Web3.js / Ethers.js)
 - Solana/ Rust (NFT staking, with SPL-Token with Anchor framework, and candy machine)
 - Front-end (React and Next, MUI, MDB, Vue and Nuxt)
 - Api handling (Moralis)
I am looking for some remote job or tasks I can do.
Best regards
undefined says Hey, I'm Axelar's BD team. I saw you had some questions building on top of Axelar. I want to better understand your pain points and your experience getting technical help in our Developer channel. Can you send me a message on TG? My handle is jason_c_ma
undefined says Hey, I'm Axelar's BD team. I saw you had some questions building on top of Axelar. I want to better understand your pain points and your experience getting technical help in our Developer channel. Can you send me a message on TG? My handle is jason_c_ma
undefined says Started a thread.
undefined says Hey, I'm Axelar's BD team. I saw you had some questions building on top of Axelar. I want to better understand your pain points and your experience getting technical help in our Developer channel. Can you send me a message on TG? My handle is jason_c_ma
undefined says Hey, I'm Axelar's BD team. I saw you had some questions building on top of Axelar. I want to better understand your pain points and your experience getting technical help in our Developer channel. Can you send me a message on TG? My handle is jason_c_ma
undefined says Hey, I'm Axelar's BD team. I saw you had some questions building on top of Axelar. I want to better understand your pain points and your experience getting technical help in our Developer channel. Can you send me a message on TG? My handle is jason_c_ma
undefined says Hey, I'm Axelar's BD team. I saw you had some questions building on top of Axelar. I want to better understand your pain points and your experience getting technical help in our Developer channel. Can you send me a message on TG? My handle is jason_c_ma
undefined says Hey, I'm Axelar's BD team. I saw you had some questions building on top of Axelar. I want to better understand your pain points and your experience getting technical help in our Developer channel. Can you send me a message on TG? My handle is jason_c_ma
undefined says Hey, I'm Axelar's BD team. I saw you had some questions building on top of Axelar. I want to better understand your pain points and your experience getting technical help in our Developer channel. Can you send me a message on TG? My handle is jason_c_ma
undefined says Hey, I'm Axelar's BD team. I saw you had some questions building on top of Axelar. I want to better understand your pain points and your experience getting technical help in our Developer channel. Can you send me a message on TG? My handle is jason_c_ma
undefined says Hey, I'm Axelar's BD team. I saw you had some questions building on top of Axelar. I want to better understand your pain points and your experience getting technical help in our Developer channel. Can you send me a message on TG? My handle is jason_c_ma
undefined says Hey, I'm Axelar's BD team. I saw you had some questions building on top of Axelar. I want to better understand your pain points and your experience getting technical help in our Developer channel. Can you send me a message on TG? My handle is jason_c_ma
undefined says Hey, I'm Axelar's BD team. I saw you had some questions building on top of Axelar. I want to better understand your pain points and your experience getting technical help in our Developer channel. Can you send me a message on TG? My handle is jason_c_ma
undefined says Hey! Can you help me figure out why my GMP tx is not going through? 
Asking here coz it's from a custom contract to another custom contract. Hence, a dev question. 
Also tried adding gas from the tx interface, but it says enough gas has been paid.

tx: https://axelarscan.io/gmp/0x22a056b340e1e31d7c10f176af6ed6e99fa9cb51f2e26a43dc504531989ed22f:36
undefined says cc: @Axelar Network
undefined says Hey folks WBA is starting application process for our master dev cohort Q2.  We have a CosmWasm course and a Solana course. Move soon. üòé
undefined says Hey- you paid the wrong gas service contract in the tx: https://docs.axelar.dev/resources/mainnet

The team manually executed this TXN, but to mitigate he issue moving forwards we recommend you update the gas service address for future calls:
https://moonscan.io/tx/0xbf3e71876cb24edeefa15d58e171bd09efdb1ee7d916a09fdab32bfe846ca5a4
undefined says Hey- for the more technical questions please feel free to message @Milap directly here on Discord! Can get you answers quicker that way :Axelarstrong:
undefined says @EpithSlayer 

Hey, sorry for the wait. There are several ways how assets can be transferred using Axelar stack:
1. via `AxelarDepositService` contract using `addressForTokenDeposit` or `addressForNativeDeposit` 
2. via `sendToken` on `AxelarGateway` contract
3. via so-called burner deposit addresses generated by sending a `Link` request like these https://axelarscan.io/transactions/search?type=LinkRequest - this is what `sdk.getDepositAddress` does under the hood. Neither `AxelarDepositService`  nor `sendToken` are being used in this case.

`sendToken` is the simplest one - an application/user explicitly sends assets and where they want them delivered, then upon finality on the source chain and successful confirmation by validators, required amount of token is minted on the destination chain (or transferred in the IBC case). At this stage this call can only be initiated on an EVM chain using an ERC20 token, but it can target either an EVM chain or a Cosmos chain. 

`addressForTokenDeposit` is essentially just another way to call `sendToken`, but without actively interacting with a smart contract. The address can be calculated offline, but  our relaying services need to be aware of it so that they can monitor transfers to that address. We provide an API for that and it will be exposed in the js sdk soon (AFAIK it's not yet). Upon detection of a transfer on the address, relaying services call `AxelarDepositService` which initiates a `sendToken` call cross chain. Such passive approach is helpful when interacting with third party dApps  (like exchanges, etc.) that e.g. require an address for transfer/withdrawal. We can only deposit ERC20 tokens on an EVM chain to this address, but similarly assets can go either to a Cosmos or an EVM chain.
undefined says `addressForNativeDeposit` is exactly the same as  `addressForTokenDeposit` except it allows to deposit native token. Before transferring funds cross-chain the native token will be automatically wrapped on the source chain into its ERC20 version (e.g. ETH -> WETH) which will then be transferred cross chain like with  `addressForTokenDeposit`. It's exposed on the SDK here - https://github.com/axelarnetwork/axelarjs-sdk/blob/302cb4673e0293b707d3401ad141be5e9cec2bbf/src/libs/AxelarAssetTransfer.ts#L74

Burner addresses achieve pretty much the same  as in the case of `addressForTokenDeposit` with several key differences:
1. Burner addresses are persistent on Axelar (and this address cannot be created offline)
2. Transfers between any chain "worlds" are supported: EVM <-> EVM, Cosmos <-> EVM or Cosmos <-> Cosmos 
3. This address can only be jointly controlled by Axelar validators and only for the token and source/destination it was created for. If a wrong transfer is made to such address, funds may be lost. The logic of the process is within `axelard` itself rather than a smart contract.

This is what they do and how they are different at a high level
undefined says @EpithSlayer please let us know if you have any further questions re ‚òùÔ∏è
undefined says Hello @Ilya Lukyanov so... basically for transfers starting on an EVM chain what I do is use the deposit service via the deposit contract `0xc1DCb196BA862B337Aa23eDA1Cb9503C0801b955` and simply generating the deposit address with the methods `addressForNativeDeposit` or `addressForTokenDeposit` depending if the token to be transfered is native to such EVM chain or not. So for me that is fine. Problem is, HOW do I do that when I start from a non EVM chain, ie Cosmos or Osmosis?
undefined says code on the sdk explained here: https://docs.axelar.dev/dev/axelarjs-sdk/token-transfer-dep-addr 
seams to be doing a call to `https://nest-server-mainnet.axelar.dev/otc?publicAddress="<address>"` to then follow this bit of code here: ```// auth/rate limiting
const wallet = (0, utils_2.createWallet)();
// sign validation message
const { validationMsg } = yield this.getOneTimeCode(wallet.address, traceId);
const signature = yield wallet.signMessage(validationMsg);
// get room id to listen for deposit address (to be extracted from link event)
const roomId = yield this.getInitRoomId(fromChain, toChain, destinationAddress, asset, wallet.address, signature, traceId);
// extract deposit address from link event
const newRoomId = yield this.getLinkEvent(roomId, fromChain, toChain, destinationAddress);
const depositAddress = this.extractDepositAddress(newRoomId);
return depositAddress;```
either calling the endpoint manually or using the sdk I get a 403 (I understand is because this is a private endpoint for some reason)
undefined says @Axelar Builder  The Axelar Testnet will undergo an upgrade to v32 starting on **February 21st, 2023 at 9:00AM Eastern Time **(2:00PM UTC) for approximately 2 hours. This release is focused on enabling GMP calls between Cosmos and EVM Chains. During this time, testnet versions of the Axelar Network, Satellite, token transfers, and General Message Passing will not be available.
undefined says hey everyone
is there golang client to make transfers?
I mean not node itself, but lib to use in own project to access axl
undefined says Yeah, you can import axelar-core https://github.com/axelarnetwork/axelar-core
and use it as a client to make gRPC calls to query/submit any transactions. You can find public RPC/gRPC nodes here: https://docs.axelar.dev/resources
Example usage to submit a tx via gRPC: https://github.com/axelarnetwork/axelar-core/blob/main/x/nexus/client/cli/tx.go#L47
Multi token transfer example: https://github.com/axelarnetwork/axelar-core/blob/main/x/snapshot/client/cli/tx.go#L87
undefined says Thanks for comprehensive guide!
undefined says > HOW do I do that when I start from a non EVM chain, ie Cosmos or Osmosis?
What you are trying to do (using  `getDepositAddress`) is the right way to go. Could you please share your full code that's sufficient to reproduce the issue?

E.g. this code works for me (sdk version 0.12.4):
```
const { AxelarAssetTransfer, Environment } = require("@axelar-network/axelarjs-sdk");

const aat = new AxelarAssetTransfer({
    environment: Environment.MAINNET
});

aat.getDepositAddress({
    asset: "uusdc",
    fromChain: "osmosis",
    toChain: "celo",
    destinationAddress: "0x18599C7884d3AD130CF2b374508539B9878c7931"
}).then((addr) => {
    console.log(`Deposit address: ${addr}`);
}).catch((err) => {
    console.error(err);
});
```
undefined says I had to get my ip whitelisted, all is fine now
undefined says Hi, can anyone advice on the audit cost (certik, etc) for axelar dapp contract (3 solidity contract - sender, receiver, dapp contract)?
undefined says im trying to build a backend service to bridge axelar assets between evm <--> cosmos for my team but ive been unable to overcome the issue - "Error 1020 Access Denied is caused when a firewall rule has been violated on a site protected by Cloudflare"
undefined says this code doesnt work on nodeJS as the cloudfare firewall is blocking me, is it possible to whitelist my ip address?
im trying to build a backend service to bridge axelar assets between evm <--> cosmos for my team but ive been unable to overcome the issue - "Error 1020 Access Denied is caused when a firewall rule has been violated on a site protected by Cloudflare"
undefined says That's certainly not right. I'll pass the issue to our SDK team. In the meantime please DM me your IP - I'll see if we can whitelist you
undefined says the same problem 403 and 1020 error
undefined says you need your IP whitelisted by the team @Ilya Lukyanov  looks like another 1
undefined says your IP already whitelisted?
undefined says mine? yes
undefined says but I know my company had already talks with them prior, so... might be a different situation
undefined says currently it is night for @Ilya Lukyanov üò≠
undefined says then... wait for tomorrow or bother @Jason Ma | Axelar  he might be able to find you some1
undefined says Hi everyone, I have a question for you! For my application, I have two GMP requests that go from Ethereum to Polygon. The first one is used to validate a purchase, and the second one is used to initiate the transfer. Of course, the first one must arrive before the second one, otherwise the purchase is marked as "unvalidated." However, if the two requests are sent within a few seconds of each other, it often happens that the second one is executed on Polygon before the first one (even though they were sent in the correct order). Have you ever experienced this kind of problem?
undefined says Additionally, my "transfer" function (the second one) involves a round trip (paying on Ethereum, checking on Polygon if I can transfer and removing the item from the database, and then calling Ethereum again to initiate the transfer), so I pay for the gas service twice during the first transaction on Ethereum. In the case I explained above, I manage to re-launch my second request from axelarScan, and the request goes through successfully on Polygon. However, for the return, it tells me that I haven't paid the gas.
undefined says Started a thread.
undefined says Hi guys, I have a question about running a staked relayer node. If I run one, I am rewarded for executing transactions on the destination chain, right?
undefined says If someone has better network connection then me (or is faster to execute destination chain transactions for other various reasons), I will usually lose this race won't I? Won't most of the rewards go to the one subset of people with highly optimized setups for executing these transactions?
undefined says Started a thread.
undefined says thank you, I just sent a friend request
undefined says added you, so whenever you're ready üôÇ
undefined says Security question: I noticed that sdk.getDepositAddress(...) connects to https://deposit-service.mainnet.axelar.dev/ . Are we trusting that server? How can I verify that the deposit address is not an attacker's address? Thanks
undefined says its correct
also, there is offline address verification, see js client `getDepositAddress` implt
undefined says Offline address verification only applies to wrap/unwrap related things, not a regular transfer
How can we independently verify a generated address is correct after the fact, for example by checking multiple different nodes?
undefined says Any thoughts here guys?
undefined says Hey- Axelar is powered by a decentralized validator set running a delegated proof of stake consensus, and only the validators in the active set are incentivized. Relayer nodes are not incentivized on the network.
undefined says @Axelar Builder ICYMI:

ü¶æ We‚Äôre excited to be a part of the hackathon track for BNB Chain‚Äôs Zero to Blockchain  Hero Builder series!  

üõ† Read more about the program here: https://binance.org/en/blog/from-zero-to-blockchain-hero-bnb-chain-builder-series-calling-for-developers/

üîó And see the original announcement here: https://twitter.com/BNBCHAIN/status/1625457603697426434
undefined says gotcha, thanks kate!
undefined says I have 2 more questions:
1. If the relayers are incentivized, then why do any messages get executed on the destination chains? What's in it for them to spend the gas cost to do this?
2. Validators are competing with eachother as well then aren't they? Doesn't the above problem still exist (many race to complete the validation work, only small % will be successful?)
undefined says for the first question, the only purely monetary incentive would be the potential to get into active set. We also see developers who want to build on top of our network and play around with the setups. 

Validators aren‚Äôt connected to the relayers, this is a different and completely permissionless activity on the network, so if one relayer goes down, anyone can step in and spin up a new connection to support the relaying services. Anyone can provide relaying services by calling APIs we‚Äôve exposed,  and you only really need 1 relayer for liveness.

Axelar validators connect to other chains through an RPC endpoint in order to vote or do read events for those chains, and they need to have some balance on a broadcaster account to be able to pay gas. The current active set can be seen here: https://axelarscan.io/validators

Anyone can run a relayer, and gas is only involved when making transactions like send token- so running a fullnode won‚Äôt require transaction to pay gas.

For the second question- this process describes a Proof of Work scenario with miners vying for block rewards by expending computing power to solve the cryptographic hash first- Axelar runs a Delegated proof of Stake consensus where validators vote on on-chain events, and TXNs are approved when the validators reach a threshold.
undefined says Here's a detailed TXN flow with the relayer and validator roles explained :7307updatediscord:  Happy to go more in depth with it!
undefined says @Axelar Builder The scheduled Axelar Testnet upgrade is complete. Axelar testnet, Satellite, token transfers + General Message Passing are back online.
undefined says Repost from @parti: Hello everyone! I noticed Axelar is the only bridging solution that is currently working towards General Message Passing between Cosmos and EVM chains. Congrats on that!
I have some Qs regarding this, pls let me know if this is not the right place to post them:

1. Do you have a time estimate for deploying GMP cosmos-evm to mainnet?
2.  Why exactly is the message bridging between cosmos and evm so complicated? 
3. I understand that Ethereum uses RLP encoding and cosmos uses Protobuf for messaging. Are you changing the encoding off-chain with your relayers before consensous or are you doing it on-chain?
undefined says > 1. Do you have a time estimate for deploying GMP cosmos-evm to mainnet?
I hope the team can give an update on this. GMP for Cosmos chains is under development right now as per the docs (https://docs.axelar.dev/dev/gmp-overview). An EVM <-> Cosmos General Message Passing devnet demo can be found here: https://github.com/axelarnetwork/evm-cosmos-gmp-sample

Latest update I am aware of is the following, I think it's very close but there is no ETA yet:

> The Axelar Testnet will undergo an upgrade to v32 starting on February 21st, 2023 at 9:00AM Eastern Time (2:00PM UTC) for approximately 2 hours. **This release is focused on enabling GMP calls between Cosmos and EVM Chains**. During this time, testnet versions of the Axelar Network, Satellite, token transfers, and General Message Passing will not be available.
> https://discord.com/channels/770814806105128977/936759632788086814/1076152359874461766

> 2.  Why exactly is the message bridging between cosmos and evm so complicated? 
Speaking as a non-dev here, I assume one key challenge lies in making sure everything is cryptographically secure and bug testing may take a considerable amount of time as well.

> 3. I understand that Ethereum uses RLP encoding and cosmos uses Protobuf for messaging. Are you changing the encoding off-chain with your relayers before consensous or are you doing it on-chain?
I think I cannot reliably answer this question, unfortunately. I hope someone from the team can jump in about this question.
undefined says Started a thread.
undefined says You can look for the deposit address link events, or even submit the following tx yourself to generate the deposit address:
https://axelarscan.io/tx/07EF4CFB37EA1F3964C9D9C455E304B3C605FEE5E0228BCDF5BCBF0AF5D4B74F
undefined says Thank you for the answer!
undefined says thanks
undefined says Glad I could help. I hope someone else can help you with question #3. Details about the consensus can be found in Axelar's whitepaper https://axelar.network/axelar_whitepaper.pdf but I wasn't able to find a definite statement in regards to on- or off-chain.
undefined says Yes! hz answered 3 with tons of details in the dedicated thread, just above.
undefined says hey everyone one more time
1. if i use wrap type transfer, is there a possibility that at current moment route is switch off due for some reasons(bug found or limit on daily volume, etc)? Is there and api to check if route is available? And for non-wrap transfer the same question(maybe they share same limiter)?
2. if i have wmatic on osmosis, and want to get matic(thus it will be unwrapped on polygon), than it is not possible via `addressForNativeDeposit` ? Or i don't understand it correctly?
undefined says Hi, 
we have a commercial partnership with Circle for being a USDC liquidity provider, what is the process of integrating the Axelar network to send USDC to a new EVM layer-2 network? i.e., ZKSync or a forked layer-2, i.e., Optimism from Ethereum?
Does it require a commercial partnership with Axelar?
undefined says Do you support USDC token swaps from the Stellar network?
undefined says Pinged the team internally for this one!
undefined says `getDepositAddress` in the SDK would return an error if the route isn't available. We can add a more explicit API in the SDK to check this though.
undefined says will go through the code, cuz i am no use js client
undefined says Ah, yes, if you're interacting with the network directly, you can query this REST API to check the `activated` status
https://lcd-axelar.imperator.co/static/swagger/#/QueryService/ChainState
https://lcd-axelar.imperator.co/axelar/nexus/v1beta1/chain_state/ethereum
undefined says Hey, please reach out to James on Telegram: @jamessean1 happy to continue the conversation there!
undefined says Hi guys. I've been trying the examples on testnets but Axelar transactions keep getting stuck. When I check on axelarscan I see the problem is "Insufficient Fee". It could be caused by `getGasPrice` returning values that are too low. Can you guys please check whether I'm right and fix the problem so that transactions won't get stuck because of "Insufficient Fee"?
undefined says Polygon fees have risen a lot lately and Axelar should be adapting to it. For my latest test `getGasPrice ` results in gas payment of 0.00005087AVAX, but around 0.00262901AVAX was actally required because of high fee required on Polygon end.
undefined says Hi, the `getGasPrice` endpoint returns a conversion rate of gas prices between two chains at a certain time. It does not indicate the total gas for a gmp call. 

To initiate a gmp call, you would need to pay for 
1) the network base fee 
2) gas for execution 

I'd suggest to use the `estimateGasFee`  method to get the estimation (https://docs.axelar.dev/dev/axelarjs-sdk/axelar-query-api#estimategasfee). You can pass the gas limit, src/dest chains of the gmp call, and the token to pay for gas to the method. It will calculate both fees and give you an estimation to be paid in the token you want to pay on the source chain.
undefined says have anyone got this error while installing  `@axelar-network/axelar-local-dev   `
undefined says but installing old version `@axelar-network/axelar-local-dev@1.1.0` works
undefined says can't find what endpoint to query, to construct `adressForTokenDeposit`  is it just `/deposit`? If i query it, than it provides  `Missing Authentication Token` error

or for now it is only possible to use fake walet, get otp, sign it, create room, open socket and here get link event? so heavy üôÇ
if so, maybe you have some golang code to share üôÇ
undefined says Hey! is GMP enabled for evmos? couldn't find the Gateaway contract address (https://docs.axelar.dev/dev/build/contract-addresses/mainnet)
undefined says `getGasPrice` was in the example code, I simply ran it. I guess whoever wrote the examples was wrong. Though I noticed it has been replaced by `calculateBridgeFee` (which uses `estimateGasFee`) in yesterday's update https://github.com/axelarnetwork/axelar-examples/pull/95/files/e50cba0f4492dd352aae51a8b0c574124bf0b631#diff-3c7517be0abcf72e0a4da359d2b4400ddcdfe0b1418c8c1af0a13805e7cc855a I've just tested it and now transactions no longer get stuck. Thank you guys for fixing the problem.
undefined says Is it possible to send osmosis weth to juno network?  Dont see weth pair on Juno side and multiple people having issues getting it bridged for the new pool on hopers.io
undefined says deos axelar supports  Aptos in mainnet or testnet , i can see the example on github but the official docs doesn't include Aptos on bot test and main
undefined says We are connected to Evmos via IBC
undefined says Aptos is only currently on devnet
undefined says any one?)
undefined says what about Ethereum? is there a way to pass arbitrary messages between Ethereum and Evmos?
undefined says When calling `estimateGasFee` I now always get 0. I checked the code and see that caught exceptions are ignored: https://github.com/axelarnetwork/axelarjs-sdk/blob/09a8535061007c524130db58b9a11879621b388f/src/libs/AxelarQueryAPI.ts#L182 . It's better to print exceptions out so that we can more easily find the cause and fix. I noticed that `getNativeGasBaseFee` is called so I tried that and in the exception output found "error code: 1020", which is access denied. Do I need to get my IP range whitelisted? Could you just make it open to everyone?
undefined says Quick question: I used Binance to send USDT from Polygon to Terra but the transaction seems to be stuck. Any suggestions? Thank you.
undefined says Anyone know whether Feidan is legit?
undefined says Nope, banned!
undefined says The guy who replied to you was also a scammer, banned too.
undefined says Best to open a ticket on https://axelar.zendesk.com/hc/en-us/requests/new?ticket_form_id=4420839961499
undefined says Thanks @Rodin10 (Will never DM first!). I opened a ticket!
undefined says hi guys, question when sending a payload to a cosmos sdk chain from ethereum using axelar General Message Passing. So I want to be able to send tokens and call a supply msg on umee for example from ethereum. Would the payload be the supply msg? 

const payload = ethers.utils.defaultAbiCoder.encode(
  ["{
      "type": "umee/leverage/MsgSupplyCollateral",
      "value": {
        "asset": {
          "amount": "1000000",
          "denom": "uumee"
        },
        "supplier": "umee1nspezfhn9d5t0umcfk5ls6kw34xk00xphat0ev"
      }
    }"],
  
);
undefined says hey, I replied in DM
undefined says GMP isn't for that sort of messages per se, but for interaction between smart contracts on different chains. You'll need to implement custom logic on the destination chain. Please check out this example https://github.com/axelarnetwork/evm-cosmos-gmp-sample
GMP calls from EVM to Cosmos chains is a new feature  which is currently only supported on testnet.
undefined says Is there a timeline when this feature will be available on mainnet?
undefined says Also does the feature require cosmwasm or can you implement the logic for the middleware into a custom module instead?
undefined says nvm i see the native integration in the repo
undefined says @Axelar Builder we've got an announcement we think you'll be as excited as us about... 

Today we announced that the **Axelar Virtual Machine** is launching with two products:

:Cross1:  **Interchain Amplifier:** Connect to any chain at will.

:Cross2:  **Interchain Maestro:** Automate complex tasks by orchestrating multi-chain dApp management.

And we would love for YOU to give it a try!

üìç Read the full announcement blog post, 

üìçSign up the Axelar virtual Machine Devnet,

üìçLearn about the newly unveiled Axelar  a $5 million developer grant program to build using the Axelar Virtual Machine and expand the interchain, 

And more, all in one spot: https://linktr.ee/axelar_vm

:5385twitter: Show us some love on twitter: https://twitter.com/axelarcore/status/1630290474790682625?s=20

üëÄ  What will you build?
undefined says when devnet run?
undefined says This is tbd.
undefined says Feel free to sign up for the Axelar virtual Machine Devnet: https://linktr.ee/axelar_vm
undefined says The team reviews applications every 2-3 weeks
undefined says On-boarding instructions & next steps will be sent to applicants after the application has been reviewed
undefined says yep
undefined says üëç
undefined says I sent. hope to receive your email soon! üòÑ
undefined says Got my fingers crossed for you! ü§û
undefined says would love to chat about the axelar VM @ interop but the waitlist is closed. any chance I can sneak in the back door @Stefan ?
undefined says working on https://community.reflexer.finance/t/can-oracles-double-as-co-stakers-how-rai-like-systems-might-safely-support-staked-eth/397/17
undefined says Hello,
I'd like to use axelar at ethdenver
How do we get testnet aUSDC ?
undefined says (sorry for the ping)
undefined says See #üíß‚îÇfaucet 
https://discord.com/channels/770814806105128977/1002423218772136056/1078288871273541712
undefined says we are building a defi pooling protocol on axelar, is it possible to get  a bit more than 10 aUSDC ?
undefined says For sure, sent you more:
https://mumbai.polygonscan.com/tx/0xa170792dc1a07150d75cc5bc3ae0178fc57c9d9145cac14f28e4c05cb77daebb
undefined says Thank you very much
undefined says There's skip the line access for AXL holders to events, the Summit itself and some exclusive swag as well Axelar gives out on-site.
undefined says You could also try to reach out to the team to see if they can help you.
undefined says Hi,

Does anyone know how to get this rid of this error , I am trying to run examples-web from Axelar's Example github

```Cannot find module 'types/contracts/factories/contracts/call-contract' or its corresponding type declarations.```
undefined says 
undefined says Ok I'll try üôè
undefined says What is the address of the CREATE3 factory that you guys are using on testnets? Axelar documentation only covers CREATE2: https://docs.axelar.dev/dev/build/solidity-utilities#constant-address-deployer
undefined says Hi all. My sincere apologies for the offtopic question, but Axelar built much better Kava docs than Kava themselves üòÖ  They also aren't being very helpful, so I'm just hoping that someone might have some experience; and if not, that's perfectly cool and I'll delete and be on my way.

In any case, I finally got a Kava archive node working, but curious if anyone has any familiarity with the error `{'code': -32000, 'message': 'rpc error: code = Unknown desc = only evm denom akava is supported by EvmBankKeeper: panic'}` when making actual archive calls.
undefined says Perhaps @Rok | Qubelabs  can help you with the error. Tagging Rok here but I'm not sure if he's running a Kava node.
undefined says It looks like you are trying to deploy the contract directly, you should use the deploy scripts we supply. `npm run deploy ...`. the readme might be helpful here too. Can you give that a try and see if you still get an error?
undefined says Yeah, I am using the scripts , followed all the steps from GitHub readme. After some debugging , it looks like the hard hat compilation doesn‚Äôt generate types
undefined says Where do we use create3? I'm not aware of that but maybe I can pull the thread and help figure it out. Why do you need this?
undefined says so, turns out I don‚Äôt actually have an archive. Full size is >3 TB üò´
undefined says There's Axelar code that supports CREATE3:
https://github.com/axelarnetwork/axelar-gmp-sdk-solidity/blob/main/contracts/deploy/Create3Deployer.sol 
https://github.com/axelarnetwork/axelar-gmp-sdk-solidity/blob/main/scripts/create3Deployer.js . 

I'm trying the cross-chain token example https://github.com/axelarnetwork/axelar-examples/blob/main/examples/evm/cross-chain-token/index.js#L21 and replaced `deployUpgradable` with `deployCreate3Upgradable` . 

The advantage is that the address of the deployed contract is determined only by the deployer address and the salt, and no longer by the hash of the contract's creation code as well. This would make it easier to deploy contracts to multiple chains at the same addresses.
undefined says hi, could you try running `npm run contracts:generate` command?
undefined says @nptytn  Thank you. That solved that issue, but now i am getting this other error
undefined says 
undefined says Another issue when running ```npm run contracts:build```
undefined says I can solve the dependency issue by installing ```npm install @axelar-network/axelar-gmp-sdk-solidity``` and regenerating types using ```npm run contracts:generate```
undefined says but still facing issues when trying to ```npm run contracts:deploy```

```TypeError: contract.populateTransaction.init is not a function
    at deployAndInitContractConstant (/Users/fork/exper/axelar-examples/examples-web/node_modules/@axelar-network/axelar-gmp-sdk-solidity/scripts/constAddressDeployer.js:130:56)
    at processTicksAndRejections (node:internal/process/task_queues:96:5)
    at async deployUpgradable (/Users/fork/exper/axelar-examples/examples-web/node_modules/@axelar-network/axelar-gmp-sdk-solidity/scripts/upgradable.js:35:17)```
undefined says Can I transfer a bayc to arbitrum using axelar? safety?
undefined says Is RPC a good way for Cross Chain Messaging? I am new in this place
undefined says 
undefined says great
undefined says How do I add an evm network that isn‚Äôt currently supported? Is it enough to deploy AlexarGasService DepositService and ExpressService and then add those details to the testnet.json ?
undefined says Hi, do view: https://community.axelar.network/t/how-can-a-new-chain-be-added-to-axelar/2368
undefined says How to actually run the Axelar node in a docker container?
undefined says I‚Äôm getting 404
undefined says Hello
undefined says am writing to apply for the community manager position at your project. I am confident that I have the skills and experience that you are looking for, and I believe that I would be a valuable asset to your team.
As i can handle medium,Discord and Telegram group or channel. Thanks
undefined says 
undefined says Has anyone encountered this error?
undefined says Just fix it by adding an condition
```js
  if(contract.populateTransaction.init){ // this is added
    const initData = (await contract.populateTransaction.init(...initArgs)).data;
    const tx = await deployer
      .connect(wallet)
      .deployAndInit(bytecode, salt, initData, {
        gasLimit,
      });
    await tx.wait();
  }
```
undefined says `deployCreate3AndInitContract` isn't working (the `init` part). How can we get this bug fixed?
undefined says I've been chatting with the dev team and I believe at this point the create3 apis aren't quite ready and we recommend you use create2. My apologies that this is in the repo but not ready yet.
undefined says What are you trying to accomplish? Usually to use axelar you don't need to run a node, you would just build with the infrastructure and services we provide in axelar-examples (https://github.com/axelarnetwork/axelar-examples). If you do want to run Axelar core in docker, here's our recommendation: https://github.com/axelarnetwork/axelar-core#creating-docker-images
undefined says Today you can't use unsupported EVMs. This is something that will become possible with the Axelar VM (https://axelar.network/blog/axelar-virtual-machine-future-of-interoperability), but it's not yet available.  To add Axelar support for a new EVM you have to setup and configure the gateway, gas service, relayers and sentinels, and make sure validators of the Axelar network support the EVM chain. It's a huge amount of work today but something that will get easier in the future. What chain did you want to be supported?
undefined says Axelar has a list of supported assets: https://docs.axelar.dev/dev/build/contract-addresses/mainnet#assets. If you need something outside this list, you can do it but you'll be relying on cross chain swaps and liquidity using something like Squid. https://app.squidrouter.com/ but I didn't see bayc which might mean there isn't enough liquidity for the cross chain swaps necessary to move it cross chain.

You could also check out our upcoming Interchain Token tooling which would let you move any token between chains: https://testnet.services.axelar.dev
undefined says When is this VM going to be available?
undefined says We don't have a date, certain parts of the whole picture will land earlier, but it's a while out.
undefined says Thanks~
We will build our product on top of Axelar and will delve into learning the mechanisms of Axelar.
undefined says Great!
undefined says If I wanted to go the long route and not wait for axelar vm what would you suggest I look at?
undefined says What chain are you looking for support for?  You don't have to wait for support to start building. You can edit the configuration of `axelar-local-dev`  directly or in `axelar-examples` to use any chain IDs/names for local development & testing. It just won't work on the real testnet / mainnet.
undefined says hello! is there a way to query the axelar contracts for "this" blockchain? i.e. a contract deployed on polygon can ask the gateway (or other service) which network it's on and receive back the appropriate string chain name, in this case "Polygon"?
undefined says Hello,
Why does this tx say not enough gas while I paid 0.5 matic and 0.8 additionnal MATIC and the ui says it costs 0.31
undefined says https://testnet.axelarscan.io/gmp/0xdeb941e3b3b9577439cc4f2bea0959eb5036019cb2b296919418c5c8273533c4
undefined says I've read about the Axelar Virtual Machine and want to try Interchain Maestro ("build once and run everywhere"). Is there a guide or GitHub repository that contains code that we can try?
undefined says I had a look at Interchain Token. It looks great, esepcially because it works with any plain old custom ERC20 token. But I noticed that upon sending tokens to another chain they get locked on the origin chain. Wouldn't it be better if they get burned? What can we do if we want them to be burned and never locked? 

There are various issues with having tokens locked; just one is that they are a honeypot for hackers, as shown in many news stories about hacked bridges.
undefined says We (you) can't mint arbitrary tokens on the source chain so if we burned them we couldn't send them back.
undefined says This was an announcement that we are working on this. Code and tools will come in the future.
undefined says What if the token contract on source chain has a `mint` function (with appropriate role/permission check e.g. `onlyRole(AXELAR_ROLE)`)? Then the tokens could be re-minted on sending back, right?
undefined says Yes but this isn't supported by the token linker because we wouldn't have access to the function. But if you do, you can do this with callContract and GMP.
undefined says We actually have a signup form to gain early access ! Fill it out here: https://linktr.ee/axelar_vm
undefined says For already-deployed tokens that have role based access control, minting permission could be granted to the particular Axelar contract that would call `mint` e.g. via `grantRole` (https://docs.openzeppelin.com/contracts/4.x/api/access#AccessControl-grantRole-bytes32-address-)

I guess another way, for tokens not deployed yet, is to add Axelar-specific code into the token contract e.g. gateway, gas service addresses and `TransferRemote`. I tried the cross-chain token example and found that tokens were always being burnt on sending out and never locked when using `TransferRemote`, which is good.

We should  avoid locking tokens whenever possible.
undefined says The docker image is built. But, when I try to run the container it exits in like 3-4 seconds.
undefined says I want to run the node on my machine
undefined says Hey guys, I am facing a issue while transferring tokens cross-chain, I am sending tokens from Fantom - Kava and sending 12 Fantom as gas fees but then also it's telling me `Insufficient Gas Sent` in the Axelar explorer and I have to do the execute function manually from there
undefined says `0x5F449032e8F94892E7451c269F6EE26CFb2c4EC3` this is the Fantom address
undefined says `0xdEE35F89caEdA89Ba8BEd7ECa5e062581dEfB182` this is the Kava address
undefined says Error: couldn't read GenesisDoc file: open /home/axelard/.axelar/config/genesis.json: no such file or directory

This error pops up when I start the axelar/core image's container
undefined says Hi Axelar fam,
I'm a newbie in smart contract dev and I am trying to understand axelar's capabilities, so please forgive my possibly stupid questions üòâ 

I have some, questions about the asset transfer flow moving tokens from chain A to chain B.

If I got it right from the axelar docs, the flow is like this, if a User wants to move e.g. USDC from Chain A to Chain B:

**1.** User generates a linked deposit address transfer and sends the number of USDC they want to transfer cross-chain to the deposit address 
          **=> How does this 'linked deposit address' work in detail?**

**2.** Axelar validators confirm the deposit transaction made by the user

**3.** Axelar Gateway on Chain B mint the USDC on Chain B and transfers it to user's chain B deposit address
         **=> Here I have a problem of understanding. How are the token transfered to Chain B? Has Axelar access to the generated address from step 1 and swaps / bridges the token to Chain B or with which funds is the minting paid on Chain B by the Gateway contract? **

**4.** Axelar validators confirm the minting and the transfer to user's chain B deposit address

**5.** Axelar Gateway on Chain A burns the token if everything was successful or returns the token in case of an error

Is this flow roughly correct and do step 4 and 5 exists (did not saw them in the docs)?

I am grateful for any explanation and hint üòÄ
undefined says Hi, 1/2/5 For starters, when you send from your native network, for example, USDC in Ethereum to the Axl USDC Polygon network, the USDC in the Ethereum network is blocked, and Axl-usdc is minting in the Polygon network
Sending wrapped Axl-usdc to networks other than the native network (Ethereum in our case), for example from Polygon to Avalanche, burns tokens on Polygon and minting tokens on Avalanche, when sent from Avalanche to Ethereum, Axl-usdc tokens in Avalanche will be burned and in USDC Native Ethereum will be unlocked.
A deposit address is created to link the funds received to the destination address, Axelar microservices keeps track of the deposit address (Approximately 24 hours), as soon as the funds are received, they are sent to the destination address.
3 Axelar does not have access to deposit addresses
4 Yes.
undefined says hello, any chance I can get an answer to this question?
undefined says I've sent it to our eng team. I'll circle back
undefined says Not at the moment, you'll have to pass it in to the constructor of your contract
undefined says ok thanks
undefined says can i request this as a feature? seems useful for multichain applications.
undefined says and saves per-appplication storage requirements
undefined says Yes we noted this
undefined says Should be fixed now. Can you try again?
undefined says yeah I tried it's working now
undefined says 
undefined says Excuse me, I do a call from arbitrum goerli to ethereum goerli, but it shows 'ropsten' instead of 'goerli'
undefined says It is still pending, will it be successful?
undefined says https://testnet.axelarscan.io/gmp/0x9bb16727bcccf689ac74b0756a03b1e07d22dd915c9228b89fa374b33b835e61
this is the transaction
undefined says Is arbitrum goerli to ethereum goerli supported?
I am working on a POC base on Axelar for technical choice which is a little bit urgentü§ù
undefined says I deployed ExecutableSample manually on both arbitrum goerli and ethereum goerli
ethereum-goerli
0xAAeE22745acFd7a0692d76a2b087593c1fb3F1ab
arbitrum-goerli
0xb47c287eB1d8D9675eB456934FC0A1F557A1f657
undefined says Just did another  call but with different direction from ethereum goerli to  arbitrum goerli
https://testnet.axelarscan.io/gmp/0xadf13c8fce42cba2ba93767f8b0c36ccb7ac368152742c668539103adfeee641
undefined says on testnet, you have to use `ethereum-2` for goerli.
https://docs.axelar.dev/dev/reference/testnet-chain-names
undefined says The second call was already success after I did it manually when gas is not enough
undefined says For both network I use 'Ethereum' config in https://github.com/axelarnetwork/axelar-cgp-solidity/blob/main/info/testnet.json
undefined says Seems there is no config for ethereum-2, but the second call was already success, and the first transaction is still pending
undefined says Hi @leonfish(Will never DM first!),
thank you very much for your explanation  üòÄ üëç 

But unfortunately I still don`t get it how axelar acts in detail here (sorry). 

My understanding is that axelar must have have access / grant rights to the deposit address / contract on the source chain in order to act on the funds / token. 
For example I want to send USDC from Ethereum to Osmosis using satellite, I need to first deposit the USDC to an Contract from Circle (0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 - on Ethereum ). How can Axelar use these funds, did I grant the Axelar Gateway Contract on the source chain the right to transfer my USDC (which I missed to recognized the first time) or how does it work in detail (more fine granular)? 

And if I transfer e.g. native ETH via satellite to Osmosis, I have to send it to a temporary deposit address generated by Axelar. How does this work in detail?

Maybe there are some docs / links on the detailed workflow?

Many thanks in advance for your efforts. üòÄ
undefined says With the same 'Ethereum' config,  the first one shows  'Ropsten' but the second shows 'Ethereum'
undefined says So this means  config in ```https://github.com/axelarnetwork/axelar-cgp-solidity/blob/main/info/testnet.json``` is out of date, right?
Their is no 'ethereum-2'
undefined says If is user 'ethereum-2' ,  '@axelar-network/axelarjs-sdk'  will throw an error
undefined says 
undefined says 
undefined says Seems  'axelarjs-sdk' will take 'ETHEREUM' as 'ethereum-2', but gateway contract take it as 'Ropsten', when crossing from arbitrum goerli to  ethereum geerli
undefined says A workaround before contract interactive
```
    if(destination.name == 'Ethereum'){
        destination.name = 'ethereum-2'
    }
```
successed
undefined says Hello all! I'm new here and I'm running into issues with npm install ci for the aptos package :(. I am currently following the axelar tutorial from this page (https://docs.axelar.dev/dev/general-message-passing/local-dev), and when I npm ci, I get this error. I am using gitbash. Does anyone know why I am getting this error or could someone please kindly direct me to someone or somewhere that I can ask. Thank you!
undefined says `ethereum-2` should be recognized end-to-end. where are you finding that `ethereum-2` is not compatible? in the `axelar-cgp-solidity` repo?
undefined says https://testnet.axelarscan.io/gmp/0x9bb16727bcccf689ac74b0756a03b1e07d22dd915c9228b89fa374b33b835e61
For this transaction, I run example 'ExecutableSample'
```code
npm run execute evm/call-contract testnet "Arbitrum" "Ethereum" "Hello World"
```
undefined says But as a result,  Ethereum is be considered as Ropsten and can not be successful
undefined says in your USDC example, after you send the USDC to the one-time deposit address that is generated on the source chain, the network confirms the deposit and deploys a self-destruct contract at that address to then transfer the tokens to the axelar gateway contract where they're locked before minting the same amount on destination chains (e.g. chain B). once this is minted on chain B, if u send it to another chain (including back to ethereum), the tokens in the deposit address are simply burned before sending to another chain (and 'unlocked' in the case of sending it back to ethereum)
undefined says for transferring native ETH, here's a high-level blog that explains. happy to go into more detail if you want to probe further tho: https://axelar.network/blog/native-evm-cross-chain-asset-transfers
undefined says It worked after this fix
undefined says 
undefined says yeah, we should improve these examples. in general, the params for destination chain names should be those recognized on the network. a list of those is here: https://docs.axelar.dev/dev/reference/testnet-chain-names
cc @nptytn re: examples
undefined says Hi
I need to organize proxying for the arbitrum network.
What protocol is used to exchange data there?
undefined says Can you elaborate more on what you‚Äôre looking to achieve? I can run by the team as well for ideas
undefined says need one proxing service for some chains (bnb, fantom, etc)
like  ip:port/chain/
realization on fastapi and using rest (post\get) and forwarding headers - not works ("host" in headers was changed )
undefined says Thanks for the details, I will read the blog post üòÄ üëç
undefined says btw, **is it possible for a smart contract on chain A to query a smart contract on chain B via Axelar like an oracle?** 
For example, contract from chain A needs to know some information from contract on chain B during execution. 

And if it is possible, are there code examples of this?
undefined says Maybe you can use A=>B=>A call order to complete it
undefined says I am also learning but I personal don't think it's possible.  
For it always need transaction to do message communication as far as I know
undefined says "A to query a smart contract on chain B" don't make sense
A can query an oracle on A  for chain B or do some message communication by transaction
undefined says Hi, I hope you are all well.

This is Jon from Brazil, and I have strong expertise and experience in working for Frontend with React.js, Next.js, Angular, Vue, TailwindCSS, Material UI as well as building smart contracts with Rust and Solidity, and, interacting with smart contracts and wallets using Web3.js, Ethers.js, GraphQL,  SQL databases, Node.js and Python and more.

Also I have experience in building custom discord bot/telegram bot, trading bot as well.

I'd like to apply for the position of Full Stack Blockchain Engineer if it is available now.
Looking forward to hearing from you soon.

Regards!
Portfolio: https://0xjonatham.xyz/
undefined says Welcome @0xjonatham, feel free to also have a look at https://axelar.network/careers to see if there's anything you're interested in.
undefined says haha, as usual, Brazilians are great Frontend Devs....
BTW, I am Brazilian too but a outlier, a Backend Dev üòõ
undefined says Guys, where do I find the list of all blockchain networks supported by Axelar ?
undefined says You can check supported networks here: https://docs.axelar.dev/resources/testnet, https://docs.axelar.dev/resources/mainnet
undefined says Awesome! Thanks @Stefan .
We need to create a message (not tokens) bridge among our SC in Aurora to our SC in Ethereum and Near Aurora guys have recommended you.
undefined says here's an example of how we'd implement this: https://github.com/axelarnetwork/axelar-examples/tree/main/examples/evm/send-ack
undefined says I believe this example is also valid to my use case. However, is possible to use "aurora" as srcChain in this example?
undefined says should work. if you're running locally, it's not one of the default chains that's loaded (it should be... i mentioned it to the team). to get aurora as part of the local env, all you'd need to do is add `Aurora` to the chains list here: 
https://github.com/axelarnetwork/axelar-examples/blob/main/scripts/runStart.js#L16, i.e. change line 16 to: `const chains = ['Avalanche', 'Moonbeam', 'Polygon', 'Fantom', 'Ethereum', 'Aurora'];`. then run `npm run start`
undefined says But the main point of my PoC use case is to run NOTHING locally. To run locally we would create our own light clients in Go. Hence, this example might not be suitable for my case.
undefined says @Canh T , just to confirm, could I use 'Aurora' as sourceChain in this example https://docs.axelar.dev/dev/general-message-passing/gmp-messages  ? 
https://docs.axelar.dev/resources/testnet
undefined says Thanks in advance @Canh T for your kind support
undefined says oh yeah this repo also works against testnets. if you deploy the example using `npm run deploy evm/send-ack [local|testnet]` and specify testnet, it should just grab the evm testnets we support, which includes aurora
undefined says Fantastic, @Canh T . 
As we use Foundry we will adapt and try it.
One more time thank you
undefined says of course, happy to help. let us know if you have any issues with implementation, etc
undefined says Hey guys, I got a missing link here: https://docs.axelar.dev/dev/general-message-passing/chain-names
undefined says It's returning 404 to me
undefined says Hi, i really love axelar take only the source chain token and then pay 3 fees, src chain fee, validation fee and destination fee. What made me curious more is on thinking is axelar dependant on some exchange or exchange pool like thing to exchange src chain token to AXL and destination source token?
undefined says thanks for flagging. looks like we have a broken link. how did u get to the link? (we'll fix). 
it's here now: https://docs.axelar.dev/dev/reference/mainnet-chain-names
undefined says it's not a one-for-one swap per transaction. in general, relayers that dispatch messages to/from src/dest chains (via axelar) have monitoring to ensure they're adequately funded to broadcast messages to the chains they support. how they source it is up to them (and sure, maybe some of them have their favorite pools/etc, but that's not a 'dependency' per say).
undefined says hey guys, correct me if i am wrong, once the project runs successfully with no code issues it is Axelar that will be the infrastructure provider correct?
undefined says (Ab is referring to dApps whose multi-chain dApp instantiations are deployed/managed via the Axelar Virtual Machine).
undefined says Thank you, I will have a look üòÄ
undefined says HI )
Do you have any ideas?
undefined says I would like to query denomination metadata via e.g. cli or public rest api, but when I try to get it a empty response. Any idea why that would be?
e.g.
GET https://lcd-axelar.stakerun.com/cosmos/bank/v1beta1/denoms_metadata or `axelard query bank denom-metadata --output json` 
returns 
`{"metadatas":[],"pagination":{"next_key":null,"total":"0"}}`

when I query for a specific denomination, e.g uaxl, I get an error
undefined says I see Axelarscan used hardcoded data - so I guess there is no dynamic way to get this info
https://github.com/CoinHippo-Labs/axelarscan-api/blob/94c2b539d8b20617fb9581b12d44f5e229fa1798/functions/api/data/assets.js
undefined says Great. Thank you!
undefined says hey, dunno exactly what you need from the related metadata. may some endpoints are not fully implemented. 
although I'm not sure if it will be useful to you, you can get some denom from this endpoint `/cosmos/bank/v1beta1/supply`, then hash query it to get `base_denom` and `path` infos with this endpoint  `/ibc/apps/transfer/v1/denom_traces/{hash}`  (only useful for IBC based denominations)
undefined says I was looking to get live information on token name, token symbols and and token decimals for Axelar/Cosmos, like I can do it for a ERC-20 contract or substrate parachain
undefined says So instead of hardcoding  (like axelarscan) the decimals for e.g. "uaxl", this info could be retrieved programmatically
undefined says I am coding a set of contracts where I need to sync the state of a contract from one src chain to a couple of others at the same time (coming from the same function call).

Can I achieve that with Axelar? How?
undefined says Can anyone help me in solving this error?
undefined says Hey Alfa, the user "Cado ü´∂ü™ô üîê#5891" is a scammer and not a team member.
undefined says Please stay careful about impostors pretending to be team members.
undefined says The Axelar team will never DM you or ask you for your keys.
undefined says Please feel free to open a ticket via https://axelar.zendesk.com/hc/en-us/requests/new
undefined says hey stefan, how you doing

i didn't get any response on my question, is it being discussed right now?
undefined says I hope someone from the team can jump in to answer your question!
undefined says The team has just returned from ETHDenver so there may be a bit of backlog to go through!
undefined says Waiting for a reply here too üôÇ
undefined says Hey I could not open a ticket as the criteria is not matching to my problem
undefined says Is there any dev from the main team who can solve this issue?
undefined says Perhaps @Canh T can help with the error insufficient funds https://discord.com/channels/770814806105128977/955655587260170272/1083611152266829844
undefined says @Canh T , can you please help me
undefined says Can you send  a link to the transaction?
undefined says https://axelarscan.io/gmp/0x4a4cbc94a4d929ada5675bef3626af0d353f642e51c9b29e1a0ec0c95db6121f
undefined says i'm still not sure what you're doing here, why do you need a proxy service for running connections to rpc nodes to these evm chains? we don't have anything here at axelar, but if you can help us understand your use case a little more we can maybe help direct you
undefined says will check with the team... i'm not sure we expose these details in a query though. will come back if i have anything to share
undefined says for our cross-chain calls (i.e. `callContract` or `callContractWithTOken`, you can pass in any payload you like for the destination chain/s to process. simple example of that is here: https://github.com/axelarnetwork/axelar-examples/tree/main/examples/evm/call-contract. few other approaches you can perhaps consider (e.g. i've heard anecdotally other simply commit merkle roots of data structures that are posted cross chain), but the callContract is the 'simplest'. 

there's an `Axelar Builders` channel on TG where you can ask our dev partners more generally of any patterns you can use here. let me know if you'd be interested and we can get you into it
undefined says that's our aspiration, yes. `interchain maestro` is a tool that you should be able to use to manager your interchain contract deployments seamlessly. implementation is under way so stay tuned for future announcements once we roll this out. did you see our blog? more info that we've published so far on the AVM is here: https://axelar.network/blog/axelar-virtual-machine-future-of-interoperability
undefined says have asked a colleague to help debug this one. @PJ can you address this when you have some time?
undefined says Thank you Canh!
undefined says Appreciate the quick help!
undefined says Hello Alfa, our refund service ran out fund. We have fixed it. The gmp call was successfully refunded. 

However, I'd suggest using the method: `estimateGasFee` on our SDK to estimate the total gas (the network base fee + (gas limit * gas price)) to be used. It helps prevent overpaying much higher gas upfront than necessary.
undefined says Got it @PJ, can you send me a link to the doc where this estimateGasFee function is present
undefined says here they are üôÇ
- https://docs.axelar.dev/dev/general-message-passing/gas-services/pay-gas#overview
- https://docs.axelar.dev/dev/axelarjs-sdk/axelar-query-api#estimategasfee
undefined says We don't make use of denom metadata, but you can get metadata for the ERC-20 version of the tokens by this query:
https://lcd-axelar.imperator.co/static/swagger/#/QueryService/TokenInfo
E.g. https://lcd-axelar.imperator.co/axelar/evm/v1beta1/token_info/ethereum?asset=uaxl
https://lcd-axelar.imperator.co/axelar/evm/v1beta1/token_info/polygon?asset=uusdc

You can find more queries on the Swagger docs above, such as retrieving all assets for a chain etc.
undefined says Thanks @PJ  for assisting, it‚Äôs feels great to see that the dev team is so active to help other devs to solve there issues
undefined says 
undefined says I am getting some error in the terminal while compile
undefined says Can anyone plz help
undefined says Thanks
undefined says AxelarExecutable is in the executable folder not executables. 

Try digging into the folder in the node modules and see if you can find the file there
undefined says Hey. How can I speak to someone at Axelar Network Ecosystem for a partnership
undefined says Hey, im getting this error when try to run axelar FE in local
Error: config environment does not exist
undefined says Can someone pls help me
undefined says Hello! Could you please clarify what category your project belongs to?
undefined says Ok, DM ing you
undefined says Did you bridge your assets via #üì°‚îÇsatellite?
undefined says If so, please feel free to open a ticket via  https://axelar.zendesk.com/hc/en-us/requests/new
undefined says Which FE are you referring to?
undefined says thanks,

so, for the projects that connect into Axelar via these updates will the security be provided from Axelar or their source chain? how does that mechanism work
undefined says Hey guys can anyone help me with this transaction it‚Äôs been stuck for almost 1 hour
undefined says https://axelarscan.io/gmp/0xcb0736108eca2d7eb314f8ed8fafc97b271bdb4b4c9948d22b61a440a64027cd
undefined says @PJ
undefined says We are looking into this
undefined says Thanks
undefined says If you did not do a transaction via Satellite I'd suggest to just ignore the tokens.
undefined says It could be a malicious party spamming tokens for whatever reason.
undefined says My recommendation is not to interact with these tokens.
undefined says If the tokens just appeared on your wallet, there may be an attacker behind it.
undefined says Hey @Jason Ma | Axelar the transaction went through can you tell me why it took so long, so that I can explain it to my manager
undefined says We are looking into why it wasn't picked up
undefined says @everyone please got some error when i want to run npm install
undefined says `npm WARN cleanup Failed to remove some directories [
npm WARN cleanup   [
npm WARN cleanup     'F:\\Projet\\AxelarNetwork\\axelar-examples\\node_modules',
npm WARN cleanup     [Error: EPERM: operation not permitted, rmdir 'F:\Projet\AxelarNetwork\axelar-examples\node_modules\ganache\node_modules'] {
npm WARN cleanup       errno: -4048,
npm WARN cleanup       code: 'EPERM',
npm WARN cleanup       syscall: 'rmdir',
npm WARN cleanup       path: 'F:\\Projet\\AxelarNetwork\\axelar-examples\\node_modules\\ganache\\node_modules'
npm WARN cleanup     }
npm WARN cleanup   ],
npm WARN cleanup   [
npm WARN cleanup     'F:\\Projet\\AxelarNetwork\\axelar-examples\\node_modules\\@axelar-network',
npm WARN cleanup     [Error: EPERM: operation not permitted, rmdir 'F:\Projet\AxelarNetwork\axelar-examples\node_modules\@axelar-network\axelar-local-dev'] {
npm WARN cleanup       errno: -4048,
npm WARN cleanup       code: 'EPERM',
npm WARN cleanup       syscall: 'rmdir',
npm WARN cleanup       path: 'F:\\Projet\\AxelarNetwork\\axelar-examples\\node_modules\\@axelar-network\\axelar-local-dev'
npm WARN cleanup     }
npm WARN cleanup   ]
npm WARN cleanup ]
npm ERR! code 1
npm ERR! path F:\Projet\AxelarNetwork\axelar-examples\node_modules\@axelar-network\axelar-cgp-aptos
npm ERR! command failed
npm ERR! command C:\Windows\system32\cmd.exe /d /s /c run-s build
npm ERR! > @axelar-network/axelar-cgp-aptos@1.0.2 build
npm ERR! > run-s build-aptos
npm ERR!
npm ERR!
npm ERR! > @axelar-network/axelar-cgp-aptos@1.0.2 build-aptos
npm ERR! > ./aptos/build.sh
npm ERR! '.' is not recognized as an internal or external command,
npm ERR! operable program or batch file.
npm ERR! ERROR: "build-aptos" exited with 1.
npm ERR! ERROR: "build" exited with 1.

npm ERR! A complete log of this run can be found in:
npm ERR!     C:\Users\Danipro\AppData\Local\npm-cache\_logs\2023-03-13T14_48_14_746Z-debug-0.log`
undefined says Hey Axelar team, I got another bug in your documentation.
At https://docs.axelar.dev/dev/general-message-passing/gas-services/pay-gas#paygasforcontractcall the link to Testnet ( https://docs.axelar.dev/dev/general-message-passing/build/contract-addresses/testnet ) is broken
undefined says Hi people I'm the head of a near project and I was talking with another founder yesterday, we are interested in applying in your grant program
undefined says I had your website grants page opened but it seems to be disappeared so I'm here to ask if the program is still running
undefined says thanks, it should be migrated to this: https://docs.axelar.dev/dev/reference/testnet-contract-addresses. we'll fix
undefined says @Jake | Axelar you want to reach out to @jilt ?
undefined says we'll investigae
undefined says consecutive queries to kava RPC return different results. That's not very unusual for fast chains. We addressed it by adding a minor delay between consecutive calls to allow for all RPC nodes to sync up.
undefined says could you try the same thing here? https://discord.com/channels/770814806105128977/955655587260170272/1068811457594146846
undefined says Got it
undefined says Hello devs! Just a heads up, there's an outage on the moonbase RPC provider our backend services are using so expect some delay. GMP calls will be confirmed as soon as the issues are resolved. Will keep you up to date regarding the situation.
undefined says Moonbase issue is resolved. All pending GMP calls and transfers are completed.
undefined says @hereüëÜ
undefined says @br3 would this impact GMP in Aurora too?
undefined says Because I am trying to send a message and I am facing this weird error: https://explorer.testnet.aurora.dev/tx/0x750deb6977f0172dfb2821df28e014dc4e6a68961ea026dbadeb63eb74305118 
Error: (Awaiting internal transactions for reason)
undefined says Trying to submit the same transaction but now manually using Remix, I got this error message:
```transact to MerkletreeForNearAurora.insertLeaf errored: Returned error: {"jsonrpc":"2.0","error":"[ethjs-query] while formatting outputs from RPC '{\"value\":{\"code\":-32603,\"data\":{\"code\":3,\"message\":\"execution reverted\",\"data\":\"0xb5c74a27\"}}}'","id":4539292640289441} ```
undefined says My Smart Contract constructor is:
```
constructor(address gateway_, address gasReceiver_, address forest_) AxelarExecutable(gateway_) {
      gasService = IAxelarGasService(gasReceiver_);
      forest = forest_;
}
```
undefined says inside my method I am calling:
undefined says ```gasService.payNativeGasForContractCall(msg.sender, "ethereum-2", forest.toString(), abi.encode(trees[_treeId].root), msg.sender);

gateway.callContract("ethereum-2", forest.toString(), abi.encode(trees[_treeId].root));
```
undefined says As I want to use NEAR ETH to pay the message transportation
undefined says The gas service address is: 0xA2C84547Db9732B27D45c06218DDAEFcc71e452D
undefined says And the gateway address is: 0x304acf330bbE08d1e512eefaa92F6a57871fD895
undefined says hey @Jeff Prestes , aurora shouldn't be impacted by @br3 's note. your code generally looks fine so not sure but few things to clarify:
1. `forest_` is the deployed address of the AxelarExecutable you deployed on Ethereum? (wouldn't explain the above issue, just clarifying). 
2. can you try changing the first parameter of `payNativeGasForContractCall` to `address(this)` instead? (I think our services match up the the address of the contract invoking the method to the key used to determine who paid the gas). 
3. i believe you actually need to specify a value for `payNativeGasForContractCall`. So i'd make sure your method is payable and change its invocation to `gasService.payNativeGasForContractCall{ value: msg.value }`
4. only other thing i'd think of is whether the merkle root is correctly encoding to bytecode. if the above 3 won't work, we can debug with you if you want to share your source code github.
undefined says 1 A: Yes. It has the AxelarExecutable on Goerli network
undefined says 2A: I would like the transaction sender pay for the message transportation. If I apply this change, the origin Smart Contract would be charged, wouldn't it?
undefined says 3A: Good point. I will change it.
undefined says 2A. yeah the transaction sender will still pay for the fees (they pay the contract and the contract pays the gas receiver). the change is just in the way it's keyed on the services. actually, it may be ok to leave as you have it but i've only seen it with the contract address
undefined says I will change it. But a question: is there a way to know previously how much the GMP will cost in Near Aurora ETH ? Because reviewing the code now, I need to send funds along with the transaction. Am I right?
undefined says yes, you're right... only if you want our automated services to execute the tx across the full pipeline.

re: amount of fees - check this out in our docs: https://docs.axelar.dev/dev/axelarjs-sdk/axelar-query-api#estimategasfee. it's a javascript method [so... not on-chain üò¶ ] that takes the route of your call as params and gives you the upfront amount (in wei) of the entire cost of the transaction. the fourth param of the method is the gasLimit, which represents the amount you expect it would take to execute your `forest_` executable contract on Ethereum (and if a gasLimit isn't passed in, it defaults to 700K gas)
undefined says Hmmm... But I need to use Go (golang). It's our stack.
undefined says You should have an API for this I suppose.
undefined says An alternative, would be to send a higher value, then it would cover the fee costs but do you refund not used value? Let's say I send 2000000 but it actually cost 1500000, would gasService returns to me 500000 ?
undefined says yeah, rather than baking this into a js snippet, we can build it into an API query instead. 

for now, yes any gas paid that is unused is indeed refunded to the payer
undefined says Well.... we moved one step further. This is great: https://testnet.axelarscan.io/gmp/0x221edc5aeef368d0b65022ca93308b7a988b71c45258a56a763ebbdd69c4cfc7
undefined says However I need to send more gas or you help me to find the Axelar gas fee using Go or Solidity @Canh T
undefined says nice!
undefined says so on the axelarscan page, if you switch the chain to aurora, there should be an "Add Gas" button you can press to directly add from ur metamask
undefined says Ok, for a single it works but I need to do this programatically
undefined says altho 37 ETH seems bonkers... i'll have to study with the team why that figure is so high
undefined says Ouch....
undefined says yeah i'll see if we can prioritize the api-driven method insetad
undefined says in the meantime would u be open to deploying/testing on another evm chain as well (avax/polygon) with cheaper gas?
undefined says The problem is our product needs to use Near Aurora. For Polygon we already use their FX Portal to bridge.
undefined says Unfortunately, if I can't use you because of the gas fee estimation lack of API I will have to try Hyperlane or Layerzero
undefined says gotcha... i've flagged the high fees w/others in the team. and we'll prioritize the api
undefined says ok hot off the press @Jeff Prestes we just wrote this wrapper api on the method. will add to docs but here's what it looks like:
* api: https://nest-server-testnet.axelar.dev/estimate-gas-fee
* body: 
{
    "srcChainId": "aurora",
    "destChainId": "ethereum-2",
    "srcChainTokenSymbol": "aETH",
    "gasLimit": 150000, //this is optional
    "gasMultipler": 1.0 //this is optional
}
undefined says FYI, GMP calls from Goerli will be delayed due to an ongoing upgrade there. Goerli validators haven't achieved epoch consensus yet:
https://goerli.beaconcha.in/
undefined says @Axelar Builder @here ICYMI: Following the announcement of Axelar's Virtual Machine during the Interop Summit, we would love for you to be the first ones to test it out and play around with the features!

If you're interested in signing up for early access, please fill in the form here: https://docs.google.com/forms/d/e/1FAIpQLSelkIlFFucMEUvXepoPmtRuySwNaVt_IT8S97s55GJSKjo9eg/viewform?usp=send_form
undefined says hey @Canh T, how you doing

i think you missed this message of mine.
undefined says GM Builders,

Please register your source and contract address. If you create a PR in this repo, this will help you label your contract for Axelarscan. (works for both testnet/mainnet):

https://github.com/CoinHippo-Labs/axelarscan-ui/blob/main/data/accounts/index.js
you can add their logo here to link to it:
https://github.com/CoinHippo-Labs/axelarscan-ui/tree/main/public/logos/accounts
undefined says Thank you @Canh T and Axelar team. I will try it today.
undefined says Unfortunaly, @Canh T and @Axelar Network , it is not working anymore.
When I perform a POST request to https://nest-server-testnet.axelar.dev/estimate-gas-fee it is returning 
```
<p>You do not have access to nest-server-testnet.axelar.dev.</p>
<p>The site owner may have set restrictions that prevent you from accessing the site.</p>
```
undefined says üò¶
undefined says hmm, try again? we just made a config change
undefined says ok
undefined says Endpoint worked, @Canh T . 
Thank you very much!!!
However, it's a very high value: 93 ETH . It is impossible to test. I can't get enough Near Aurora ether
undefined says can you send me your payload? (i made a slight modification fo what i sent you yesterday.. the payload i had yesterday erroneously had "AURORA" as "srcChainTokenSymbol" lol). 

{
    "srcChainId": "aurora",
    "destChainId": "ethereum-2",
    "srcChainTokenSymbol": "aETH",
    "gasLimit": 150000, //this is optional
    "gasMultipler": 1.0 //this is optional
}
undefined says Yay! Now it seems to bring a feasible value. Thanks, @Canh T . Now I will try to submit the transaction.
undefined says Well.... Now it seems to reject the value I've got from the API. 
API returned to me: 4522456269564876
undefined says And I submitted the transaction with this value but the transaction is being rejected üò¶
undefined says @Canh T and @Axelar Network , is there a way you to check why your Smart Contract is rejecting it?
undefined says hmm, can u send me the failed aurora tx? we dont see it on axelarscan
undefined says Unfortunately I can't. I am using GETH libs, it calls eth_estimateGasFee prior to submit the TX to the network node. So, if it would be reverted we get this before the TX to be included into network transaction pool.
undefined says What I may try to get is the RPC call. Then you will see my payload.
undefined says cool, we can also take this offline if you want me to send u a DM. 

from your code snippets above, the only other thing i can think of is whether there are issues with how your root data is encoded to bytecode
undefined says Hey Everyone - We want to hear from you! We're gathering feedback on the Axelar brand and want to make sure we're capturing the developer perspective!  Please take 5 min (or less) to complete this survey (https://docs.google.com/forms/d/e/1FAIpQLSc7sLWDKw_wAzDdDlffnRDAwUde51XTYvTbe7yNkOL33b_Z2A/viewform?usp=sf_link). I'll close it up this coming Friday evening (ET). Thanks in advance!

One lucky winner will receive a black Axelar windbreaker, a T-shirt and a Lego Lambo! We're selecting randomly so please be candid in your feedback!
undefined says https://axelarscan.io/gmp/0xbabf8125b1b53aed6187a5b6fd4d579078aef5b1a1a0ef43bbc81438058dcfa9
undefined says Guys this tx is pending for 10 days, please clear it from the backend
undefined says Pinned a message.
undefined says Thanks, I've forwarded it interally.
undefined says Hey all, can I connect an hyperledger besu private blockchain to ethereum with axelar? Thank you
undefined says Hello @Canh T . GM! GM!
So, there goes the payload of TX:
network: aurora testnet
contract address: 0xaf9c4302c2b08b8c531a0b276c162bd2b292244e
Function source code:
```
    function insertLeaf(bytes32 _treeId, uint256 _leaf) external {
        require(
            trees[_treeId].depth != 0,
            "IncrementalBinaryTreeTest: tree does not exist"
        );

        trees[_treeId].insert(_leaf);

        gasService.payNativeGasForContractCall(msg.sender, "ethereum-2", forest.toString(), abi.encode(trees[_treeId].root), msg.sender);

        gateway.callContract("ethereum-2", forest.toString(), abi.encode(trees[_treeId].root));
        
        emit MessageSentToRoot(abi.encode(trees[_treeId].root));

        emit LeafInserted(
            _treeId,
            (trees[_treeId].numberOfLeaves - 1),
            _leaf,
            trees[_treeId].root
        );
    } 
```
JSON-RPC method: "eth_sendRawTransaction"
Raw Input: ["0x7385d0470000000000000000000000000000000000000000000000000000000000000001234545a8d009fbc4901100a2b79835a5e912ba973018377779956a9f3144209e"]
undefined says About the root data, it is a uint256 value. And I encoded with `abi.encode(trees[_treeId].root)` with no problem when I send info inter/crosschain using Polygon FX Portal and Hyperlane. Of course, I can be wrong but I don't think this might be the problem.
undefined says ok we'll look into this. will have to study with the team. r u willing/able to share ur contract code github? will help us test locally
undefined says Our repo is pvt I can't give you access but I can share the SC code in here:
undefined says 
undefined says Poseidon Hash contract in aurora testnet is at: 0x9B231D6715fF23921E7Bf780Ace7BE5516693E6A
undefined says I received the onboarding email, please add me to the AVM channel
undefined says thanks for the code. some quick feedback:
1. `insertLeaf` should be a payable function to accept ETH. `function insertLeaf(bytes32 _treeId, uint256 _leaf) external payable{`
2. the first parameter of `payNativeGasForContractCall` should be `address(this)`. the user invoking `insertLeaf` still pays for the gas, but since the contract call to the gasService is coming from this contract, it should be keyed that way in order for our automated services to run it through the pipeline. 
3. this code still doesn't pass in a value to the gasService, so it needs to be `gasService.payNativeGasForContractCall{ value: msg.value }(address(this), "ethereum-2", forest.toString(), abi.encode(trees[_treeId].root), msg.sender);`

will have a moment later to try and run this locally if needed but this is what sticks out so far
undefined says I received the onboarding email, please add me to the AVM channel
undefined says Welcome! Check out the #üí≠‚îÇaxelar-virtual-machine channel for next steps üôÇ
undefined says Fresh off the press. You can now make a token interoperable on all EVM chains supported by Axelar in a few clicks.

Please share and spread the word The Interchain Token Standard is coming!

https://twitter.com/axelarcore/status/1636467744236531712?s=20
undefined says Hey y‚Äôall üôÇ been doing some testing on the testnet, trying to initiate a sendToken transfer of aUSDC from polygon to osmosis-5. I‚Äôm having a rather opaque issue revert the EVM transaction that I believe is rooted in the call to tokenAddresses on the gateway for ‚ÄúaUSDC‚Äù returning a null address. Any advice?
undefined says I can confirm with calls directly to tokenAddresses that this is the case
undefined says And perusing the source for the gateway, I see that the first thing it does is fetch the token address for the symbol and revert if it‚Äôs not present.
undefined says Anyone @here looking to learn more about the Interchain Token Standard from a technical perspective here's some resources to check out!

:axelar: Docs: https://docs.axelar.dev/dev/send-tokens/interchain-tokens

:axelarblue: Testnet: https://testnet.services.axelar.dev/interchain-token

As always, drop all your questions here! Happy testing :Shakehands:
undefined says We'll get you some help w this! It's later for some of the team so the answer may be a bit slower than usual üòÖ
undefined says No worries, I probably won‚Äôt be looking at it again til tomorrow morning (EDT). Thanks!
undefined says are you querying the right gateway contract (0xBF62ef1486468a6bd26Dd669C06db43dEd5B849B)? the query i make to polygon mumbai on the block scanner are just fine:
undefined says I believe I am! I will confirm in the morning.
undefined says Well I suppose that suggests I‚Äôm not. Will let you know, thanks!
undefined says Pinned a message.
undefined says Thanks for the feedack @Canh T . I really messed up the concepts of gasPaymentService on origin chain tokens or with later payment offchain. I will make the changes and test it again.
undefined says Hey @Canh T , just giving a positive feedback: your suggested changes worked and we move forward: https://testnet.axelarscan.io/gmp/0x4edfd1c93afa13f59704f569b176ba18a1302309cd9f954b213d5228aecda783
undefined says Now it says that was not sent enough gas. How do I calculate it? Is there any parameter at gasService where I can put this info? 
For example, in Hyperlane we inform the gas amount we want to use. What's the procedure here at Axelar?
Thank you one more time @Canh T
undefined says Argh... nevermind.... now it says it was executed: https://testnet.axelarscan.io/gmp/0x4edfd1c93afa13f59704f569b176ba18a1302309cd9f954b213d5228aecda783
undefined says üôÇ
undefined says Great news!

If you know the amount of gas on the dest chain required to execute your contract, you can actually input that in the `estimate-gas-fee` API from before: 

{
    "srcChainId": "aurora",
    "destChainId": "ethereum-2",
    "srcChainTokenSymbol": "aETH",
    "gasLimit": 150000, //this is optional
    "gasMultipler": 1.0 //this is optional
} 

on your axelarscan link above, i manually executed and see that your tx used 118K gas. https://goerli.etherscan.io/tx/0x0eda14506d5d6e7613e72a8ef21f3bd69d69b54c19cb0692a91d68376006c7d7. you can play around with the `gasLimit` and `gasMultiplier` params here to get the right amount of gas you pay on the source chain. it might be a good idea to bump these higher to increase "execution certainty", e.g. some of our partners use a gasMultiple of upwards of 1.5-2x given volatility of gas prices on some chains (though you'll be refunded later for whatever isn't used).
undefined says no that was me... i manually executed your transaction for the final step from the axelarscan UI
undefined says I received the onboarding email, please add me to the AVM channel
undefined says Hi, what happens when a tx fails on destination chain?
undefined says How is the gas paying process??
undefined says I received the onboarding email, please add me to the AVM channel
undefined says In terms of gas, when a TXN fails on the dest chain, any excess gas is repaid minus the relayer fee, you can read more here: https://docs.axelar.dev/dev/general-message-passing/gas-services/refund
undefined says Also @Axelar Builder some quick updates for you!

üìç Ethereum relayer fees on Satellite have been reduce to $15

üìçGMP fees are now dynamic

Enjoy your weekend!
undefined says Hi, 
I wonder if it is possible to **add some cosmos chains to the Axelar-examples** like:
- **Evmos **(EVM Compatible)
- **Juno**
- **Secret Network**
- ...

I myself am interested in Secret Network and would like to try privacy combinations with other chains.

For example, is it possible to add a connection to a local Docker instance of Secret Network to the chain-config somehow, or create a separate cosmos-chain-config if necessary?

Do you know if this is possible @StephenFluin ?
undefined says hello, is there any technical documentation / technical talks regarding the axelar virtual machine?
undefined says web app
undefined says https://github.com/axelarnetwork/axelar-web-app this one
undefined says I‚Äôm reading how to send tokens. Are there docs on how to native coins like ETH, MATIC etc without wrapping them? 

https://docs.axelar.dev/dev/send-tokens/overview
undefined says I think there are no docs published yet but this article gives an overview of the AVM https://axelar.network/blog/axelar-virtual-machine-future-of-interoperability

If you're interested in signing up for early access to the AVM, please fill in the form here: https://docs.google.com/forms/d/e/1FAIpQLSelkIlFFucMEUvXepoPmtRuySwNaVt_IT8S97s55GJSKjo9eg/viewform?usp=send_form
undefined says hey we can sign tx from wrap to unWrap tokens and vice versa
undefined says Ah as part of my debugging process, I think I was not querying the upgradeable proxy and querying a sub-contract directly. Going back to the proxy, everything seems in order üôÇ
undefined says Is there a better way to track (historic) validator commissions and delegator rewards? Currently I am thinking about tracking our MsgWithdrawDelegatorReward events and extrapolate between pairs of events, but that seems clunky
undefined says Tagging our DevRel lead @StephenFluin here for visibility!
undefined says Hello. 
I am a senior web and blockchain developer with high skills and rich experience in building web and blockchain application. 
Please let me know if you need my service. 
I have experienced in 
    - Frontend(React, Vue) 
    - Forking Uniswap/PancakeSwap 
    - DEX/DEX Tools/Trading Chart 
    - Staking/Farming 
    - NFT Marketplace/Staking 
    - Launchpad(pinksale) 
    - Trading Bot on EVM, Solana, Hedera... networks. 
Feel free to dm and ask questions.
undefined says Replied in #üîó‚îÇgeneral
undefined says Dear devs. Been playing with Axelar for a few days. 
Was wondering, when i run axelar-local-dev, export a network. Can i then use the js-sdk? If yes then how can i connect the js-sdk to my local networks
undefined says Querry API part
undefined says Thanks for the tip üôÇ
undefined says As we continue to work on cosmos GMP, this code will get integrated into our axelar-examples repo. For now you can check out https://github.com/axelarnetwork/evm-cosmos-gmp-sample.

What are your hopes for other EVM chains in the examples repo? From a technical standpoint they are just names and can represent any chain that is EVM compatible. Especially ones that we don't support on mainnet for GMP? https://docs.axelar.dev/resources/mainnet
undefined says Yes you can. You can see a local environment option here: https://github.com/axelarnetwork/axelarjs-sdk/blob/eaba948b124cfd263e30cf5e05a0e4e3b906e9e7/src/constants/index.ts#L65. but most of the time we just pull the data from testnet even when doing local development. here's an example of how we use the query API https://github.com/axelarnetwork/axelar-examples/blob/69b3143101132b4448e5877c4bded4dbef01ce21/examples-web/src/helpers/send-tokens/getTransferFee.ts
undefined says Ok thanks for the reply
undefined says Hi @StephenFluin,
I am primarily interested in being able to develop locally with Axelar using a few Cosmos based chains such as Cosmos itself or Secret Network.
For example, I would like to be able to run GMP (locally via axelar-local-dev) from Ethereum to my local Secret Network instance (Docker).

Is this currently possible in any way or do I have to go via testnet by force?

And thanks for your reply üëç üòÄ
undefined says I'm not aware of any environment that has the gateways needed for Axelar to work with secret network (I might be missing this) but the closest would be our cosmos work https://github.com/axelarnetwork/evm-cosmos-gmp-sample or Aptos work https://github.com/axelarnetwork/axelar-examples/tree/main/examples/aptos where you can see how we spin up multiple Blockchain environments and get them to communicate locally
undefined says When I see this, it means that I cannot send WBNB to Ethereum/Polygon or other chain?
undefined says It only means that I can implement an `_execute` in BNB that can perform some operations if it has WBNB balance?
undefined says I am trying to understand more about the Axelar virtual machine and I thought I should ask here since I can't find technical documentation. I read the introduction article but I am still confused about how it can actually be used by developers. I do understand how the Interchain Amplifier and Maestro are useful but why was the Axelar virtual machine required for those tools to exist? I think I do not understand what enabling developers to "program interoperability" means here. Apologies if my question is dumb üôÇ 

Can you also give me some examples about what projects the Axelar virtual machine enables?
undefined says How do I convert axlUSDC to local chain USDC ?
undefined says Hello! This is what the team is working on this. Documentation as well as code and tools will come in the future.
undefined says Yes, you are right WBNB is not available on the Ethereum/Polygon chain
undefined says Do you mean convert axlUSDC for example to Polygon USDC token?
undefined says Yes! For example, I have USDC in ETH and want to receive USDC in AVAX.

What are the precise steps to convert USDC to axlUSDC in ETH?

I know that, then the contractCallWithToken uses axlUSDC, and it arrives in destination chain though gateway, and I receive axlUSDC in AVAX.

Then how do I convert axlUSDC in AVAX to native USDC in AVAX? Or I depend on local DEXes like Pangolin to have enough liquidity of axlUSDC to swap to another token ?

My true goal here is to be able to convert USDC from ETH to another token in AVAX, but I have to convert axlUSDC to a currency with more liquidity first
undefined says As far as I understand, this methodology is only available in testnets:

https://docs.axelar.dev/dev/general-message-passing/example-composable-usdc
undefined says hello, where can I see all the nodes that are running on AXELAR?
undefined says Feel free to use https://axelarscan.io/validators
undefined says This gives an overview of all active validators and the nodes that are no longer active.
undefined says ---
Also an important update for all developers:

üîµ ICYMI: Base is now live on Satellite's testnet!

You can check it out here: https://testnet.satellite.money/?source=base&destination=axelar&asset_denom=uaxl&destination_address=

Happy testing!
undefined says -> announcement link is here: https://discord.com/channels/770814806105128977/799299951078408242/1086717400013082654
undefined says :816456169920004137: A reminder that registrations for BNB Chain's Zero2Hero Hackathon are now open! :816456169920004137:

üóìÔ∏è  Registrations will be accepted from March 6 to April 16 and the hackathon will run from April 17 to May 14. 

:826852331253530624: Sign up today and compete with the best in the industry!  

üîó https://www.bnbchain.org/en/blog/bnb-chain-zero2hero-hackathon-registration-now-open/
undefined says Error HH411: The library @Axelar-network/xcm-solidity, imported from contracts/count.sol, is not installed. Try installing it using npm.
undefined says I am having this error
undefined says Where are you downloading this from?
undefined says I got a question XCM is not part of axelar modules ?
undefined says XCM is Polkadot's cross-consensus messaging format
undefined says You can see all of the supported chains here: https://axelarscan.io/
undefined says Sure
undefined says What are you trying to do? Can do our best to help find a solution
undefined says We are actually building cross chain voting on bnb with axelar
undefined says But before that I‚Äôm trying to build counter app to see how axelar works
undefined says What‚Äôs the speed of communication between blockchains
undefined says Average blocktime currently is ~ 6 seconds: https://axelarscan.io/blocks
undefined says Have you had a read through the docs?
undefined says Yes but I‚Äôm still going through everything
undefined says Hi, I'm a Software Engineer with a background in fintech and data processing, blockchain technologies. My experiences range from creating/leading both front-end web applications to backend architecture design & implementation, smart contract development, testing & development of web applications for Fintech and other industries. I have worked with a number of startup companies. I know my industry well and always take a lead in work. I will always have interesting solutions for your project with the latest industry trends. 

Technical Skills; 
- Javascript Programming: Javascript, TypeScript, React.js, Angular, Vue.js, Node.js, Express.js, 
- PHP Programming: Laravel, Symfony, WordPress, 
- Python Programming: Python 3, Django, Flask, Pandas, 
- Frontend Programming: HTML5, CSS3, Bootstrap, Material UI, 
- Databases: MySQL, Postgres, MongoDB, 
- Smart Contracts: Solidity, Rust, 
- Web3 Technologies; Web3.js, Ethers.js, Solana/Web3.js, CosmJS,
- Cloud Services: AWS, Firebase, Heroku, Azure

Looking for full-time/part-time Web and Blockchain developer positions now.
Please ping me when you are in need of more developers for your particular project.

Best Regards!
undefined says Check out https://axelar.network/careers for any open roles that might fit you!
undefined says @Axelar NetworkHello Axelar Team, I am the Project Director for YSL.IO glad to meet you. I am reaching out since we would like to have our tokens bridged from BNB Chain to Arbitrum and we heard that your have a testnet running for this purpose, and that you will be having a mainnet in the future hence why we are exploring the possibility to utilise your tech for this. Can you put me in contact with the correct person in order to accomplish this? thank you in advance. Best Regards
undefined says The mainnet is currently live, what information are you looking for specifically?
undefined says we would like to use your tech to have our tokens bridged from BNB Chain to Arbitrum, so its there someone specific that i need to talk too?
undefined says you can use the interchain token for this. live on testnet & shortly on mainnet. https://twitter.com/axelarcore/status/1636467744236531712
undefined says semd me some AUSDC PLEASE 0x6B89EF59A5353590cf48f1DD70cd7bD5F3666723 .Fauce dont send now
undefined says thank you I¬¥ll share with the devs and comeback if we have further questions
undefined says Sorry, faucet's replenished now. Sent some aUSDC: https://goerli.basescan.org/tx/0x7715243df8b8a6cf3ecfb03a9575469878791fd9d71781f869818abd4488498f
undefined says Can someone send me a few aUSDC to my ethereum goerli adress? Want to test out the bridge to base. 0xc5135d008c1fb7B4554255eC4d82cDB37DDD8A09
undefined says Please use #üíß‚îÇfaucet for the faucet!
undefined says looks like faucet not working
undefined says I am waiting for 30min and didnt receive aUSDC
undefined says The faucet bot sends a transaction link, check what the status of the transaction is in there. It may be slower than usual for some reason.
undefined says https://testnet.axelarscan.io/transfers/search?depositAddress=axelar1dj5928349f048v6pcvy5pufldnasrrs8xn65vrqjd04ewm8d60dspynjxx
undefined says looks ok the transaction , but no aUSDC
undefined says sort it. thanks. my bad
undefined says Great, no worries!
undefined says where i can get usdc on goerli eth?
undefined says Faucet aUSDC not received
undefined says The faucet may  need to be replenished or transactions taking longer because of the large demand.
undefined says The bot will send you a txn link. Please check this link to see what the status is of your txn.
undefined says I believe you will have to request from one of the available faucets, I am not aware of a usdc (goerli) faucet in here, unfortunately.
undefined says Quick question following up on this do you have documentation to aid us in the process to make this happen on the testnet? thank you!
undefined says https://discord.com/channels/770814806105128977/955655587260170272/1086059278202310728
undefined says I have a question about the interchain token mechanics. When you make the token available on other blockchains, so going from BSC to ETH, it creates a separate contract right? 

and if so would I still be able to make changes to the contract on ETH without affecting the contract on BSC? 

I.E.: If the token has a tax feature that auto adds liquidity to the BNB-Token LP. 

Would I be able to change the ETH contract that Axelar generates to auto add liquidity to ETH-Token LP?
undefined says hello guys I love this tech my question is if we can be able to use it on mainnet or still only available for testnet?
undefined says Are you refering to Axelar or Axelar's AVM?
undefined says AVM is not yet accessible to the public but you can sign up for early access.
undefined says If you're interested in signing up for early access to the AVM, please fill in the form here: https://docs.google.com/forms/d/e/1FAIpQLSelkIlFFucMEUvXepoPmtRuySwNaVt_IT8S97s55GJSKjo9eg/viewform?usp=send_form
undefined says the transaction was processed for a very long time
undefined says This is due to cross-chain services having to wait for transactions to be finalized on the source blockchain to prevent the risk of the tx being reorged. As an L2, Base testnet requires tx to be finalized on Goerli, which takes around 15 minutes.
undefined says Feel free to use #üìã‚îÇquestions-feedback as this channel is for dev discussions.
undefined says Apologies for the delay- getting you an answer for this!
undefined says DeclarationError: Undeclared identifier.
--> contracts/crosschain.sol:179:33:
|
179 | bytes memory response = callContract(address(axelarGateway), data);
| ^^^^^^^^^^^^
undefined says I am having this error
undefined says Hey! Yes, to answer your question, developers manage their contracts on different chains independently. 

For the Interchain Token Standard, the idea was to deploy remote contracts that would act as your remote ‚Äúmetamask‚Äù on that chain without you having any gas token for that chain.

Hope this helps! More docs and resources on this are coming soon. Did you catch the tutorial we put out on this?
undefined says Cross posting from the #üö®‚îÇupdates channel: 

:alert: ICYMI: Learn how to use the Interchain Token Standard to turn an ERC-20 compliant token into an Interchain Token!

:axelarblue: In this demo we show you how to register your token as an Interchain Token and deploy it cross-chain to multiple blockchains, using the Remix IDE & the Interchain Token Portal for testnets.

üîó https://www.youtube.com/watch?v=6yoW7in16Ks
undefined says Getting you some help!
undefined says Repost from @caradory  here in the developer channel: https://discord.com/channels/770814806105128977/1047184634179498125/1090368613623545937
undefined says Hi,
I have a question about GMP in the context of cosmos-based chains. Is the following assumption about the flow (Two-way example: send back, somewhat simplified) correct, that on the cosmos side IBC is used instead of a gateway contract?
undefined says Maybe a question for @StephenFluin
undefined says Hey, here's an example of how to use `callContract` to avoid the error:
https://github.com/axelarnetwork/axelar-examples/blob/main/examples/evm/call-contract/ExecutableSample.sol#L36
undefined says Yep, that's correct. We don't need a smart contract gateway since Axelar connects to Cosmos chains via IBC. The payload/message is sent inside the memo field of an IBC transfer
Examples can be found here: https://github.com/axelarnetwork/evm-cosmos-gmp-sample
undefined says Is this part of a research project or something we can keep a line open to help with?
undefined says Hi,
I am currently working on a talk on how to include Privacy (via Secret Network / Cosmos) via Axelar in other Chains / dApps. For this I want to better understand GMP and its possibilities in the Cosmos Ecosystem. So e.g. using Secret NFT (contains encrypted data) in the context of e.g. an Ethereum app to store and process protected data on-chain.
undefined says Nice! May I ask if this is for an upcoming conference or event? I‚Äôll be at the ETH Privacy event at the end of next month. 

Happy to answer all your questions here and support in any way we can!
undefined says I will try to attend ETHdam, but the talk is for another conference. I'll DM you for questions üòÄ
undefined says Best to DM this account since it's open to messages- feel free to drop them here too so others can learn!
undefined says Reposting here from Sergey's tweet on appchains vs shared blockchains:

> Here's a simple framework to help devs think on where to build: 
> 
> 1Ô∏è‚É£  If you don't know what you're doing / don't have a product-market fit -- launch on a single chain that meets your needs [liquidity, users, tech stack, gas fees]. 
> 
> 2Ô∏è‚É£  If you have a product-market fit and looking for scale & growth, launch on all chains. 
> 
> 3Ô∏è‚É£  If you're so popular that you can't afford bad UX during peak hours on shared environments, or want to innovate in user onboarding journeys -- control your own stack by launching an appchain & connect it with all others. 
> 
> I think this (simplified) model should cover 90% of dev journeys.

:5385twitter: https://twitter.com/sergey_nog/status/1640740085149605890?s=46&t=e7yfEP7AsUOK6ns473IHTw
undefined says Is the interchain tool only available on the testnet?
undefined says That's correct, here's some more links to get started: 

:axelar: Docs: https://docs.axelar.dev/dev/send-tokens/interchain-tokens

:axelarblue: Testnet: https://testnet.services.axelar.dev/interchain-token
undefined says Thanks. Looking forward to your mainnet launch.
undefined says We are building Connexagon, which allow users to participate in voting process that involves multiple blockchain networks.
undefined says DeclarationError: Undeclared identifier.
--> contracts/crosschain.sol:179:33:
|
179 | bytes memory response = callContract(address(axelarGateway), data);
| ^^^^^^^^^^^^
undefined says Maybe I‚Äôm missing one more parameter? Destination address
undefined says GM, does Axelar support the generation of deposit address for Polkadot and wrapping of the same to support EVM compatibility kindly, thanks  @Rok | QubeIabs , @Axelar Help  kindly
undefined says Not really, just wanted to ask if its possible to create a functionality in my application that generates a polkadot deposit address and after a user deposits it gets wrapped and stored with other erc20 tokens for other smart contract execution instructions thanks
undefined says kindly
undefined says Tagged the wrong person üòÖ  apologies!
undefined says Hey, did this help troubleshoot? https://discord.com/channels/770814806105128977/955655587260170272/1090636992116707338
undefined says üòÑ No worries, now that you did can you kindly help me. I would appreciate
undefined says Wrapped DOT is a supported asset on Moonbeam: https://docs.axelar.dev/resources/mainnet

You can also see the deposit address flow here: https://docs.axelar.dev/dev/axelarjs-sdk/token-transfer-dep-addr
undefined says and so its possible for Axellar to convert DOT into Wrapped DOT?
undefined says Axelar supports xcDOT in ERC20 form on Moonbeam
undefined says Thanks
undefined says Successfully claimed ausdc
undefined says Lost the connection
undefined says Happy to help troubleshoot your usecase and find solutions!
undefined says @Axelar Builder The Axelar Testnet will undergo an upgrade to `v0.33` starting on `Monday April 3rd, 2023` at 12:00PM Eastern Time (`4:00PM UTC`) for approximately 2 hours. This release includes general bugfixes and improvements to Cosmos <-> EVM General Message Passing, such as the ability to pay gas as part of the Cosmos GMP call. During this time, testnet versions of the Axelar Network, Satellite, token transfers, and General Message Passing will not be available. Node upgrade instructions will be provided prior to the upgrade.
undefined says I am trying to deploy new ERC-20 on ETH and Polygon but it is getting deployed only on ETH, no trace of failed transaction. I tried to add using "Deploy on more chains" but it is stuck on this page for so long
undefined says Hey- can you send us the TXN ID on axelarscan?
undefined says https://testnet.axelarscan.io/gmp/0xeb489ee6f3113aa2c16b1677374b9c4f0b69978db48d3ea1ca617d0291d313c8:64
https://testnet.axelarscan.io/gmp/0xeb489ee6f3113aa2c16b1677374b9c4f0b69978db48d3ea1ca617d0291d313c8:61
undefined says HI , I want to transfer uusdc from OSMOSIS to CRESENT , i use JS-sdk to code .
after i get the axelar1XXXXXXX address,  how should i sendtokens ? 
should i send a IBC tx message ???
undefined says My question is, since I have obtained the deposit address (starting with alx) through the API, and the source chain I'm using is Osmosis, does this mean that I still need to send an IBC token transaction from Osmosis?

If so, does it mean that after this address receives my IBC token, it will automatically send the token to the destination address (such as the CRE chain) without me needing to send another IBC token message to transfer from the alx address to CRE?
undefined says I found that the address generated by getDepositAddress is different every time. Is this address one-time use only, or can it be used repeatedly? Is there a time interval limit if I need to use it repeatedly?
undefined says Could I ask whether it is possible to query a value from a contract on a different chain using Axelar? 

From what I've read, it seems like it is only possible to pass a message to a contract on a different chain, but it doesn't seem possible to get a message back from that contract
undefined says @Technical Moderator can we look into this
undefined says I have been trying 2-way call and every time had to add the gas to the 2nd call, is there any way to do it right away?
undefined says How do I get the symbol to pass into CallContractWIthToken from a given token's contract address?
undefined says @StephenFluin  or anyone who knows. Fantom to Polygon and back
Still pinging (from the workshop) about the 2-way. Running my 3rd transaction using `evm/send-ack` script and running into the same issue of manual gas addition on the way back 

 https://testnet.axelarscan.io/gmp/0x5e7f72f2d6face7c33585bcfb4345adc66acd434d2ed9a2a9067c6c87478d15f
undefined says and this is the 2nd part (way back)

https://testnet.axelarscan.io/gmp/0x42ad4c4fba3861d5723d4f8c140854831d384a5ada66b273245b451e3a2f2b65
undefined says ` const feeRemote = await calculateBridgeFee(source, destination);`
` const feeSource = await calculateBridgeFee(source, source);`

Found the reason, Polygon gasEstimation is the reason, so the `calculateBridgeFee` does not calculate enough.
undefined says do I have to pay gas to do a cross-chain query?
undefined says Hello
After executing the `axelar-examples: call-contract-with-token` the balances are not getting reflected in `npm run check-balance`. Is this the expected result?
undefined says Hey all- apologies on the delay, we'll get some folks from the engineering team to hop and and help out here!
undefined says Started a thread.
undefined says Are there any office hours(similar) for Axelar?
undefined says How long does it take to send tokens from the bridge?
undefined says Transfer via satellite is usually fast. Within 5 minutes, tokens usually arrive exactly at the recipient's address.
undefined says Is it possible to deploy the same ERC721 contract on chain A and chain B; then on Chain A if the user mint token Id 25, is it possible to bridge but convert token id 66 on chain B?
undefined says Not currently but it's on the list of programs we're looking to roll out!
undefined says Hope everyone @here is enjoying their weekend!

:axelarblue:  Next in our @Axelar Builder series, we have a tutorial on Bridging Your Tokens On-Chain  :axelar: 

üîÄ Learn how to go beyond bridging by  instead integrating Axelar‚Äôs secure sendtoken function into your dApp for seamless UX and secure cross-chain transfers ü¶æ

üîó https://www.youtube.com/watch?v=pCd_ZqZ93uQ
undefined says Responses will be slower over the weekend but we'll get you an answer on this!
undefined says im trying to clone axelar-examples but its giving a lot of errors. anyone have any luck with it?
undefined says this happens when im trying to npm update or npm install
undefined says 
undefined says How can I get axlWETH in testnet?
undefined says Hello, I am trying to run the web-example app and I am getting the following error after trying to access the nft-linker page.
undefined says 
undefined says I also noticed that within the nft-linker react page, it tries to fetch chains.json file which doesn't seem to exist in the repo and from github, the file is listed under .gitignore.
undefined says I've tried few ways to include testnet & local json files that contains contract addresses and it was unsuccessful.
undefined says Hello, I'm also running into issues working with the web examples. Specifically this during hardhat compile when trying to "npm run deploy"
undefined says Yes, cross-chain queries with Axelar are performed on-chain (a GMP message from source to destination, and then another message from destination to source). Each direction will require a native gas payment for the transaction.
undefined says Thanks for debugging a little bit to find that the `calculateBridgFee` is the problem, which uses our SDK which means there's likely a problem in our service. Can you file an issue here and we can use this to follow-up? https://github.com/axelarnetwork/axelar-examples/issues/new As a workaround, you could just add a multiplier or add a fixed amount to each transaction that is failing, it should all get refunded so overfunding shouldn't be a problem.
undefined says This address can be used repeatedly, but it's temporary (less than 24h), and you pay the fee as part of every transaction. Check out https://testnet.satellite.money/?source=osmosis&destination=secret&asset_denom=uausdc to understand how to use the deposit address (this site uses the API so you can see how it's working). It will generate an address that is valid on the source chain, and then you can initiate a transaction using Keplr to see what the transaction will look like. (It will likely be an IBC transfer).
undefined says The easiest way to find the canonical name is to look for the asset in the Axelar docs. https://docs.axelar.dev/resources/testnet#assets https://docs.axelar.dev/resources/mainet#assets
undefined says Started a thread.
undefined says Token movements depend on the chains involved and their definitions of finality. You can see the actual times for real transactions on axelarscan: https://axelarscan.io/transfers/search

Many transactions take 30 seconds, but some can take 15+ minutes in the case of chains like Ethereum which have slow finality.
undefined says Absolutely, but I'm not fully understanding why you want to do this. You could deploy the same ERC721 (possibly using something like our constant address deployer). Then create a bridge method that burns the NFT on chain A and mints it on chain B. The only thing you'd have to figure out is where these token IDs come from? How do you know on the destination chain the right tokenID? As long as you can figure that out, then you can definitely build it and pass it as part of the payload.
undefined says Started a thread.
undefined says It depends on the testnet chain you are trying to work with. The easiest way is likely to convert some testnet eth to weth, and then bridge it with satellite.  https://testnet.satellite.money/?source=ethereum&destination=acrechain&asset_denom=eth-wei&destination_address=
undefined says CC @byung  @alex It looks like something happened  with our web examples recently.  We'll try to get this fixed, but I know you might need to move fast for the hackathon. 

A workaround is to use the react components and the contracts (especially those from `examples`) and just manually connect to the endpoints created with `npm run start`. 

Another workaond is to move to an earlier version of the repo `git checkout 0341c1f086440482b0d33ab8557f6b6ab92dfc0f`. You'll have to follow the local readme as the instructions have changed, and there's some small bugs (like changing NFTLinker.json to NftLinker.json in a couple places).

Sorry about the inconvenience! üò¶
undefined says Sounds good! Thanks so much for the response. I'll see if I can work off the the regular examples and might check out that earlier version as well
undefined says Will do the same as xander. Thank you!
undefined says @StephenFluin I deployed DistributionExecutable contract in ethereum chain and also deployed it in polygon chain successfully and minted test aUSDC and trying to send it from ETH chain to polygon chain but when i am trying to hit sendToMany function, I am getting this error

```
Gas estimation errored with the following message (see below). The transaction execution will likely fail. Do you want to force sending?
Returned error: {"jsonrpc":"2.0","error":"execution reverted","id":303398431401478}
```

Also, i am sending 0.01 as msg.value while hitting sendToMany. And when I am force sending the transaction , I am getting ```    Status: false Transaction mined but execution failed``` 

here is the input i am passing to sendToMany 
```
{
    "string destinationChain": "Polygon",
    "string destinationAddress": "0xfDA0e11d7Ab352631b84f698507213F932BB05C6",
    "address[] destinationAddresses": [
        "0x524DACB413d6611AaA195bA68BAe521bF406376c",
        "0x3AEDCDe8D5ecA4143d75619250dCF53C2741494d"
    ],
    "string symbol": "aUSDC",
    "uint256 amount": "5000000"
}
```

what am I doing wrong?
undefined says I'm not sure without seeing your code and the actual transaction. One tip is that since you forced the transaction onto the Blockchain you can debug it with tenderly. https://docs.axelar.dev/dev/general-message-passing/debug/debugging-your-smart-contract
undefined says What is the contract for aUSDC? Or the abi
undefined says Hello, I am using the axelar example for nftlinker and when I try to deploy it on the testnet, I am getting "error: Error: gas required exceeds allowance (0)". I'm thinking that the transaction is running out of gas since it is trying to deploy erc721 on every single supported chain.
undefined says Hi Axelar team, I am working on multichain dao voting project, for HBC hackthon, and we have code for sender and reciever we wrote, but have been having issues trobulshooting with the errors, is it possible for anyone to get on a quick 5-10 min call or a private DM to discuss the errors we are having, thank you
undefined says It depends on the chain. You can refer to https://docs.axelar.dev/resources/testnet or the mainnet equivalent to see all of the contract addresses for all supported assets. On mainnet we've verified many of our token contracts so you can look at this one for example: https://etherscan.io/address/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48#code
undefined says Feel free to DM me. We did notice that our send/ack code example had an error. I believe the entire payment for send/ack should be paid on the source chain right now.
undefined says I am being restricted to DM
undefined says Very relevant Twitter thread for all devs so posting it here https://twitter.com/axelarcore/status/1641860958854283264
undefined says Started a thread.
undefined says Hey , for a custom erc 20 token, that is transferred via interchain token portal is retrieved via AxelarGateway
undefined says Started a thread.
undefined says Sharing for some community feedback and feel free to play/break/submit issues for improvements or collaborate. We really liked the idea and it could be taken further. 
*increasing gas limit to 200k helps in minting
*refresh opensea metadata after warps (some warps are relatively quick, some are extremely slow)
*to warp there are 2 confirmations required with some delay. 

While final testing we invaded avalanche collection from bnb and mumbai and now there are only 50% of avax original fleet left (someone wants to fight back for avalanche perhaps?) 

https://wdrive.io/

curious to see what other people built!üëÄ :Fire:
undefined says 
undefined says Where can I find gateway addresses?
undefined says 
undefined says @Axelar Network
undefined says I‚Äôm trying to deploy it but can‚Äôt find axelar gateway addresses
undefined says Can anyone help me on this?
undefined says Thanks a lot! We attended the HBC2023 hackathon. The idea is to deploy the NFT contracts (like different palaces inside the Garden) on different chains. 

So the user could teleport its NFT from one palace to another palace, because the tokenURIs of same tokenIds are different across chains). 

Actually, this idea is  very inspired by your  tutorial!  ü´°  (https://www.youtube.com/watch?v=_c3tNPcwMvI).
Here is how I implemented by modifying your contract (https://github.com/luckiestkitty/EasyAHBC_Hack23/blob/main/axelar-interPalaces/examples/evm/interPalaces-nft/InterPalacesNFT.sol)
undefined says https://docs.axelar.dev/resources/mainnet and https://docs.axelar.dev/resources/testnet
undefined says Hello, does Axelar support staking tokens??
undefined says Hi dev community, looking to become a validator. Should I focus on testnet or mainnet ?
undefined says Yes, it is possible to stake AXL tokens via Keplr wallet. Here's a guide: https://axelar.network/blog/how-to-stake-the-axl-token-on-the-axelar-network?utm_source=notion-page
undefined says Feel free to start by running a node on the testnet. Here is the official documentation to get started with running a node on the testnet  üîñ   https://docs.axelar.dev/. In the past, Axelar has approached qualified node operators on the testnet and invited them to become testnet validators. Out of this initial set of testnet validators, mainnet validators are selected.
undefined says hi y'all, is there a post or docs guide how to bring erc20 token(which I published) to the Axelar network?
undefined says What's the current t-of-n used? I see there's 70 validators, yet I assume some have multiple key shares? And then I'm unsure if it's a 51% or 67% threshold.
undefined says I navigated to the github page of Axelar Network and found that the core is open sourced. I want to fork the core and want to add support for cross chain communication with one of the Hyperledger Fabric based private networks in the fork. Is it possible to do so ? @Axelar Network @Axelar Help
undefined says My node was syncing till 6275084 block height. But, after that the sync stopped and the catching up field is showing "false". How can I resume the sync?
undefined says Feel free to reach out to Jason from the team (Jason Ma | Axelar#9781) to evaluate the options. Here's also a guide on how to bring your tokens to Axelar (Create your own interchain tokens with Axelar) https://www.youtube.com/watch?v=6yoW7in16Ks
undefined says As of now, the process of adding a new token is permissioned.
undefined says Further down the line anyone will be able to add tokens to the network.
undefined says Adding a new chain is permissionless though. It takes about 10 minutes to integrate a new chain: https://twitter.com/axelarcore/status/1499053636969709568
undefined says Where can I read more about `ExpressExecutable`??? The only resource I have is in `/axelar-exmaples`, but it does not explain waht's the difference under the hood in regards to execution
undefined says 
undefined says Reading the contract inside `@axelar-network/axelar-gmp-sdk-solidity/contracts/express/ExpressExecutable.sol` does not give any lead about what happens in the Axelar network either
undefined says Is express service live on mainnet ?
undefined says How can I get an address to be whitelisted?
undefined says Where are the express gateway contract addresses for testnet?
undefined says What do you mean with express service? The mainnet for Axelar is live.
undefined says Not sure what you mean with this
undefined says For testnet token contract addresses you can check here https://docs.axelar.dev/resources/testnet
undefined says No, I'm asking for the ExpressExecutable gateway, not the regular one. In order to use it, you have to be whitelisted in the gateway
undefined says 
undefined says At least, that's the info available in 

`/axelar-examples/examples/evm/call-contract-with-token-express/README.md`
undefined says Oooh I see, best to wait for someone else to response sorry about that:Axelarthumbs:
undefined says @Axelar Builder The scheduled Axelar Testnet upgrade is complete. Axelar testnet, Satellite, token transfers + General Message Passing are back online.
undefined says @Stefan Thanks
undefined says Sure, no problem
undefined says Hi, can we do general message passing from evm to cosmos yet?
undefined says On testnet for now. Coming soon to mainnet.
undefined says https://www.youtube.com/watch?v=6yoW7in16Ks
undefined says I don't want to miss this question, can someone please answer it ?
undefined says Getting you an answer on this!
undefined says what is the size of the axelar mainnet archive node db?
undefined says Can I set a custom gasLimit for the tx in destination chain, using GMP ?
undefined says What can I do in this case to recover the tx? I cannot force-execute it
undefined says 1.2TB according to https://quicksync.io/networks/axelar.html
undefined says You can call the `execute` method on your contract yourself with the args shown in the explorer for that call. The error being shown is likely because the app logic reverted during gas estimation. You can test it by calling this method directly:
https://github.com/axelarnetwork/axelar-gmp-sdk-solidity/blob/main/contracts/executable/AxelarExecutable.sol#L17
undefined says Hey @Axelar Builder we're excited to partner with Flipside for the Interchain Hackathon :Axelarstrong: 

There are 5 hackathon categories to choose from:

üíµ DeFi & payments
üéÆ NFTs & gaming
üó≥Ô∏è DAOs & governance
‚öôÔ∏è Dev tooling & infrastructure
üôã Social impact & Web3 social

:alert: Prizes :alert:

1st place in each takes home $7500
2nd place in each takes home $2500

And the Grand Prize winner takes home a total of $40,000 :takemymoney: 

There are also Fan's Choice and Flipside Innovator prizes of $5,000 each!

In addition to this, winners and runners up also may be selected for additional funding or investment to continue on their interchain journey :Rocket: 

‚è≥ Spots are limited ‚Äî the sooner you register, the points your application receives and the more likely you are to be accepted.

Early registration ends April 17th!

üîÄ Register now: https://fscrypto.co/hack

:5385twitter: Learn more here: https://twitter.com/flipsidecrypto/status/1643298853414907904
undefined says !faucet base 0x8DC65747De00AF4B61288494Cde7642af4599839
undefined says Please use #üíß‚îÇfaucet
undefined says @Axelar Builder There is an upgrade planned for the Axelar mainnet on **April 11, 2023**. This proposal would cause an upgrade starting at **1:00PM UTC**, taking the network down for approximately 2 hours. This release includes general bugfixes and  improvements to Cosmos <-> EVM General Message Passing, such as the ability to pay gas as part of calls from Cosmos. During this time, the Axelar network, Satellite, token transfers and General Message Passing will not be available.
undefined says Where can I see the official changelog ?
undefined says We have created interchangeable token contract, but I can‚Äôt find axelar faucet. Can anyone help me on this?
undefined says https://github.com/axelarnetwork/axelar-core/releases/tag/v0.33.0
undefined says #üíß‚îÇfaucet
undefined says Hi, dev team.
I am a individual investor.
I am interested in cryptocurrency and specially Defi.
So I already made some investment in the multi layer swap development team, but I was disappointed with the development team.
It's been several months since I invested, but I still haven't been able to promote the project to the level I would like.
So I am convinced that this development team's ability is low and I am looking for other investment targets.
If you can build a platform with both Bridge and Swap functions, I am willing to invest in you.
undefined says If you are interested in my suggestion, send message to me.
undefined says Hello i wanted to ask a few questions about the Axelar Virtual Machine - will developers write contracts directly on Axelar Network? i.e. not call contracts on axelar gateways
If yes, which language would devs be writing these in - seems its cosmos SDK with no EVM Module, so it would be GO / GO-lang?
undefined says The plan is to support for CosmWasm smart contracts to Axelar.  That means you'll write in CosmWasm (usually Rust).
undefined says @Axelar Builder 

Hey everyone ‚Äì 
¬†
As you know, there is a plan to announce an addition of a Virtual Machine on the Axelar network. We‚Äôre looking a few strong developer partners to help build out some new integrations. DM me if you‚Äôre interested! You should have experience in Go and/or Rust, distribution systems, know basics of cryptography, and be interested in consensus protocols. (https://axelar.network/blog/axelar-virtual-machine-future-of-interoperability) 
¬†
Axelar Interchain Amplifier: Developer Partner Program
¬†
Interchain Amplifier is a set of services (instantiated via a hybrid of consensus features & Cosmwasm contracts) on the Axelar network that can be leveraged to amplify interchain connectivity. The key properties include universal many-to-many routing, message translation across different chain stacks, and robust proof of stake-powered security. Any chain connected to the stack will be immediately composable with other interconnected chains. 
¬†
Objective:¬†
* Accelerate the buildout of interchain by establishing new connections to the Axelar network.
* Collaborate with external partners on technical integrations, go-to-market, and marketing efforts.¬†
¬†
Parties:¬†
* Axelar
* Chain partner¬†
* Developer partner
¬†
Benefits for a developer partner:¬†
* Build one connection to the Axelar network, leverage dozens of its integrations & full stack of interoperability to connect a new ecosystem to get maximum utility of your work.¬†
* Get financial alignment with the Axelar network.¬†
* Collaborate on building the interchain with many like minded groups and ecosystems.¬†
* All protocol level code is open-sourced and can be used and modified by communities.¬†
¬†
Axelar and a chain partner will provide grants to cover engineering and audit costs of the integrations. Additional bonus AXL incentives will be provided at launch and upon hitting certain volumes through your connection.
undefined says https://www.squidrouter.com/
undefined says Want to confirm that `set-withdraw-addr` works as I'm understanding it:
1. I delegate to ValidatorX from axelar1aaaa...
2. I call `set-withdraw-addr` and designate axelar1bbbb... as the withdrawal address
3. All axelar1aaaa's rewards now accrue to and can be claimed **from** cosmos1bbbb.

Two questions: 
1. Is that right?
2. If axelar1aaaa tries to claim, what will happen? Will it fail or will rewards be pushed to axelar1bbbb?
undefined says `./scripts/setup-node.sh -n mainnet`
```
FAILED to run the last command

script cleanup running
FAILED to run the last command

script cleanup running
```
`main` branch. Am I missing something? Thank you in advance
undefined says where can i get base goerli
undefined says ?
undefined says ?faucet base
0xC1d43a59805671584788017BFaF9B57E3eF0C7eC
undefined says Hi,
I get 500 errors in https://api.axelarscan.io
undefined says is there any developer or support which can help me to troubleshoot it?
undefined says it was not raised before
undefined says @PJ @Sirapop
undefined says ```curl --location --request GET 'https://api.axelarscan.io/' \
--header 'Content-Type: application/json' \
--data '{
    "query": {
        "bool": {
            "must": [
                {
                    "match": {
                        "addresses": "axelar1u4he0w85dlxf65t8pn3hwjsyz5p2dz694c42kp"
                    }
                }
            ],
            "must_not": []
        }
    },
    "size": 500,
    "from": 0,
    "sort": [
        {
            "timestamp": "desc"
        }
    ],
    "fields": [
        "txhash",
        "height",
        "types",
        "code",
        "tx.body.messages.signer",
        "tx.body.messages.delegator_address",
        "tx.body.messages.validator_address",
        "timestamp"
    ],
    "_source": {
        "includes": [
            "logs",
            "tx"
        ]
    },
    "track_total_hits": true,
    "collection": "txs",
    "method": "search",
    "path": "/txs/_search",
    "module": "index"
}'```
undefined says #üíß‚îÇfaucet
undefined says this is the response:
```{
    "message": "Internal Server Error"
}```
undefined says hey, if you want to retrieve a large amount of transaction data, it may be necessary to use pagination. Can you try lower `size`  to maybe 10 for each call?
undefined says Hello @everyone
undefined says Please how can I avoid unpredictable gas limit
undefined says Guys we have build cross chain voting  contract but we are having problems with old repos by axelar, it hasn‚Äôt provided right functionalities for cross chain voting. Can someone check our contract? I‚Äôll send you the dm
undefined says @Danipro @jahanzeb69 the team will get back to you on your Qs!
undefined says @Axelar Builder The latest tutorial in our YouTube Developer Series  is live! 

In this video, we walk you through GMP on Axelar and give you a comprehensive guide to getting started with this exciting feature! 

üîó https://youtu.be/htMVIYzGA34
undefined says Just to confirm -  the unsubmitted votes occurs when the response from the rpc is slow and validator couldn't submit it in time ?
undefined says pragma solidity ^0.8.0;

contract MyToken {
    string public name = "My Token";
    string public symbol = "MYT";
    uint256 public totalSupply = 1000000000000000000000000; // 1,000,000 tokens with 18 decimal places
    uint8 public decimals = 18;

    mapping(address => uint256) public balanceOf;
    mapping(address => mapping(address => uint256)) public allowance;

    event Transfer(address indexed from, address indexed to, uint256 value);
    event Approval(address indexed owner, address indexed spender, uint256 value);

    constructor() {
        balanceOf[msg.sender] = totalSupply;
    }

    function transfer(address _to, uint256 _value) public returns (bool success) {
        require(balanceOf[msg.sender] >= _value);
        require(_to != address(0));

        balanceOf[msg.sender] -= _value;
        balanceOf[_to] += _value;

        emit Transfer(msg.sender, _to, _value);
        return true;
    }

    function approve(address _spender, uint256 _value) public returns (bool success) {
        allowance[msg.sender][_spender] = _value;

        emit Approval(msg.sender, _spender, _value);
        return true;
    }

    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {
        require(balanceOf[_from] >= _value);
        require(allowance[_from][msg.sender] >= _value);
        require(_to != address(0));

        balanceOf[_from] -= _value;
        balanceOf[_to] += _value;
        allowance[_from][msg.sender] -= _value;

        emit Transfer(_from, _to, _value);
        return true;
    }
}
undefined says yes.
undefined says Can we help you with this or do you have a question?
undefined says Hey dev team, hope you all had a great easter holidays! I represent Lossless - a security solutions company providing proactive hack-mitigation tools. We're making a no-code smart contract monitoring platform that allows you to track various risks related to your smart contract operations. We're developing it actively and already at current state it can alert you about most common suspicious activities making your community and yourselves even more secured against any threats. I was wondering if you'd be open to explore it and having a full-service account made for you free of charge? Really hoping to connect with the right person to discuss more. Have a great day all! :Axelarpeace:
undefined says Please reach out to @Jason Ma | Axelar
undefined says Hey sergey, trying to DM you but it seems you have DMs off from non-friends. Sending you a friend req!
undefined says Tagging @Axelar Network here as well, perhaps Kate can help you to reach Sergey or to forward your inquiry to the right person on the team
undefined says If you want to ask in the #üí≠‚îÇaxelar-virtual-machine channel we can also get back to you there!
undefined says pinged.
undefined says How can I get the details of transactions like "Heartbeat", "MsgVote" etc. from the node's REST API?
undefined says hello I have some questions 


1)how can we verify the contract on a the second chain?
2) after creating the smart contract the token contract ownership transfered to the owner? 
3) proxy contract has less trust how someone can trust the project with his token?
4) if a token is too complicated instead of just a simple erc20 how they will manage it?
undefined says You'd probably need to fetch and index all the data but it might be easier to use the Axelarscan API:
https://docs.axelarscan.io/heartbeats
undefined says Hi, i've sent a dm to you @Jason Ma | Axelar, hoping to chat with you for a few mins
undefined says hi @all when i run npm run check-balance testnet it shows all my testnet balances correctly,  except for eth, moonbeam, and bnb where it prints ,although i have some tokens in my metamask. For example i can use remix to deploy smart contracts on these networks but when i try axelar scripts i am getting error that i dont have enough gas for deployment. But if it's true how can i deploy using remix ide?
undefined says Don't DM that scammer üòâ
undefined says Hello @gojic 

So sorry to hear that.

Can you share the error you are getting here?
undefined says it is not an error... it's compile normally, but it's said that my balance is 0 for this three network
undefined says what? i am not scammer, what are you talking about?
undefined says Sorry about the confusion, there was a scammer asking you to DM him. I banned them so their message got deleted.
undefined says aha ok üòÑ
undefined says Hey! Where cab we get more information regarding the COsmwasm VM that Axelar is building/
undefined says https://discord.com/channels/770814806105128977/955655587260170272/1093883207927214093

If you'd like to get an early access to the AVM, please fill the form below:
https://docs.google.com/forms/d/e/1FAIpQLSelkIlFFucMEUvXepoPmtRuySwNaVt_IT8S97s55GJSKjo9eg/viewform
undefined says via LCD or RPC, how can I get the rewards/commision/bank values for a given block height? In the CLI there is a "height" parameter, but I don't see how I would add it there
undefined says Yeah I did check those. Nothing more than that for now right? As in documentation etc...
undefined says As of now that's the extent of the info, however if you fill the form out above we can add you to a private builders channel where we'll be hosting a call at the end of the month to cover all things AVM including Questions from your end, next steps and more!
undefined says You need to add tx.height event to your query
undefined says üìç Hey @here@Axelar Builder You may have noticed some changes to the Builders category!

This channel, now called #üåê‚îÇdev-tavern  was formerly just Developers, and was a catch all for troubleshooting, support, general Q&A.

However in order to keep things more organized we implemented the #üíª‚îÇdevelopers forum feature!

There you can ask your specific troubleshooting, technical, developer related, etc. questions, and add the tag for whichever category it fits under for greater visibility. If you've never used the forums feature on Discord and are stuck on anything we're happy to help! 

Moving forwards, this channel will server more of a general knowledge hub, to introduce yourself and your project, meet other builders, connect with the team and chill üçª 

Any feedback on the new layout is also welcome!
undefined says Pinned a message.
undefined says https://tenor.com/view/its-been84years-titanic-rose-dawson-gif-5372593
undefined says Gas estimation errored with the following message (see below). The transaction execution will likely fail. Do you want to force sending?
Returned error: {"jsonrpc":"2.0","error":"execution reverted","id":7635389025522819}
undefined says Having this error
undefined says 
undefined says Having this error
undefined says Gas estimation errored with the following message (see below). The transaction execution will likely fail. Do you want to force sending?
Returned error: {"jsonrpc":"2.0","error":"execution reverted","id":7635389025522819}
Having this error
undefined says The reason for this error cannot be ruled out without seeing your code and the actual transaction.
undefined says One tip is that since you forced the transaction onto the Blockchain you can debug it with tenderly. https://docs.axelar.dev/dev/general-message-passing/debug/debugging-your-smart-contract
undefined says Feel free to reach out to StephenFluin#4739 from the Axelar team, perhaps Stephen can take a look at your code and the txn.
undefined says Do you have wss api?
undefined says Yep, see https://docs.axelar.dev/resources
undefined says axelarscan
undefined says I need to monitor large transfers in real time
undefined says gmp transfer  and token transfer
undefined says For Axelarscan, you can use the API -> https://docs.axelarscan.io/
undefined says I didn't find the topic
undefined says don't have wss api
undefined says Where is the topic document that this wss api can subscribe to?
undefined says I don't think there is one available for Axelarscan specifically - cc @PJ
undefined says For example, nodes or validators to synchronize transfer messages?
undefined says Hello DW, at this time, Axelarscan API only supports RESTful API. We'll keep you informed via this Discord channel once WSS support becomes available.
undefined says Hey everyone, not sure if there are any wallet builders here but we at Pine Street Labs just made our walletOS Sandbox available for anyone to try. 

A bit about walletOS ‚Äì it‚Äôs an API for generating addresses, building transactions, fetching data, and broadcasting transactions. We currently support 18 blockchains, including Axelar, and are always adding more. 

If you‚Äôre building a wallet we‚Äôd love to have you try it out! 

Here's our product hunt link: https://www.producthunt.com/posts/walletos

And you can check out our docs here (https://docs.pinestreetlabs.com/docs) + sign up to get a free API key for the Sandbox here (https://www.pinestreetlabs.com/) 

If you have any questions feel free to send me a DM!
undefined says @Stefan
undefined says We've pinged the on call team to help look into this, thanks for sharing some code!
undefined says My teammember is also having the same problem @Axelar Network
undefined says any answer to this ?
i cloned ``` https://github.com/axelarnetwork/axelar-web-app ```
and get the same error
undefined says @Max üê∏ is building üíª for the whitelisting of addresses for GMP express, this feature isn't live yet. When it does go live however, we'll have a form you can fill out to get you whitelisted!
undefined says @PJ
undefined says ü§Ø
undefined says My mind just exploded
undefined says Excellent, thanks!
undefined says Where can I read why txs from ETH to Polygon, or other EVMs, take longer than 15m?
undefined says Ethereum blocks take about 15 minutes to finalize. They don't have single slot finality yet, but the top of this doc acknowledges the block finality time on Ethereum.

https://ethereum.org/ph/roadmap/single-slot-finality/#:~:text=It%20takes%20about%2015%20minutes,finalized%20in%20the%20same%20slot.
undefined says anyone know why this is failing? https://testnet.axelarscan.io/gmp/0xb8f67076dc4cef04382d71e78b052234a69faec3431177c79ab1e3ad542ce5a1:2
undefined says Is said insufficient gas
undefined says Ah was just about to ask this. Daaaamn 15 minutes, lol, bye eth
undefined says Hello @Mncrs 

Thank you for letting us know about this issue. We apologize for any inconvenience caused. This project is now archived as its no longer supported but you can find relevant projects to work on here: https://github.com/axelarnetwork/axelar-examples with code samples and FE examples under the `example-web` directory.

We are here to help, so don't hesitate to reach out if you have any questions or need further assistance!
undefined says Hello @iamgroot 

Thank you for letting us know about this issue. We apologize for any inconvenience caused. This project is now archived as its no longer supported but you can find relevant projects to work on here: https://github.com/axelarnetwork/axelar-examples with code samples and FE examples under the `example-web` directory.

We are here to help, so don't hesitate to reach out if you have any questions or need further assistance!
undefined says Hi, I'm interested in adding a staked Eth token to the Axelar bridge so that we can bring it into Cosmos. This doesn't necessarily need to be on Satellite, we have a bridging UI that could handle it. I'm mainly concerned about how to get new tokens approved. Is Axelar bridging permissionless or is there a whitelist. Thanks!
undefined says wow GMP transfers stuck?
undefined says Kindly delete from the public server and send to my DM
undefined says oops lol
undefined says Please is it Axelar testnet reward begin ?
undefined says Please is it Axelar testnet reward begin ?
undefined says Answered you in #üîó‚îÇgeneral
undefined says Hello Team, where I can complain about Osmosis Builders airdrop? I had 2 transactions and 2 LPs during snapshot window but I am not eligible.
undefined says Feel free to share the information that thinks makes you eligible in #üîó‚îÇgeneral we can check and explain what makes you ineligible.
undefined says HI am a defi developer exploring cross chain message passing 
i would like to build a simple PoC of sending message across testnets
is it possible to see any reference docyment which contains all addresses needed while doing bridging?
undefined says am looking at this one https://discord.com/channels/770814806105128977/955655587260170272/1097469616026030110
but this one doesnt mention the addresses to refer to while deploying contracts
undefined says hey @Canh T, i hope you are doing ok

any info regarding this?
undefined says original question of Ab was:
undefined says > "so, for the projects that connect into Axelar via these updates will the security be provided from Axelar or their source chain? how does that mechanism work"
undefined says Are you looking for testnet token contract addresses? These can be found here: https://docs.axelar.dev/resources/testnet
undefined says > You can refer to https://docs.axelar.dev/resources/testnet or the mainnet equivalent to see all of the contract addresses for all supported assets. On mainnet we've verified many of our token contracts so you can look at this one for example: https://etherscan.io/address/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48#code
undefined says Hey @Axelar Builder if anyone is in the Berkeley area this week we‚Äôre hosting an ecosystem meetup with Blockchain @ Berkeley! 

@sergey will be there in person to lead the session on all things Axelar and going cross-chain! 

üîó https://twitter.com/CalBlockchain/status/1648109235610288128?s=20
undefined says Interesting article for devs:

> **"Building the Future With Cross-Chain Liquidity"**
> 
> How do we pool liquidity from different chains? This is facilitated by cross-chain transfers, which help maintain and enhance liquidity in the blockchain ecosystem. By enabling cross-chain transfers, users can easily lend, borrow, stake and trade, without the need to comb through different platforms.
> 
> üìç In this blog post we cover what cross-chain liquidity is and why we need it, the challenges it presents and security models that address these, and finally Axelar's approach through GMP, Squid and more. 
> 
> We also discuss: 
> 
> üîÄ  Atomic swaps
> :waystoearnbitcoin: Liquidity aggregators
> :staff: Interoperability protocols
> ü¶ë Cross-chain liquidity pools
> 
> üîó Read the full article here: https://axelar.network/blog/cross-chain-liquidity-building-the-future
undefined says Hi,
I am currently working on a talk about privacy in combination with public blockchains using Axelar. 
For this, I have created two use cases that I would like to have checked for their feasibility and whether there are any stumbling blocks that need to be considered here.

I would like to use GMP for cross-chain communication and Secret Network (Cosmos) as privacy chain.

Can someone please check the following use cases and give me some feedback?
undefined says **Use-Case 1: Claim exclusive content for NFT holders on a public chain (e.g. Polygon)**

This use case is about extending an NFT with protected or exclusive content that only the current owner should have access to. To ensure ownership before the exclusive content is made available to the user, it must first be verified on the chain, which requires a cross-chain query (Secret Network => Polygon) to get the current owner.

How does this query through Axelar work in detail and how is the duration of a query calculated?

**Process: **
undefined says 
undefined says **Use-Case 2: Cross-chain messages from contract, if on-chain logic is required**

This use case shows how to invoke a private chain from a public chain where on-chain logic is required. Since all messages for the secret network must be encrypted by the user, they must be passed to the contract already encrypted as a parameter.

**Process:**
undefined says 
undefined says **And is there a general formula I can use to approximate the duration of an operation?**

For example:

Blocktime **Source Chain **+ Blocktime **Axelar **+ X? + Blocktime **Destination Chain** + X = **overall duration**?
undefined says Ccing @StephenFluin @Idris Olubisi | Axelar
undefined says hey there stefan, any info about my query?
undefined says Here's an interesting AMA with DeveloperDAO diving into the benefits of going cross-chain and getting started on Axelar, to support our ongoing hackathon with Flipside! https://twitter.com/developer_dao/status/1645878330019954688?s=20
undefined says No, unfortunately not. Perhaps @Idris Olubisi | Axelar can help.
undefined says Also forwarded it internally.
undefined says thanks for the help, you have been of real help but it is odd that i have been asking this question for some time (more than 2 weeks) and haven't got any response

is there a problem with my question?
undefined says I think the team is just very busy. I wasn't able to find a definite answer to your question so I hope the team can help out. I've forwarded it internally so I hope someone can help you soon.
undefined says got it, it is great that the team is busy building
undefined says The question says "these update", what update please?

Trying to understand the question ü§î
undefined says @Ab could you please clarify?
undefined says for the project that will be deployed under AVM, all of the security/validation will be provided by Axelar validators and security from AXL tokens

is that correct?
undefined says It's possible to use other methods for verifying transactions instead of relying solely on Axelar validators. This can include using external verifiers or other tokens such as ETH or BTC. 

Additionally, a light client on a zero-knowledge proof can remove the need for verification by Axelar validators altogether.
undefined says thank you for your response

but still i don't understand, is it still in work in progress mode? the AVM?

the security part is a major factor in this whole architecture isn't it

are you suggesting that you guys are exploring other options too?
undefined says Learn more about the architecture and the underpin technology here:

https://axelar.network/blog/axelar-virtual-machine-future-of-interoperability

There is also a $5 million developer grant program to build using the Axelar Virtual Machine and expand the interchain.

The objective of the program is to work with selected teams to 
(a) scale building new connections across ecosystems, 
(b) improve security  
(c) design interchain orchestration templates on the Axelar Virtual Machine. 

If you are interested, check this out: https://linktr.ee/axelar_vm
undefined says i have gone through the resource you have provided here

i don't think this answers my question though, my question was based on the understanding that i got from those resource
undefined says I understand that you have gone through the provided resources, but you still have doubts regarding the answer to your question. 

I apologize for any confusion caused by my previous response. 

Regarding your question about security, Axelar is exploring various options to ensure the security of its platform. One such option is to use other methods for verifying transactions, including external verifiers or other tokens such as ETH or BTC. 

The use of a light client on a zero-knowledge proof is another possibility that can remove the need for verification by Axelar validators altogether. 

I hope this addresses your concerns. If you have any further questions, please feel free to ask.
undefined says isn't this the same response that you gave me out a couple of messages ago?
undefined says Hey, sorry for the slow response on this. Here's more info on the AVM:

The AVM is meant to supercharge Axelar's interoperability model. Currently, the Axelar blockchain implements the logic for authentication of cross chain messages. For cosmos chains, we make use of IBC, and for EVM chains, we rely on RPC based voting from Axelar validators. With the upcoming AVM, anyone will be able to add this logic to Axelar and customize it to their needs. For e.g., a connection to Near using the RPC based voting by validators is in the works:
https://github.com/axelarnetwork/axelar-cgp-near
Furthermore, instead of using RPC based voting method for verification, we can use a zero knowledge based authentication for zkEVMs. You can also have 2 or 3 different authentication mechanisms that also need to be applied for the same chain for even more security. Either the Axelar team, or third parties will be implementing these connections and Axelar foundation has various grants for interested contributors. Of course, before integrations use a specific connection as the default for that chain, the implementation will undergo various audits, testing etc.

We'll have more docs on this soon. But I'm happy to answer more specific questions that you might have.
undefined says I apologize for any confusion caused by my previous response.  I thought breaking it down a bit would help. 

Here is a detailed response @Ab 

I hope this address your concern.
undefined says thanks milap, that puts things into perspective now

so you guys are working on all the possible modules and using RPC connection to provide utmost security

for the project that will be using AVM, they can choose their security, they can either opt for Axelar or any other chains they aim for as you guys will support most of them

is that analogy correct?
undefined says yeah, sure

i will interact with Milap on my other queries
undefined says Decentralized RPC voting is one approach to provide security. But we're also looking into using light clients and zero knowledge proofs for verification. The verification will occur on Axelar blockchain using the appropriate method. And projects can implement their own verification method or use their own decentralized voters if they wish for their own application.
undefined says hey guys, is there a way to calculate the gas fee in smart contract?
undefined says yeah, they could either operate their own architecture or use Axelar's validator set then, right?

i suppose, the validators will operate and have all the verification proofs that you guys are working on
undefined says Hey üëã @wagmi 

Yes, there are a few ways to estimate and calculate the gas fee for executing a smart contract on a blockchain.

Most smart contract platforms provide a method to estimate the gas fee required for a transaction. For example, in Ethereum, you can use the `web3.eth.estimateGas` method to estimate the gas required for a transaction. 


Or using the gas limit multiply by gas price since every Ethereum transaction have this.

Additionally thhere are many gas fee calculators available online that can help you estimate the gas fee for a transaction. These calculators take into account the current gas price and the gas limit to give you an estimated cost.


However, Axelar provides `estimateGasFee`. This is a useful query for GMP transactions, when invoking `callContract` or `callContractWithToken` to get an estimate of the appropriate gas payment to be made to the gas receiver on the source chain.

Check here: https://docs.axelar.dev/dev/axelarjs-sdk/axelar-query-api#estimategasfee


Let me know if that answers your question.
undefined says Hey @Axelar Builder since reorganizing the channels here we just wanted to send a heads up on the new structure and some helpful reminders: 

#üíª‚îÇdevelopers is our new forum for troubleshooting issues, errors you encounter in your code or any other developer specific issues. You can also search through our forum to see if your questions has been answered before: https://community.axelar.network/

#üì°‚îÇsatellite is the channel for questions about longer than usual transfer times, troubleshooting stuck TXNs, and any general questions about any TXNs sent over satellite and more. 
For any issues regarding this please open a ZenDesk Support Ticket ‚Üí https://axelar.zendesk.com/hc/en-us/requests/new
The @Technical Moderator moderator team is also here to help check tickets, look into stuck TXNs and provide support.  

The #üíß‚îÇfaucet channel is under the Community section now. 

If you don't see any of these channels please head to #üìç‚îÇpick-a-role and select the correct role to access the channels! 

:Shakehands:
undefined says Pinned a message.
undefined says gm,
it would be great if someone here could give me a short feedback ( @StephenFluin @Idris Olubisi | Axelar )?. 
The answer doesn't have to be detailed either, I just want to make sure I haven't overlooked or misunderstood anything.
 
Some details how queries to a contract (e.g. get owner of an NFT on ETH) from Cosmos to non-Cosmos Chains work and how long they take would be great.

@Axelar Network 
If the DEV team is too busy is there someone else who could answer my questions?

Many thanks in advance üòÄ
undefined says Wow :Fire:
undefined says Please use #üëã‚îÇgm for gm/hi etc.
undefined says Thank you
undefined says Here's a repository demonstrating some of the basics: https://github.com/axelarnetwork/evm-cosmos-gmp-sample. We're putting more materials together in the near future.
undefined says Hi @StephenFluin ,
I know this repro but I could not find (or not sure) if and how my example Use-Cases will work.

Especially the question of how I can make a **"normal query"**from Cosmos to a non-Cosmos chain e.g. query a contract on Ethereum (see first example).

Could you possibly just give a short info on this if and how the first use case is so feasible?
undefined says Can you clarify what you mean by "query a contract", are you looking to initiate a GMP message on a cosmos chain, and then reply back from EVM to comsos with some data point? You'll basically need a Solidity SenderReceiver, similar to our send/ack example in axelar-examples on the EVM side (solidity), and then the cosmwasm code to send a message https://github.com/axelarnetwork/evm-cosmos-gmp-sample/blob/main/cosmwasm-integration/multi-send/cosmwasm/src/contract.rs#L50 and receive a message in the cosmwasm code. We're looking to add more helpful examples with the full launch of Cosmos GMP.
undefined says Yes, I need some data (owner of a NFT) from e.g. Ethereum into Cosmos. If I understand you correctly, then I need to implement a proxy contract on Ethereum that implements the SenderReceiver interface that I can then call from Cosmos to get the data, correct?
undefined says There's no proxy in that way. There's just two simple messages. One message from Cosmos -> EVM with the contract address / tokenID you want to query.  Then in the _execute method on the EVM side, you reference the data you want, encode the data and put it in an outgoing message back to the source_address and source_chain, which will be received on Cosmos and then you can do whatever you want with that data.
undefined says Sorry, I did not make myself clear enough.
I want to query the owner of any or existing ERC-721 contract (a contract that has not implemented the SenderReceiver interface). So therefore the proxy contract.
undefined says @Axelar Network @Canh T  Hey there. We are trying to integrate Axelar into our project and have some questions. If it's possible accept friend requests and we will describe them in DM.
undefined says Hey, please let us know here if that works instead! This and the #üíª‚îÇdevelopers channels are for getting everyone answers to their questions, we do our best not to work over DM here.
undefined says Okay, no problem. We are trying to bridge our tokens from Binance to Polygon and back, and we have to  add gas manually every time to confirm our transaction. Is there any solution to that? Also, we have native tokens in Binance and Polygon, and when we are trying to bridge native  and already bridged tokens  from Polygon to Binance in the same function call, the transaction  is not confirmed. Here is an example
https://testnet.axelarscan.io/gmp/0x93d5eb9cc498376f39cc6e2338129bfac86eb92fd2c1c443c6491addd0007dc2
undefined says hey @Milap any followup regarding this?
undefined says Yeah, either is an option. They could also do both. Have their own set validate **and** have Axelar validators check it
undefined says oh, but won't the latter cost more?
undefined says Yeah, but maybe the specific app is ok with that for additional security. It is up to the app to decide to configure customized auth mechanisms
undefined says got it, any tentative deadline when AVM will be complete?
undefined says End of Q2/Q3
undefined says hey @Axelar Network  any follow-up regarding this?
undefined says Hey @Gor1994 

Upon reviewing the link you shared, it appears that the transaction is currently at a stage where you need to connect and approve in order to proceed. It is not stuck, but rather requires further action.

Can you take a look please?

I hope this helps! Let me know if you have any other questions or concerns.
undefined says @Idris Olubisi | Axelar I'm getting this error msg.
undefined says Hello, thank you for notifying us about this issue. We are currently investigating it and will provide you with more information as soon as possible.

Apologies for any inconvenience caused.

We appreciate your patience while we look into this.
undefined says Hello @Gor1994 

My apologies for the delay. After consulting with the team to identify the cause of the failure, it appears that you need to pay for the gas in the same transaction, as indicated in this link: https://github.com/axelarnetwork/axelar-examples/blob/9b51bc9f9fbc79c7c6dff289020af94302b3e285/examples/evm/call-contract/ExecutableSample.sol#L28-L34.

I hope this information is helpful. Please feel free to ask any other questions or express any concerns you may have.
undefined says oh ok, thanks for the info milap

if i have more question regarding it, i will ask you i hope that is ok
undefined says When sending interchain tokens can we always burn them at source even if the tokens are coming from the origin chain? Currently tokens get locked if from the origin chain. I made a post in developers channel about this: https://discord.com/channels/770814806105128977/1101030314052177971
undefined says I hope the experts from the Axelar team can help you with your question.
undefined says The only answer I was able to find was the following: https://discord.com/channels/770814806105128977/955655587260170272/1069997252996775947
undefined says > You should be able to implement custom logic in your contracts at the source/destination chain. From what I understand, you want to implement a standard bridge, with the difference that you'd burn X tokens at chain A and mint X/3 token at chain B -- and vice versa. You should be able to code that into your smart contracts given that you control mints/burns at source/destination chain.
undefined says HI i have weird problem. When i am using deployUpgradable everything compiled i get address but that address can not be found on explorer.I made post #deleted-channel
undefined says I was using the NftLinker contract for transferring the nft from one chain to another but I am not able to set the  environment in my local. I am using windows,  it says one sandbox package is not supported on windows. Please can anyone help me
undefined says Hello @Titan Hunter#0058,

I apologize for the inconvenience. Could you please share a screenshot of the error message you received? Alternatively, please provide the command you used to set the environment variable. Was it similar to this command: `npm run setup`?
undefined says I have clone this repository https://github.com/axelarnetwork/axelar-examples.git and then run the npm install command on my system. I got this error
undefined says Error: unsupported platform: windows_nt x64
undefined says @Idris Olubisi | Axelar
undefined says This is unexpected behavior. Let's troubleshoot together! üòÄ

Please confirm the following:

You have the latest version of Node.js installed on your system. Confirm this by running the command `node -v`.
Try running the command in a different shell or terminal emulator, or as an administrator.
undefined says I am using this node version v18.16.0
undefined says I have also tried running the command as an administrator but it did not work
undefined says I will simulate the process locally and get back to you shortly. Please let me know if you have any further questions or need any assistance.
undefined says Okay. I am using windows so please test on it
undefined says Hi @Idris Olubisi | Axelar is there any update?
undefined says Haven't been able to make any progress simulating on a fresh window pc or vm yet as its been setup. I will keep you posted, apologies for the delay.
undefined says Thank you for your patience.

I have successfully simulated the issue and encountered the same error on a Windows operating system.

Rest assured, we will investigate the matter and promptly provide a resolution.
undefined says Okay.  Thank you for your time. @Idris Olubisi | Axelar
undefined says Hey guys. Is there a simple way to bridge a custom ERC-20 token using Satellite?
undefined says Hello @Titan Hunter#0058 

At the moment, our current dependency on Near requires a POSIX system. To address this, we recommend using WSL to run a GNU/Linux environment on top of Windows, following the instructions provided by Near: https://docs.near.org/tools/near-cli#windows. 

We understand that this may not be optimal for all developers who aren't building on Near, so we're actively exploring ways to remove this dependency. You can find more information and updates on this issue at: https://github.com/axelarnetwork/axelar-examples/issues/127.

Thank you for your understanding and please let us know if you have any further concerns.
undefined says Hi @Idris Olubisi | Axelar 
Is your bridging system permissionless?
undefined says Yes, you can learn more here https://axelar.network/blog/cross-chain-bridges-benefits-limitations-risks and how Axelar handles security here: https://axelar.network/blog/security-at-axelar-core
undefined says After installing near cli , then the error("Error: unsupported platform: windows_nt x64") will not come on cloning the axelar github and installing it dependencies?
undefined says Why does it take so much time to get my questions answered here tho?
undefined says Where is the docs to integrate GMP in a dapp? For example on Juno Network
undefined says Yes, you can follow the information provided here: https://docs.near.org/tools/near-cli#windows

Apologies for the late response. Let me know if that helps.
undefined says Hello, @Magical_vybez  thank you for bringing this to our attention. We do our best to answer all questions in a timely manner, but occasionally there may be delays due to the volume of inquiries or the complexity of the issue at hand. 

Rest assured that we value your time and appreciate your patience while we work to provide the best support possible. 

I noticed that you tagged in your previous message. They are currently occupied with other tasks or may not have seen your message yet, which could explain the delay. However, I'm happy to help and will follow up with him to assist with some feedback

So sorry for any inconvenienced caused.
undefined says Okay thank you for your valuable response
undefined says Hello @JL iBercrypto üëΩ @Axelar_ES 

Kindly find the docs to integrate GMP here: https://docs.axelar.dev/dev/general-message-passing/overview

It also includes and examples to get you started: https://docs.axelar.dev/dev/general-message-passing/local-dev

I hope this information is helpful. Please feel free to ask any other questions or express any concerns you may have.
undefined says Full Twitter thread about the GMP announcement
üîó https://twitter.com/axelarcore/status/1653384907085737985?s=20
undefined says Thanks for sharing, Stefan
undefined says üëç
undefined says Sure, any time!
undefined says All EVMs or only the supported ones with a gatewayü§î  metis & polygon zkevm?
undefined says @Idris Olubisi | Axelar It is written that we can interact with the NEAR network. But I have to transfer NFT from polygon to ethereum testnets. How can I do that?
undefined says In the docs it says "For GMP to work, both chain A and chain B must be EVM chains with a deployed Axelar Gateway contract."
undefined says https://docs.axelar.dev/general-message-passing/overview
undefined says Hello everybody! Is there any ongoing issue with axelar? I have initiated a couple of time a bridge from Osmosis to Evmos of some axlUSDC, I get the "Tokens will soon arrive at evmos...2kma on Evmos" message, but it's stuck there since 20 minutes. And the deposit confirmation transaction doesn't seem to be there https://axelarscan.io/transfer/7DEC803C897ED09360EDE29B9C821924FCF1B75EDA661530AA2A4454DDD9740E
undefined says You need send a smaller amount
```failed to execute message; message index: 0: 44049287ibc/D189335C6E4A68B513C10AB227BF1C1D38C746766278BA3EEB4FB14124F1D858 is smaller than 44055776ibc/D189335C6E4A68B513C10AB227BF1C1D38C746766278BA3EEB4FB14124F1D858: insufficient funds```
https://www.mintscan.io/osmosis/txs/7DEC803C897ED09360EDE29B9C821924FCF1B75EDA661530AA2A4454DDD9740E
undefined says got it, thanks!
undefined says Can anyone tell me how can I transfer an already minted nft from one chain to another using axelar ?
undefined says Can i deploy it by myself or i think Axelar foundation had to do it(sry for the newbi quests)
undefined says I think those in control of the blockchain need to deploy it.
undefined says I hope the Axelar developers can clarify.
undefined says Here are some projects that use Axelar for bridging NFTs https://discord.com/channels/770814806105128977/1016744396705775736/1072242496190566541
undefined says I hope these projects provide the chains you are looking for.
undefined says I am not able to access the link. It is showing No Access @Stefan
undefined says oh...
undefined says thanks for letting me know
undefined says Here's a repost... 
> Here are some more NFT projects building with Axelar I wanted to share with everyone: 
> 
> 1Ô∏è‚É£ One of the OGs: AxelarSea! A cross- chain NFT bridge and marketplace. 
> 
> üîó Docs: https://axelarsea.gitbook.io/axelarsea-docs/
> 
> üåä And check out their YouTube for more tutorials and demos: https://www.youtube.com/@axelarsea1212
> 
> 2Ô∏è‚É£ Next up: Omnite!
> 
> üìçHome of Upgradable Assets- launch and upgrade your NFT collections with state of the art tools that redefine the way NFT projects should be managed.
> 
> üîÄ Omnite allows for: 
> - Royalties
> - AllowList NFTs
> - Consumable NFTs
> - Rental
> - Fractional NFTs
> - Wallet Staking
> - Dynamic NFTs
> - On-Chain Attributes
> - Cross-Chain Actions
> 
> üîó Check them out here: https://omnite.io/
> 
> 3Ô∏è‚É£ AllSpark: an NFT omni-liquidity aggregation protocol where traders can purchase NFTs on other chains with one click on one chain, without the need to create new wallets and acquire gas tokens.
> 
> ‚ö°Ô∏èA feature I find super interesting is their Trantor sub-protocol: a zero code omni-NFT launchpad and NFT-bridge so any NFT can go cross-chain
> 
> üîó Docs: https://docs.allspark.finance/allspark/
> 
> üîó Site: https://www.allspark.finance/
> 
> 4Ô∏è‚É£ Last up (for now) Omnisea: an NFT creator studio offering No-code, limitless Omnichain mints with automated IPFS and 0% fee.
> 
> üõ†Ô∏è Omnisea offers a creator studio, an NFT and OSEA bridge as well as an OSEA token!
> 
> üîó Docs: https://docs.omnisea.org/
> 
> üîó Site: https://omnisea.org/
undefined says @Stefan How I can use the NftLinker contract of axelar network to transfer nft?
undefined says I was using this docs https://docs.axelar.dev/dev/general-message-passing/examples#nft-linker but for windows it is giving me error on installing the git dependencies.
undefined says There may be issues with Windows. Here is a guide on troubleshooting https://community.axelar.network/t/troubleshooting-windows-clients/2318
undefined says Can you post the error in here, please?
undefined says Error: Unsupported platform: Windows_NT x64
undefined says This error I was getting when installing the dependencies @Stefan
undefined says Ok, thank you. Perhaps @Idris Olubisi | Axelar can help!
undefined says I mentioned this earlier @Titan Hunter#0058  and i totally understand how frustrating it is.

We currently have a dependency on Near, which requires a POSIX system. You can see their instructions for using WSL to run a GNU/Linux environment on top of windows https://docs.near.org/tools/near-cli#windows. 

We have an open issue that is been worked on: https://github.com/axelarnetwork/axelar-examples/issues/127

I will follow up and give you feedback as we progress. 

Thank you @Stefan
undefined says @Idris Olubisi | Axelar can you please elaborate how this error will be solved (Error: Unsupported platform: Windows_NT x64) using the near cli
undefined says I am not able to understand that why I am asking
undefined says No worries. I understand üòÄ . Let me elaborate.

The error you're seeing is due to the current dependency on Near, which requires a POSIX system. However, there is a solution using WSL to run a GNU/Linux environment on top of Windows. The instructions for using WSL can be found in Near's documentation here: https://docs.near.org/tools/near-cli#windows.
undefined says Additionally, our team is actively working on addressing this issue and has an open issue on our GitHub repository (https://github.com/axelarnetwork/axelar-examples/issues/127). We are exploring possible solutions, including updating our dependency on Near or finding alternative solutions that work with Windows.
undefined says Rest assured that we are committed to finding a solution to this issue and will keep you updated on our progress.

I really hope that my message came across clearly and that I was able to address any questions or concerns you may have had. If you need any further clarification or assistance, please don't hesitate to reach out. **I'm here to help in any way I can!**
undefined says Thank you Idris!
undefined says Okay. Thank you I will try this and will get back to you in case of any issues. @Idris Olubisi | Axelar
undefined says hi to all...i am getting this error 
   reason: 'bad response',
    code: 'SERVER_ERROR',
    status: 500,
 when i try to deploy my smart contract to kava? i tried on polygon and everything works fine.I am able to deploy same smart contract on Kava without axelar but with axelar i cant.Can someone help,does someone has same issue? Just to notice i was able to deploy last week but now i can not
undefined says Hello @gojic 

Thank you for bringing to our attention the error you encountered while deploying your smart contract on Kava with Axelar. 

We are currently investigating the issue and appreciate your patience while we work on finding a solution.
undefined says @Idris Olubisi | Axelar thank you for your reply, if this is helpful i am created my own staking smart contract that i tried to deploy, both deployUpgradable function and deployContract function giving me that error
undefined says What Network did you deploy on?
undefined says Hey I was thinking of testing the delegation with cosmos/osmosis
undefined says I have a little near dapp to add a simple widget to is it enough to get an API key from the website? Do you have a discord where I can ask questions?
undefined says Please let me know üôÇ
undefined says Hey @Axelar Builder  you may have seen that Prime hit mainnet today :partywizard: 

We've published a full case study on Axelar's blog, but wanted to share some more details on the TXN flow breakdown. 

From the announcement:

> In Prime‚Äôs hub-and-spoke architecture, assets stay on their native chains. State is synchronized and actions authorized via secure messages passed between chains.
> 
> Prime uses Axelar's General Message Passing to transfer any payload securely between chains including data and function calls, allowing applications to build beyond bridges.

Attached is the diagram and the case study to learn more!

üîó https://axelar.network/blog/case-study-prime-protocol
undefined says What is the common reason the transaction is not confirmed?
undefined says Waiting for the txs fo be finalized
undefined says Could your issue be resolved in the meantime?
undefined says sorry for late response in my country was national holiday. On Kava, on binance or polygon i managed to deploy regularly
undefined says Thank you for your response. Could you kindly confirm if everything is working as expected on Kava now and if the "bad response" error has been resolved? If you are still encountering the same error, I would suggest checking if your RPC has been properly configured.
undefined says i am using testnet, and yes i am still getting this error..i just found on their discord that they have some  non-determinism bug on testnet. maybe this is an issue?
undefined says Yes, that might possibly be the issue.
undefined says Hey guys. Curious to what is the guaranteed minimum time delay between execution on the source chain and the destination chain, independent of the specific chains?
undefined says I am not entirely certain about what is "guaranteed," but rather an average. However, this is contingent upon the chain and its level of finality, among other factors.
undefined says Thanks Idris! So contingent upon the finality of the source chain and then the speed Axelar can process and relay that message
undefined says hello can help me someone to find way to join me this channel  discord in to layer3  misions
undefined says Could you please go to your profile in layer3 and connect your discord account then refresh
undefined says hello i am try disconect and conect again but the option to conect in layer3 is only wallets
undefined says so i try again the steps and again i stop in same problem to discrond in to your channel
undefined says i dont know what i must to do more...can you help me please
undefined says thanks
undefined says discord is not linked   say all the time
undefined says Try to clear your cache and retry
undefined says i did it but nothing...i theaw is about rules the problem
undefined says The alternative would be to reach out to Layer3 for help
undefined says Hi devs! I just wanted to ask that is the Axelar-Polygon team up to provide bridging b/w supernets and other connect chains out yet? I cannot find any reference in the docs. Also, is there any alternative approach out there?
undefined says I am installing an arbitrum node with docker and axelar instructions. How can I check the status of the docker process?
undefined says 
undefined says This command is not working. the error is: `"docker logs" requires exactly 1 argument.`
undefined says Hello @Dani92 

To verify the status of Docker processes, you can utilize the "docker ps" command. This command will display a list of all running containers. By including the "-a" option, you can extend the list to include both running and stopped containers.
undefined says Thank you for reaching out. We appreciate your interest in the bridging functionality between supernets and other connected chains. 

I will conduct a quick check-in with our team to gather the most up-to-date information for you. Once i have confirmed the status, i will revert back to you with the details.

In the meantime, if you have any other questions or if there is anything else we can assist you with, please feel free to let us know.
undefined says Hello @FarrukhRZ 

Thank you for expressing your interest in the bridging functionality between supernets and other connected chains, as mentioned earlier. 

However, we would like to inform you that this feature is not yet publicly available. Rest assured, we will keep everyone updated on our progress and provide well-documented steps and references in our documentation.

Thank you for your understanding and patience.
undefined says I don't get it. I run `docker run --rm -it -d -v /path/to/data/arbitrum:/home/user/.arbitrum -p 0.0.0.0:8547:8547 -p 0.0.0.0:8548:8548 offchainlabs/nitro-node:v2.0.14-2baa834 --l1.url https://eth-mainnet.g.alchemy.com/v2/... --l2.chain-id=42161 --http.api=net,web3,eth,debug --http.corsdomain=* --http.addr=0.0.0.0 --http.vhosts=* --init.url="https://snapshot.arbitrum.io/mainnet/nitro.tar"` 
and it says: 
`Unable to find image 'offchainlabs/nitro-node:v2.0.14-2baa834' locally`
`v2.0.14-2baa834: Pulling from` `offchainlabs/nitro-node`
`9e3ea8720c6d: Pull complete`
`2b5e40acd4e2: Pull complete`
`c288cef2d5ea: Pull complete`
`f9ffc7ad8c56: Pull complete`
`ad0016ac18f8: Pull complete`
`beaad35502fa: Pull complete`
`4f4fb700ef54: Pull complete`
`3ee6d05dc195: Pull complete`
`5b93a0eac543: Pull complete`
`6f642e0b57ad: Pull complete`
`2cf85d4a5d64: Pull complete`
`Digest:` `sha256:11de80e65a13ed65aa3d88501c603f8d190d06bb2f17a52fd0ca4616b84d6f45`
`Status: Downloaded newer image for ``offchainlabs/nitro-node:v2.0.14-2baa834`
`c48ffc675f04b86ae0863f2748ec819aa59a6597ce5e1f05315e8a6d4143d9d8`
And docker ps -a don't shows any runnign docker process...
What to do??
undefined says Hi @Idris Olubisi | Axelar, Thank you for your response. Anxiously waiting for the solution
undefined says You are welcome. üòÄ
undefined says If running the command "docker ps -a" does not show any running Docker processes, there are a few steps you can take to troubleshoot the issue:

- Ensure that the Docker daemon is running using the command: `systemctl status docker` if its not running, start the command. if you are using mac, start the docker desktop.
- Try restarting the Docker service to see if it resolves the issue.
- Then check if the Docker Images are present using the command: `docker images`

After that, Confirm if any Docker containers are running or stopped. You can use the following command to list all containers: `docker ps -a`
undefined says `systemctl status docker` is showing docker as active.
Restarting and checking again, docker is active, but nothing changed if I try to run: `docker run --rm -it -d -v /path/to/data/arbitrum:/home/user/.arbitrum -p 0.0.0.0:8547:8547 -p 0.0.0.0:8548:8548 offchainlabs/nitro-node:v2.0.14-2baa834 --l1.url=https://eth-mainnet.g.alchemy.com/v2/... --l2.chain-id=42161 --http.api=net,web3,eth,debug --http.corsdomain=* --http.addr=0.0.0.0 --http.vhosts=*` (I have downloaded nitro.tar and untared it to `/path/to/data/arbitrum`
docker images shows:
`offchainlabs/nitro-node   v2.0.14-2baa834   f08595d1410f   13 days ago   908MB`
You have another idea?
undefined says Have you replaced `/path/to/data/arbitrum` with your local dir?
undefined says That is my local dir isn't it? I have created this dir an I have putted in the untared file (nitro.tar)
undefined says hi, can I ask which cosmos chains support GMP?
undefined says 
undefined says Cosmos chain with native (consensus layer) support for GMP
undefined says these chains? https://docs.axelar.dev/dev/reference/mainnet-chain-names
undefined says These are all mainnet chains.
undefined says But in general, all Cosmos chains with native (consensus layer) support for GMP can be used.
undefined says I think there is no list on specifically the Cosmos ones
undefined says thanks
undefined says üëç
undefined says Hi,i am trying to deploy my smart contract on mainnet using deployUpgradable function but cant find anuthing in documentation about that, i run npm run deploy evm/mySmartContract mainnet "Polygon" but nothing happened.I created mainnet.json and changed utils.js accordingly to recognize mainnet command but then i get error
 invalid address or ESN name. i used evm contract addesses from your documentation from resources/mainnet but nothing? and can not find anything in your examples,can someone explan me what i am missing here?i am able to deploy on testnet and locally
undefined says this is my mainnet.json file
 {
    "enabled": "+",
    "name": "Kava",
    "chainId": 2222,
    "gateway": "0xC8D18F85cB0Cee5C95eC29c69DeaF6cea972349c",
    "rpc": "https://evm.kava.io",
    "gasReceiver": "0x2d5d7d31F671F86C782533cc367F14109a082712",
    "constAddressDeployer": "0x98b2920d53612483f91f12ed7754e51b4a77919e",
    "tokenName": "Kava",
    "tokenSymbol": "KAVA",
    "gasLimit": 2000000,
    "gasPrice": 35000000000
  }
i see that testnet.json is completly different
undefined says echo $HOME/data/arbitrum
will Show your local dir
undefined says will also check if our documents are upt-date for Arbitrum
undefined says Does this mean, that I have to untar the nitro.tar file into $HOME/data/arbitrum? 
How to check if they are updated for arbitrum? I did everything they say on their website and everything what is on axelar‚Ä¶
undefined says 
undefined says Yes but I downloaded it already, so the setup does not have to this also‚Ä¶
undefined says Hi @Jason Ma | Axelar, sent you a partnership request, can you check my dm? Thank you
undefined says Hi there - I'm interested in using axelar but trying to understand more about your fee structure, specifically for general message passing. I saw this txn (https://axelarscan.io/gmp/0x348ac91d2b89464f9115d3db8c0fec9f6a20b71d16ae48a00d212b5ac712c9d2:348) - can you explain what the base fee is and how it is calculated? It seems quite high here
undefined says 
undefined says Thank you for sharing - can you explain why the fee for the txn above would have been $55? It seems like most of the time it's much lower? Which element is it that's driving this cost? Also what are the fixed prices per chain?

From the doc you shared: 
Network Base Fee - The base fee for any transaction is fixed based on the chains involved, but covers three components of the transaction
-Validator confirmation voting on the Axelar Network
-Relaying of approval on the destination chain
-Costs related to delivering any possible refund on the destination chain
undefined says So if the destination chain reverts, then the gateway will return the tokens on the source chain?
undefined says hi guys, how long the token will be refunded if the tx is failed (invalid chain)
https://testnet.axelarscan.io/gmp/0x9eaeb0c3200ae95a7c19c44c7daf9ec640baebd5cf8694d1db858f27916abc3d:5
undefined says I am using contabo for arb node, I think this node service is too slow to run a node, because it is syncing for 2 days now. Can that be an issue?
If yes, what service are u guys using and what are u paying?
undefined says Hello @drt1993,

Regarding the pricing for each chain, there is no fixed price. Instead, you can obtain estimates for the fees using our SDK's useful query for GMP transactions. When invoking the `callContrac`t or `callContractWithToken` functions, you can retrieve an estimate of the gas payment required for the transaction to be executed on the source chain.

As you mentioned, all the components mentioned in the documentation work together to calculate the total amount, taking into account the network state. Any excess amount paid is refunded at the end of the transaction to ensure a successful end-to-end process.

This approach allows for flexibility in pricing and ensures that the transaction is appropriately funded while considering the dynamic nature of gas fees and network conditions.

If you have any further questions or need more information, feel free to ask.
undefined says Hello @Thrull 

Based on the transaction information you provided, it appears that the transaction was reverted during the initial state of the contract call. This indicates that the contract call did not go through but  i am not sure about the token refund you are referring too. can you make clarifications? or does that answers your questions?
undefined says Eg if I want to send 10usdc on avalche to addresses on osmosis (using gmp). If the tx on the osmosis is reverted or have some issues, will  the sent tokens be sent back?
undefined says Issues like invalid address, right?
undefined says Yep, or contract issues
undefined says I'm concerned that this could result in permanent token loss. However, I will consult with the team to determine if there is any recovery mode available for such an incident and revert soon
undefined says Ah ok, thanks for the answer.
undefined says One more question, can the token be permanent loss if I send between EVM network and tx on dest chain is reverted?
undefined says If the reason for the reversal is an invalid address, then yes.

In the context of USDC transactions, Axelar is unable to verify the legitimacy of the destination address. This responsibility lies with the source chain contract. As a developer, it is imperative that you ensure the validity of the destination address.
undefined says What's up guys
undefined says Hello @Daniel1542 Good to have you here!
undefined says Thanks üòä
undefined says hey, we are looking at Axelar testnet but the chains other than ethereum show a chain name that is not a testnet chain name.
undefined says Does the Axelar testnet not link up to the testnets for these other chains?
undefined says 
undefined says Hi, im trying to add middlewear to cosmos chain,
 ../../../go/pkg/mod/cosmossdk.io/core@v0.5.1/appconfig/config.go:7:2: no required module provides package github.com/cosmos/cosmos-proto/any; to add it:
        go get github.com/cosmos/cosmos-proto/any

im running into this error. It cosmos-pronto/any isnt around anymore
undefined says Hello üëã @0xCookie 


The cosmos-proto/any package is no longer around, but you can use the google.golang.org/protobuf/types/known/anypb package instead. To add this package, run the following command:

`go get google.golang.org/protobuf/types/known/anypb`
undefined says Optimism is not listed here (https://docs.axelar.dev/dev/reference/mainnet-chain-names), does it mean axelar is not compatible with optimism?
undefined says 
undefined says Can an interchain token have a dedicated ERC20 contract on each chain? When I register an existing ERC20 on another chain, it automatically creates a contract for me. I‚Äôd like that to be my own contract if possible.
undefined says 
undefined says Ok, clear answer. Does that mean that I just register my token on the source chain, and deploy my own ERC20 contracts with the correct data on the destination chains?
undefined says Let me clarify:

Chain A registers my ERC20 and gets a token ID

On Chain B I deploy an ERC20 contract, which is ‚Äúmy official‚Äù token on chain B. How do I register that chain B‚Äôs contract of mine officially belongs to my token ID I registered on Chain A?
undefined says Anyone could deploy an ERC20 contract on Chain B and try to trick people into sending to their contract instead of mine, if there is no ‚Äúcentral‚Äù registry right?
undefined says I have created 2 smart contracts, the first is sending tokens from chainA to chainB and the second contract sends them back. I want to test that with hardhat. Is that possible? If no, which way u recommend?
undefined says Hello @stephan üëã 

I am not 100% sure of what you mean by `which is my "official token"` but if you are making your token an interchain token Axelar will configure an interchain token linker for you and then you can choose to register the token on any chain of your choice with your address as the owner.

Check out the interchain token portal to try it out: https://testnet.services.axelar.dev/
undefined says It is possible, @Dani92.

You can initiate a new Hardhat project and subsequently include the callContractwithToken contract. You can find a reference here: https://docs.axelar.dev/dev/general-message-passing/gmp-tokens-with-messages or in the Axelar Examples Repository.

Following that, set up an RPC connection to a testnet and create a deployment script to test the project, similar to the testing process for any Hardhat project.
undefined says For the NFTLinker contract, i have my own NFT contract written that i would like to mint across chain, how much of the NFTlinker example contract would i have to change
undefined says Thanks for the response @Idris Olubisi | Axelar . Maybe I just don't really understand how this interchain token is meant to be used. I have registered my BSC ERC20 token, but I can only have it deployed on other chains by this portal. I cannot for example fill in the address of my ERC20 counterpart on another chain.

I'd expect this UI to have the option to fill in an existing address as well.
undefined says The UI has that functionality. You can simply insert your token contract address. Did you not see the option to do so?
undefined says Do you know where I can find this option?

I can deploy remote tokens, but it only allows me to choose the chain, not to fill in the address.
undefined says And as shown in the screenshot above, I do not have the option to fill in the address of my contract on other chains either.
undefined says It just states "Remote token not deployed"
undefined says To initiate the deployment of your token to multiple chains remotely, you only need to provide the address of the source chain. From there, you can select the additional chains where you wish your token to be deployed, without the need to manually add the remote address. Axelar takes care of the remote deployment process to the other chains.
undefined says Let me know if that answers your question
undefined says But what if I deploy my own contract on those other chains? How can I link two existing ERC20 contracts on two chains?
undefined says I need both ERC20 contracts to have additional functionality, that‚Äôs why I want to deploy both contracts myself.
undefined says Or should I then just use message passing to burn and mint myself, and forget about interchain tokens?
undefined says Apologies for the delay in response.

You will be able to link custom ERC20s to an original ERC20.

I would also like to inform you that we are currently working on a sample code snippet that will enable you to achieve this. We will provide you with further updates as soon as possible.
undefined says Thanks a lot, one last question, will there be any benefits of using Interchain Tokens over GMP and burning and minting myself?
undefined says Interchain Tokens allow you to send tokens cross-chain, build your own asset bridges, build asset transfers into your interchain dApp, build chain-agnostic wallets that aggregate user balances of tokens across chains, and take on many other use cases using the portal: https://testnet.services.axelar.dev/ or sendToken https://docs.axelar.dev/dev/send-tokens/interchain-tokens#interacting-with-your-interchain-token

However, With GMP you can:

- Call a contract on chain B from chain A.
- Call a contract on chain B from chain A and attach some tokens.

They provide distinct functionality that you can leverage when building your Interchain-Native dApp.
undefined says Yes, I‚Äôve read that in the docs. But with GMP I can accomplish the same:

> send tokens cross-chain

This is just a GMP call to another chain, to mint tokens there and burn them on the source chain.

> build your own asset bridges, build asset transfers into your interchain dApp

This is the same as the first point, a way to send tokens from A to B. How do Interchain Tokens help me with that? This is not clarified in the docs.

- build chain-agnostic wallets that aggregate user balances of tokens across chains

This is just calling balanceOf on each chain and adding the results for me? What support for creating wallets do Interchain Tokens offer me? This is not clarified in the docs.

> and take on many other use cases using the portal: [..]

Which use cases? The UI does not show me any, for the simple question how to use Interchain Tokens across chains using self deployed ERC20 contracts we needed several back and forths, and the sendToken docs only explain the use case of sending tokens across, which is the whole point of bridging, as can be done using GMP.

So my question still stands: what are the features that Interchain Tokens give me, over simply using GMP?

Will there for example be better integration with DEXes and other bridges, than when I made my own implementation using GMP? The docs are nice but don‚Äôt detail these differences.
undefined says Hello all!
undefined says I'm a dev building protobox.xyz (S3 compatible storage marketplace and dashboard) as well as protopool.xyz ( ETH liquid staking platform built on DVT and DKG tech with strong emphasis on crosschain and partnerships to build defi strategies)
undefined says Just wanted to reach out regarding Protopool, as we want to ensure our yield bearing LSD token is as portable as possible and include the cosmos ecosystem given it seems to be overlooked by most LSD projects
undefined says Would love to chat with Axelar team regarding this
undefined says As regard your question: `what are the features that Interchain Tokens give me, over simply using GMP?`

Here are a few possibilities of what you can achieve with Interchain Tokens without the need for explicit GMP calls. Please note that the capabilities of Interchain Tokens extend beyond what I am about to mention, as they may vary depending on the use case.

Cross-Chain Transfer: Tokens can be transferred between different chains without explicit GMP calls or custom message passing implementations.

Chain-Agnostic Wallets: Wallets can aggregate token balances from multiple chains, providing a unified user experience.

Asset Bridges: Interchain Tokens enable the creation of bridges for token transfers between different chains.

Interchain dApps: Interchain Tokens can be integrated into decentralized applications for cross-chain functionality and asset transfers.


Please let me know if this response clarifies your concern.

ccing: @Milap @StephenFluin to provide more context
undefined says Thank you for the response Idris, I don‚Äôt mean to complain but you‚Äôre stating the same marketing lines which I tried to address in my latest message.

I‚Äôd like to understand on a technical level what it is that these Interchain Tokens give me, that I cannot make myself using GMP as explained in that message of mine. Whether or not I make the explicit GMP calls, or a similar mechanism is used under the hood for Interchain Tokens doesn‚Äôt really matter for me at the moment. I just don‚Äôt yet see what Interchain Tokens offer me technically.
undefined says @Idris Olubisi | Axelar Would anyone from axelar have 15 minutes to chat regarding our project and integration. We are in full swing development would really like to ensure we properly design so it can be beneficial to the cosmos exosystem via axalar
undefined says i can forward the whitepaper as well
undefined says > For a Cosmos blockchain to support receiving GMP messages (naively or via CosmWasm), it should implement the appropriate middleware in Go as part of the consensus layer.
> 
Does anyone know which chains are already supported this? I think osmosis already has that, since I can call GMP on their testnet, how about other chain like cosmos, evmos, persistence...?
undefined says I hope Idris can direct you to the right person on the team
undefined says Feel free to follow up here by pinging me to forward your inquiry to the team
undefined says All EVM and Cosmos chains with a deployed Axelar Gateway contract can be used for GMP
https://docs.axelar.dev/dev/gmp-overview
undefined says A full list of EVM chains that support GMP can be found here https://docs.axelar.dev/dev/reference/mainnet-chain-names
undefined says I hope this helps but feel free to let us know if you have any further questions
undefined says @Stefan my team is now  in a sprint to complete the technical design of the LSD token for our pool as well as concepts for partnerships and yield strategies
undefined says Is anyone from Axelar available to meet for 15 minutes ?
undefined says 
undefined says Will circle back w the team and try and get some DevRel support for you here
undefined says I see Axelar already replied so I hope you'll get help from DevRel super quick
undefined says üëç :axelarblue:
undefined says @Idris Olubisi | Axelar can we get them some team resources from our end?
undefined says @Axelar Builder We're hosting an Axelar Virtual Machine Builders community call tomorrow!

‚è∞  9:30am EST /  1pm UTC

üìç Google Meets 

If you're interested in building on Axelar's VM or learning more just react to this post and we'll give you  the @AVM tag which gives you access to the call!
undefined says Sure.
undefined says üòçüìø
undefined says Do you know if this is still needed, or just the ibc-hooks Go module?
undefined says @Idris Olubisi | Axelar Hi, do you have any marketing people?
Who can I talk to?
undefined says 
undefined says what happend with a sendToken tx that is not showing on axelarscan? It's there a debbug mode or something like that?
undefined says Hey Everyone,

I'm reposting from general and I'm hoping some big brained folks can help me.

Does Axelar have any kinda of cross chain interoperability functionality with AWS QLDB? 

I'm trying to understand if a platform builds and hosts its products in QLDB, but they eventually want to integrate into ETH or Poly and bring all of their products along with them, is that possible?
undefined says I test it on osmosis, it works fine, so I don't think it needed. Maybe it's old docs.
undefined says Can you share the txn id?
undefined says https://snowtrace.io/tx/0x76b5eb43632a3c30a04ec41b5a0c71a906bddc4aba8e87d569314df6f91cbfea
undefined says Hello Axelar friends!

I'm toying with Cosmos<>EVM GMP and could use some help to test if I've implemented my IBC middleware correctly in my cosmos chain.

I have a cosmos chain `chain-ibc-hooks-1` running a custom middle implementation.
I have registered and activate that chain on `devnet-wk`, and I've also registered `uausdc`:

```yaml
state:
  activated: true
  assets:
  - denom: uausdc
    is_native_asset: false
  chain:
    key_type: KEY_TYPE_NONE
    module: axelarnet
    name: chain-ibc-hooks-1
    supports_foreign_assets: true
  maintainer_states: []
```

I have a relayer properly relaying ICS20 (tested and working) between my chain and `devnet-wk`.

I'm successfully interacting with the Avalanche FUJI contract: https://testnet.avascan.info/blockchain/c/tx/0xb58a29482a52db52b5028bf8332d4a005eed64621fc619a8f30192b0b1f3fea2

I'm basing my test on https://github.com/axelarnetwork/evm-cosmos-gmp-sample/blob/main/native-integration/onboard-devnet.md.

My relayer isn't catching anything. Anything I'm missing? Some pointers toward proper docs? Any working repo for testing?
undefined says Is it possible to recover funds after the transaction fails on the destination chain due to reasons beyond to little gas supplied ?
undefined says It should actually show up. I am surprised this didn't show up. üòï 

I have sent a request to review with the team, I will respond promptly.
undefined says I'm guessing what you you mean by `beyond little gas supplied` here could be cases like wrong address? Leading to loss of funds. If that's the case it could result to a permanent loss.
undefined says But in a case where transactions can get "stuck" in the pipeline from a source to destination chain (e.g. due to one-off issues that arise with relayers that operate on top of the network).

You can check here:  https://docs.axelar.dev/dev/general-message-passing/recovery to see a detailed information about the recovery mode.
undefined says does axelar support cosmwasm? Any tutorial on how to deploy a Cosmwasm contract on axelar?
undefined says That‚Äôs a good example of what I mean, a transaction that makes It to the destination chain but fails e.g. due to wrong data supplied. Wondering what would be the pitfalls of introducing reverse-bridge capabilities
undefined says I want to deploy mainents local with axelar-local-dev. I am on windows and I am not able to install this node_module. Is there a solution for this?
undefined says I just had the same issue. Looks like near-sandbox is the issue. They don't support windows... I removed all mentions of near in the project and in the axelar-local-dev node module so that it does not deploy the local near chain and this made it work for me.
undefined says could someone help me with this issue pls? Do we not have USDC configured on testnet for the gateway?
undefined says I am using the bsc testnet contract address mentioned on the docs and the usdc contract address 0x64544969ed7EBf5f083679233325356EbE738930
undefined says would be great if someone could add that or if there a workaround with another token. I am using the `sendToken` function
undefined says Yes, you are right we have a dependency on Near, which requires a POSIX system. You can see their instructions for using WSL to run a GNU/Linux environment on top of windows https://docs.near.org/tools/near-cli#windows.
undefined says However, we are currently working on a fix for this, and it is being reviewed. I will keep you posted once it's merged. @Dani92
undefined says Its supported.

Can you confirm the properties are passed this way?

```
sendToken(
    "avalanche", // destination chain name
    "0xF16DfB26e1FEc993E085092563ECFAEaDa7eD7fD", // some destination wallet address (should be your own)
    "USDC", // asset symbol
    100000000 // amount (in atomic units)
)
```
undefined says Yes, except ‚ÄòA‚Äô in avalanche is in capitals as in the docs
undefined says here's the trace - any idea?
undefined says if you try to call `tokenAddresses` for USDC here https://testnet.bscscan.com/address/0x4D147dCb984e6affEEC47e44293DA442580A3Ec0#readProxyContract then you get zero address
undefined says So I have to go through all files and check if there is something near related included? Then I have to delete it? 
Or is there an easier way?
undefined says That means I will be able to install it soon? 
Can u estimate when the release will be?
undefined says I am testing GMP in testnet, but seems like the fees is pretty high in all the networks, tried polygon(mumbai) and binance testnets, couldn't get the minimum required amount from the official faucets too! Ethereum testnet(goerli) is taking too long for the confirmation. 
Is there any alternative way to test?
undefined says I hope the team can help you soon.
undefined says In the meantime, the AXL and aUSDC faucet can be found here #üíß‚îÇfaucet. Perhaps this helps you to do the testing (albeit in a different network)
undefined says Soon. This is the PR: https://github.com/axelarnetwork/axelar-examples/pull/135

Its currently being reviewed i will keep you posted.
undefined says This issue has been happening lately, and I believe it will settle down after a while. Another thing to note is that if you are paying for gas, it's likely to be high. However, after the transaction goes through, you will be automatically refunded the remaining fee. Handled by Axelar: https://docs.axelar.dev/dev/general-message-passing/gas-services/refund
undefined says You can get estimate as indicated here: https://docs.axelar.dev/dev/axelarjs-sdk/axelar-query-api#estimategasfee

As Stefan mentioned you can request faucet here #üíß‚îÇfaucet
undefined says @Magnum Opus
undefined says https://testnet.axelarscan.io/gmp/0xfb82cddbaab4511cc05a8e008db3d14600f68bf01d9cb1ed3d31d12329edd650:1
undefined says Optimism Goerli <-> Base struck
undefined says Please fix ASAP
undefined says @Idris Olubisi | Axelar
undefined says Connect your wallet, click on the `Approve` button as shown in the link you shared to approve the transaction.
undefined says It error
undefined says I have tried
undefined says 
undefined says Taking a look. I will revert soon.
undefined says @Chom It has gone through but execution failed because the gas paid wasn't enough.
undefined says Please try recovering it by manually increasing gas on the source chain or executing it on the destination chain using this guide

https://docs.axelar.dev/dev/general-message-passing/debug/error-debugging
undefined says @Idris Olubisi | Axelar https://testnet.axelarscan.io/gmp/0xe841ab656803fbaebb34d3d6f87cca107739cb9d40a0bb3f8d4a3204aab9ad03:1

Another one same problem
undefined says @Idris Olubisi | Axelar Please let team know that this pair has problems
undefined says It has been executed now but nearly 30 minutes doesn't look good
undefined says This transaction was successful.

No error. Kindly confirm please
undefined says @brunitob Thanks for your patience.

After checking-in to see why its not showing up on Axelarscan, i realise destination address was incorrectly encoded in this `TokenSent` event. 

We are expecting a `string`  representation of an address, but what was sent is this byte array `[70 41 197 120 169 228 158 244 170 171 254 224 63 35 140 177 22 37 247 139].`

I suppose it was intended to be `0x4629c578a9e49ef4aaabfee03f238cb11625f78b`
undefined says You can cross check here: https://docs.axelar.dev/dev/send-tokens/overview to confirm how the properties needs to be formatted. Let me know if you need any additional help or question.
undefined says This is due to confirmation time is fairly typical on `Optimism` due to its slow finality. Execution also followed quickly after approval but went through.
undefined says @Idris Olubisi | Axelar ideas?
undefined says I see, i think what you need is `aUSDC` you can request for the faucet on testnet here: #üíß‚îÇfaucet  specifying the network.
undefined says ok - so i need aUSDC on testnets but on mainnets we should be good with USDC, right?
undefined says Yes, use `aUSDC` on testnet
undefined says thanks will give it a go now
undefined says To troubleshoot subsequent issue, you can follow this guide to help debug your smart contract:

https://docs.axelar.dev/dev/general-message-passing/debug/debugging-your-smart-contract
undefined says it works with aUSDC - might save sometime of other devs if we have USDC contract on testnet, just a suggestion
undefined says @Idris Olubisi | Axelar can you help me with a TX not bridged yet? https://axelarscan.io/transfer/0x6b5ca5bc3641781f3f9d9a08a5ff8456a6c40849de394205530db4ce6c172b57
undefined says Taking a look.
undefined says thanks
undefined says Hi @alanrsoares @Axelar Network @talal | DevOps @ Axelar 
We have a rather urgent issue as the Moonbase Alpha Base Fee has skyrocketted to 33.65 DEV. 
I have created an analytic post in developers
undefined says The Base Fee for Moonbase Alpha is back to normal levels now.
Many thanks guys
undefined says Hello @brunitob 

The actual asset being transferred was `USDC`, not `axlUSDC` and `USDC `native to avalanche isn‚Äôt supported on ethereum. 

https://snowtrace.io/tx/0x6b5ca5bc3641781f3f9d9a08a5ff8456a6c40849de394205530db4ce6c172b57

Why its stuck is because `Avalanche USDC` is a different asset.
undefined says To do such swap its easier and better to use https://docs.squidrouter.com/ sdk to facilitate the swap to convert between native USDC.
undefined says Hi!
Hardhat deploy writes json files with ABI and deployment info into the folder deployments/<network>
I noticed when using **deployContractConstant** from "axelar-network/axelar-gmp-sdk-solidity" there are no such json-files. I need them for example to verify the contracts or address arguments for other contracts. Is there a workaround to generate the json-output?
undefined says To generate the json, just compile your contract with hardhat. If everything goes well. The json will be automatically generated
undefined says Hey there ! Is there any programmed update that you are going to support the new filecoin testnet calibration ?
undefined says @Idris Olubisi | Axelar
undefined says While it is not certain at the moment, I will consult with other team members and provide an update if there are any planned developments.
undefined says Thanks !
undefined says Please how can I use the deployContractConstant to deploy the same addresses on different networks, can't get it to work, it's rather deploying different addresses on the different networks for me @Idris Olubisi | Axelar @Stefan
undefined says Hi, is there any full example of token transfer between cosmos chains?
For example, I would like to send the `axlUSDC` token from `osmosis` to `terra2` chain using JS SDK.

Doc(https://docs.axelar.dev/dev/axelarjs-sdk/token-transfer-dep-addr#1-send-tokens-from-a-cosmos-based-chain) is only about getting the `deposit_address`.
So, should I just send the tokens to generated `deposit_address`?
undefined says To deploy the same contract at the same address on different networks using `deployContractConstant`, you need to use the `Constant Address Deployer` with the address. This deployer ensures that the contract is deployed at the same address on each network.

Here's how to use `deployContractConstant`:

```javascript
const { deployContractConstant } = require('@axelar-network/axelar-utils-solidity');

// ... Set up your deployer, wallet, contractJson, and other required variables

// Deploy the contract with the same address on different networks
await deployContractConstant(deployer, wallet, contractJson, key, args);
```

Make sure you have the correct `deployer`, `wallet`, `contractJson`, `key`, and `args` set up for each network you want to deploy the contract on. The `key` should be the same for all networks to ensure the same address is used.

If you still encounter issues, please double-check your setup and ensure you're using the correct `Constant Address Deployer` address and the same `key` for all networks. If the problem persists, you might want to consult the **Axelar documentation** (https://docs.axelar.dev/dev/general-message-passing/solidity-utilities) for more information.
undefined says Did all these, it's still not deploying constant addresses for me, what should be the input for the key, any arbitrary string right?
undefined says I logged the contract address deployer and also even estimated gas for the deployment then added a buffer, same thing, still different addresses, the name of my contract is satellite
undefined says ~~Ok, I'm unsure what the problem could be. I hope Idris can help you.~~
undefined says Yes, you're correct. Once you have generated the deposit address using the AxelarJS SDK, you can send the tokens to the generated deposit address. The transfer will be picked up by the Axelar network and relayed to the destination chain. Here's the example code from the documentation to generate a deposit address:

```javascript
const sdk = new AxelarAssetTransfer({ environment: "testnet" });

const fromChain = CHAINS.TESTNET.OSMOSIS,
  toChain = CHAINS.TESTNET.TERRA2,
  destinationAddress = "terra1x3z2vepjd7fhe30epncxjrk0lehq7xdqe8ltsn",
  asset = "uausdc";

const depositAddress = await sdk.getDepositAddress({
  fromChain,
  toChain,
  destinationAddress,
  asset,
});
```

After obtaining the deposit address, you can send the axlUSDC tokens from Osmosis to the generated deposit address. The Axelar network will monitor the deposit address and relay the tokens to the destination chain (Terra2 in this case) **source** (https://docs.axelar.dev/dev/axelarjs-sdk/token-transfer-dep-addr#notes).

Keep in mind that the destination address format is validated based on the destination chain, so make sure the destination address is a valid address on the destination chain **source** (https://docs.axelar.dev/dev/axelarjs-sdk/token-transfer-dep-addr#notes).
undefined says It didn't work for me so I went back to using axelar's deployUpgradable and made my contracts upgradable again and upped the gas really high using a gas buffer and it worked this time around, thanks tho for your help
undefined says Ah that's great to hear!
undefined says Glad you figured it out!
undefined says Thx for reporting back!
undefined says You‚Äôre welcome ser
undefined says üëç
undefined says Gm guys, got a quick question. Is there a way for us to calcuate gas fees onchain without using the javascript SDK ?
undefined says Yes, you can send the tokens to generated deposit address. The transfer will be picked up by the Axelar network and relayed to the destination chain.
undefined says Thank you @Stefan
undefined says üëç
undefined says MeshSecurity will be able to offer rewards to Axelar Validators and delegators from all connected chains?
undefined says I have question about the `cosmos GMP`.
According to this doc(https://docs.axelar.dev/dev/general-message-passing/cosmos-gmp#chain-support), the receiving Cosmos chains should implement **appropriate middleware** in consensus layer.
So, **ibc-hook** is this **appropriate middleware** ?
or is there any other middleware needed for receiving GMP messages in Cosmos chains?
Thanks!
undefined says I am getting an error checking my balance with axelard in devnet after faucet request? any¬†way I can fix it or check balance anywhere else?
undefined says 
undefined says Hi guys, i have trouble with payment in source chain which are polygon mumbai, i send tokens from mumbai to bsc testnet, but gas cost is too high, i need to provide 9 tesnet matic, i can not get it from fauset, how can i pay for transfer. May be i can pay on destination chain in testnet bnb or smth. Thank you
undefined says Unfortunately, the information extracts provided do not cover the possibility of paying the gas fee on the destination chain instead of the source chain. However, you can try using the `payGasForContractCallWithToken` method to pay the gas fee using a different supported token on the source chain, if you have enough of that token. You can find the list of supported assets for **Testnet** (https://docs.axelar.dev/dev/reference/testnet-contract-addresses).

Here's the function signature for `payGasForContractCallWithToken`:

```javascript
function payGasForContractCallWithToken(
 address sender,
 string calldata destinationChain,
 string calldata destinationAddress,
 bytes calldata payload,
 string calldata symbol,
 uint256 amount,
 address gasToken,
 uint256 gasFeeAmount,
 address refundAddress
) external;
```

Keep in mind that the gas fee must be paid in tokens that Axelar supports. If you still face issues, you might need to acquire more testnet MATIC tokens from other sources or try reaching out to the community for assistance.
undefined says Hey everyone üëã, Leap has recently released their webhooks product for 30+ Cosmos Chains. This is very similar to Helius on Solana. Few things that can be built on top of this are your dapp notifications, discord bots and alerts, governance proposal reminders, Whale alerts etc. If your interested you can DM us here on Discord or on our twitter account for early access. More details on the workflow here: https://twitter.com/leap_cosmos/status/1664695947773857797
undefined says I'm surprised it's so high, usually Polygon -> BNB Chain on testnets takes around ~2 MATIC, but it definitely depends on your execution complexity on the destination chain.  This might be a problem for you on mainnet. A few options you could use.

1. use a different testnet. Before going to production/mainnet, you'll want to make sure everything works 100%, but while developing and debugging, you could use a cheaper testnet pair (I like Avalache/BNB right now but I switch often)
2. Use the axelar-local-dev environment while developing, this way you won't need any testnet coins.
3. Go mainnet for testing, I know this sounds a little unconventional, but the prices you will need to pay based on these chains will likely be relatively small, and the way tokens are converted from one to another will mean that the mismatch in price won't mean much when it comes to fiat.
undefined says I believe's it's expecting an address rather than the shortname of the wallet. Can you try something like: axelard q bank balances axelar1qm3azfzpfxg23zfskteme4zdwnujm5y4qrlrzd --node <node>
undefined says Heyoo, Dan here from Qwoyn Network and Regen Network.  Was hoping to speak to someone about adding our network to the satelite interface so our users can easily transfer axlUSDC to Qwoyn Network.  @Kalid we've spoken in the Regen slack shared channel you guys have.
undefined says As of now, the process of adding a new chain to Satellite is permissioned. The supported tokens on Satellite are manually added by the Axelar team based on usage, demand, and liquidity projections. Adding a chain or token may not be the problem but ensuring the chain has enough liquidity could pose a challenge.
undefined says I hope the team can help you!
undefined says Thanks!  Really what I'm looking for is an easy way for our users to  send Axelar to our chain.  I know this can be done with just using Keplr but the UX isn't as great compared to having an interface such as Satellite.
undefined says hi guys, given an tx hash on axelar.io, is there anyway to get the exact recieved amount on destination chain? I see it on the UI but not sure how to get them.
undefined says Can I apply as a Moderator?
undefined says Feel free to contribute to the discussion and by helping users with their questions.
undefined says You'll definetely get noticed if you go above and beyond to help community members over a longer period of time.
undefined says Hey, does axelar support crosschain function calling without token transfer ?
i couldn't find any documentation for this 
can someone please point me in the right direction.
undefined says You can use Axelar's GMP to call contracts from one chain to another
https://docs.axelar.dev/dev/general-message-passing/overview
undefined says calling a function inside the contract would also work by using gmp ?
undefined says Yes.
undefined says üëã where I could find more information about AVM?
undefined says Ok great am in
undefined says Sounds great!
undefined says Ok awesome ill join the trial for a week so I can get started on the job long term
undefined says Ok great üëç
undefined says one week may not be enough but great to see you contributing to the ecosystem
undefined says Hello.

Does axelar support ERC1155 token transfer ?
undefined says Don't DM the scammer, you'll receive an answer to your question in your #üíª‚îÇdevelopers post
undefined says I think Idris already helped you in #üíª‚îÇdevelopers but just in case...
undefined says We don't have native support for any ERC1155s, but you can bridge them with Axelar's GMP.
Check this video on how to bridge token(erc-20) on-chain with Axelar: https://www.youtube.com/watch?v=pCd_ZqZ93uQ
undefined says GM GM 

I am following this tutorial https://www.youtube.com/watch?v=pCd_ZqZ93uQ

and made a minor modification 

```
function send(
        uint _amount,
        string calldata _receiver,
        string calldata _blockchain
    ) external {
        token.approve(address(gateway), _amount);
        gateway.sendToken(
            _blockchain, // network to send
            _receiver, // address to send
            "aUSDC", // token name
            _amount // amount of token
        );
    }
```

user can select the destination blockchain accordingly. 

these are values in Fuji test network.

```
const IAxelarGateway = "0xC249632c2D40b9001FE907806902f63038B737Ab";
const tokenAddress = "0x57F1c63497AEe0bE305B8852b354CEc793da43bB";
```

but i am getting the error

```
We were not able to estimate gas. There might be an error in the contract and this transaction may fail.
```

The error we usually we get when we make some error in logic. Please someone can help
undefined says I think someone from the tech team needs to take a look at this because I'm not sure how the error can be solved.
undefined says thank you ser, can you please tag them
undefined says Based on the provided extracts, there are a few possible reasons for the error you're encountering:

1. Insufficient gas to execute the transaction: If the prepaid gas is insufficient, you might see error messages like `NOT ENOUGH GAS`, `Insufficient gas for executing the transaction`, or `intrinsic gas too low`. To recover the transfer, you can either manually execute the payload at the destination chain or add more gas to the gas receiver on the source chain. More details can be found in the **error-debugging guide** (<https://docs.axelar.dev/dev/debug/error-debugging>).

2. Error in the destination contract logic: If the error is caused by the destination contract logic, you would see an error message like `Transaction execution was reverted. Please check the implementation of the destination contract's _execute function.` In this case, you should debug your contract and make a new call. You can follow the **Debugging your smart contract** (<https://docs.axelar.dev/dev/general-message-passing/debug/debugging-your-smart-contract>) guide.

To further investigate the issue, you can monitor the state of your General Message Passing (GMP) transactions using **Axelarscan UI** (<https://docs.axelar.dev/dev/general-message-passing/monitoring>). If the transaction failed to get executed on the destination chain, Axelarscan will provide the option for you to either manually execute a transfer on the destination chain or increase gas payment to the gas receiver on the source chain. More details can be found in the **transaction recovery guide** (<https://docs.axelar.dev/dev/general-message-passing/recovery>).
undefined says we are going to mainnet and bridging is the key feature for that. need to itegrate Axelar ASAP
undefined says Tagging @Idris Olubisi | Axelar here for help.
undefined says can I ask what is this error
undefined says the problem(insufficient fee) just happened today, it was working fine for me a few days ago (I didn't do anything different)
undefined says How can i get `Wfil` in filecoin testnetwork ??
undefined says @Stefan
undefined says Are you using the  `getGasPrice` endpoint? Because it returns a conversion rate of gas prices between two chains at a certain time. It does not indicate the total gas for a gmp call and could result in the error.  

To initiate a gmp call, you would need to pay for 
1) the network base fee 
2) gas for execution 

I'd suggest to use the `estimateGasFee`  method to get the estimation (https://docs.axelar.dev/dev/axelarjs-sdk/axelar-query-api#estimategasfee). You can pass the gas limit, src/dest chains of the gmp call, and the token to pay for gas to the method. It will calculate both fees and give you an estimation to be paid in the token you want to pay on the source chain.
undefined says How can I connect a custom evm that you dont have listed? I heard something a while back about needing to wait for self-service, then I thought I saw an announcement somewhere... How would I accomplish self service on a custom evm?
undefined says Also do you require a validator node  from both networks? Can it still be done if that is not possible atm?
undefined says I'm looking for the wbtc token icon associated with the Axelar bridge so I can add it to the celo-token-list (used by the Uniswap interface).

Is this the correct icon? https://github.com/axelarnetwork/axelar-docs/blob/main/public/images/assets/wbtc.png?
undefined says This is the dumbest mistake a developer can make i did not fund the smart contract, that why it is showing this error ü´†  Stupidity at peak
undefined says Oh, I thought you had already done that. Sorry for missing it, but I'm glad everything is fine now.
undefined says Yes
undefined says https://tenor.com/view/neil-patrick-harris-upset-disappointed-sad-gif-13711197
undefined says Stupidity at peak
undefined says Yeah I know
undefined says Adding a new chain to Axelar is permissionless. It takes about 10 minutes to integrate a new blockchain. Here are the basic steps outlined by Axelar's co-founder Sergey: https://twitter.com/axelarcore/status/1499053636969709568. Making sure the chain has enough liquidity may be the difficult part. Feel free to reach out to Milap for help with this process.

Here's some basic information about connecting EVM-compatible blockchains to Axelar (from the perspective of a validator).

To connect an EVM-compatible blockchain, Axelar validators must run a node for the new EVM chain and obtain a secured and private RPC endpoint for the EVM chain. This is usually done by the validator running their own node for the EVM chain and using their own RPC endpoint. After this is set up, the validator needs to inform Axelar about their support for this new chain and submit a command to Axelar, registering their validator as a chain maintainer for the new EVM chain (**source** (<https://docs.axelar.dev/learn/validators>)).

As for requiring a validator node from both networks, it is not required for all Axelar validators to support the new EVM chain. As long as a set threshold of validators register as a chain maintainer, the ability to enable the chain at the network level is supported (**source** (<https://docs.axelar.dev/learn/validators>)).
undefined says üëç
undefined says Just stay on it!
undefined says Does Axelar support Mantle?
undefined says > As long as a set threshold of validators register as a chain maintainer
What is the set threshold? Can I just supply a private rpc endpoint?
undefined says The set threshold for validators to register as a chain maintainer is not specified in the docs.
undefined says Tagging the validator expert @Rok | Qubelabs here, perhaps Rok knows!
undefined says Hi  @Ilya Lukyanov  @Idris Olubisi | Axelar , 
We are experiencing issue with GMPS from Moonbeam to Fantom  https://axelarscan.io/gmp/search
https://axelarscan.io/gmp/0xb4c7da1595652c0c4d995c04f5dcce3f6f4ab193f6ae922d06e31774830f0b85:1
undefined says How to bridge ausdc from arbitrum to optimism??
undefined says Question from general chat
undefined says Is it normal for Moonbeam to Fantom Gas Fees to go from about 0.5 GLMR to 2.337.  Seems a bit high
undefined says The gas fees can fluctuate significantly depending on various factors, such as network congestion, demand for transactions, and the complexity of the operations being performed on the network.

If you're experiencing a sudden increase in gas fees from 0.5 GLMR to 2.337 GLMR, it could be due to increased network activity or other factors that are driving up the fees.am not sure  the exact reason for the increase.

It's worth noting that gas fees can vary across different blockchain networks, and comparing the fees between different networks may not provide an accurate comparison. Each network has its own unique dynamics and fee structures.
undefined says Oh great thanks
undefined says I'm not sure what the most recent threshold is, but it should be higher than 60%. Private RPC endpoints can be used, but validators are encouraged to use their own RPC nodes for the chains they choose to maintain.
undefined says Seems like the transfer completed in the meantime?
undefined says The end users can do that by using the Satellite:
https://testnet.satellite.money/?source=arbitrum&destination=optimism&asset_denom=uausdc&destination_address=
undefined says Ok  thanks @Rok | Qubelabs
undefined says Indeed. Many thanks
undefined says Hello sers, it is difficult to get testnet ETH on Goerli
Is Axelar available on Sepolia?
undefined says Not at the moment
undefined says @Stefan play help out here üíØ thank you
undefined says @Stefan hi ser, any solution for this?
undefined says did you try the faucets from Coinbase and Alchemy?
undefined says Axelar can only help out with this one #üíß‚îÇfaucet
undefined says @Idris Olubisi | Axelar @Ilya Lukyanov 
Have been waiting 26mins for this GMP to execute https://axelarscan.io/gmp/0x54929cb2e9c2f0db5daa1963fcdc3b2b40bfe90344acab3f801c85cdfa392ac3:32
I tried clicking approve but with no success. Any suggestions please?
undefined says ok thank you
undefined says yes, but they give out very small amounts every 24hrs
any way you could supply some goETH?
undefined says Axelar does not have a goETH faucet, unfortunately
undefined says does the faucet work for anyone?
undefined says it appears the last time testnet faucet worked was 7am today?
undefined says It's been worked on by the dev team.
undefined says It's already been answered by@Rok | Qubelabs
undefined says Hello devs, we did an initial analysis of your defi liquidity profile on our new Liquidity Health Dashboard. Basically its our contribution to a collaborative industry standard for credentialing and risk rating to better power fundamental analysis in defi.¬†This entire system is built solely on on-chain data. Would love to show you what we build and get some feedback. TLDR: We are a bonding protocol and multi-chain DEX focussed on deepening protocol owned  liqudity and treasury diversification on BNB, Polygon, Arbitrum and Ethereum. Let me know what your thoughts are!
undefined says Pls what‚Äôs the network used to get the faucet and how to get it
undefined says #üíß‚îÇfaucet  here's the faucet channel
undefined says We've had this conversation in #üîó‚îÇgeneral already, if you're looking for faucets that are able to send tokens used gas I'd ask that specific question here as I expect other developers have come across this problem as well.

Like I said, the #üíß‚îÇfaucet will not give any tokens you can use for gas.
undefined says I‚Äôm sorry bro but I‚Äôm kinda confused
undefined says Axelar provides a `AXL` and `aUSDC`  faucet for the testnet (lisbon-3). The faucet bot sends `AXL` and `aUSDC` to your axelar or EVM address. You can query the bot via posting `!faucet [chain] [address]` here. And you can move `aUSDC` to another chain via testnet Satellite: https://testnet.satellite.money/?source=axelar&asset_denom=uausdc

To add Axelar testnet to your Keplr wallet, select `Autofill from Keplr` here:
https://testnet.satellite.money/?source=avalanche&asset_denom=uausdc&destination=axelar
undefined says üëç
undefined says Good morning bro this is on Keplr wallet and I‚Äôm using MetaMask
undefined says how i can deploy alexer node ?
undefined says Hello, the docs for node-operators are available at https://docs.axelar.dev/node/
undefined says Hey all, ICYMI in the #üîä‚îÇbuilder-announcements channel, 

Check out Axelar's latest blog post **"Build a Full-Stack Interchain Application With Next.js, Solidity & Axelar"**

üìç You'll learn how to build a full-stack interchain decentralized application with Next.js, Solidity and Axelar General message passing to send messages from one blockchain to another.

üñáÔ∏è  Read more here: https://axelar.network/blog/how-to-build-interchain-dapp-with-next.js-solidity-and-Axelar
undefined says hey guys, I'm trying to write some web3.py scripts that estimate gas on a transaction sending USDC cross-chain from Ethereum (source) to Arbitrum (dest). My tx execution with the sendToken function continues to be reverted with the contract logic error decoded to "axlUSDC". Seems there is an issue with the symbol parameter and not sure what that is. USDC has been approved for spending to the Gateway Contract so that‚Äôs not the issue.

I'm just following the docs, is there something I'm doing wrong?
undefined says Fixed it! Follow up question: does the units of gas used for the sendToken function include intermediary cross-chain steps like the relayer fee?
undefined says No, the gas used for the `sendToken` function does not include intermediary cross-chain steps like the relayer fee. The gas used for the `sendToken` function is specific to the execution of the function on the source chain.

The relayer fee is a separate cost charged by the Axelar network for all cross-chain token transfers to pay for network-level transaction ("gas") fees across chains. This fee is fixed and depends on the asset, the source chain, and the destination chain. It is not a percentage of the transfer amount.

For example, if you are transferring USDC tokens from Avalanche to Osmosis, the relayer fee might be 1.5 USDC, and this would be deducted from the amount of assets being transferred cross-chain. The recipient would then receive the transferred amount minus the relayer fee.

You can query the current gas relayer fee via node query:

```bash
axelard q nexus transfer-fee [source chain] [destination chain] [amount]
```

And the per-chain gas relayer fee info can be queried via:

```bash
axelard q nexus fee-info [source chain] [token]
```

Remember, the total amount of a token sent to a deposit address must be greater than the gas relayer fee. If it's not, the deposits will wait in the queue until a future deposit brings the total above the fee.

Sources:
- **Mainnet Documentation** (<https://docs.axelar.dev/resources/mainnet>)
- **Testnet Documentation** (<https://docs.axelar.dev/resources/testnet>)
- **Axelar Pricing Documentation** (<https://docs.axelar.dev/dev/reference/pricing>)
undefined says thanks for this. Still getting some strange results. The gas estimate I get on the `send` function when transferring 200 USDC from Ethereum to Arbitrum is 77,158 gas units. I understand this is the cost to execute that function on the source chain (Ethereum) only.

The pricing docs say `callContract` allows user to 'pay all of the gas costs in a single transaction on the source chain in its native currency.' But when I execute that with the same payload data, I receive 35,103 gas units. Much smaller... any help understanding this would be great  üòÉ 

For context, I'm running a study for Alchemy research and am gathering data on message passing costs. So obviously my results need to be accurate.
undefined says Hey y'all. Posted this in the developers channel but figure may also get an easier response here:

I've been looking into some cross chain messaging solutions and have run into the same problem just about everywhere - finality on Polygon takes like 20 minutes. This craters the UI of the application I'm trying to build for a client. I was told that Axelar's executor service has " a network of relayers that can execute a signed txn on behalf of a user & then be reimbursed + a fee.  These relayers are willing to absorb finality risk on Polygon so txns typically can be executed in <20 seconds; however, if no relayer picks up the txn (very rare) it would still take 20min.".

Is this true, and is that the kind of finality I could expect when using the Axelar executor service? Any relevant documentation that states this would be amazing
undefined says following up here
undefined says Anyone know if the relayer fees are constant, or if they've changed?
undefined says Trying to cal getTransferFee() for usdc, getting different values from calling the API versus here:
undefined says https://docs.axelar.dev/resources/mainnet
undefined says For instance, in the mainnet box thing I'm getting 21.5 USDC for ETH > Avalanche, but for some reason my local version is getting 61.5 a USDC fee. Wondering if I'm doing something wrong.
undefined says The polygon-moonbeam fee is the same as local for uusdc
undefined says Yeah I guess via the SDK eth is 60 right now, wanted to ask if that's correct as the link above is 20
undefined says The `estimateGasFee` method in the AxelarJS SDK is used to calculate the total cost of a transaction, including both the network base fee and the execution fee. The network base fee is fixed and covers three components of the transaction: validator confirmation voting on the Axelar Network, relaying of approval on the destination chain, and costs related to delivering any possible refund on the destination chain. The execution fee, on the other hand, is variable and depends on the complexity of your `_execute` method on the destination chain **source** (<https://docs.axelar.dev/dev/reference/pricing>).

When you're estimating the gas for the `send` function, you're likely only considering the execution fee on the source chain (Ethereum in this case). However, when you're using `callContract`, you're also accounting for the network base fee and the execution fee on the destination chain (Arbitrum in this case). This could explain why the gas estimate for `callContract` is smaller than the gas estimate for the `send` function.

It's also worth noting that the `estimateGasFee` method allows you to specify an estimated gas limit. If you don't specify a gas limit, a default gas limit of 700,000 gas is used **source** (<https://docs.axelar.dev/dev/reference/pricing>). This could also be affecting your gas estimates.

Finally, keep in mind that gas prices can be volatile, especially on certain EVM chains. To account for this, it's recommended to include certain buffers (i.e., pay additional gas upfront) to avoid transactions getting "stuck" in the pipeline because of out-of-gas issues **source** (<https://docs.axelar.dev/dev/reference/pricing>).
undefined says The relayer fees on the Axelar network are not constant and can change. They depend on the asset, the source chain, and the destination chain. The relayer fee does not take a percentage from the transfer amount. You can query the current gas relayer fee via node query using the following command:

```bash
axelard q nexus transfer-fee [source chain] [destination chain] [amount]
```

For example, to transfer USDC from Avalanche to Osmosis, you would use:

```bash
axelard q nexus transfer-fee avalanche osmosis 1000000000uusdc
```

You can also query the per-chain gas relayer fee info using:

```bash
axelard q nexus fee-info avalanche uusdc
```

If you're using the AxelarJS SDK, you can use the `getTransferFee` function to retrieve the fee charged by the relayer for a transfer:

```javascript
const fee = await axelarQuery.getTransferFee(
 CHAINS.TESTNET.OSMOSIS,
 CHAINS.TESTNET.AVALANCHE,
 "uausdc",
 1000000
);
```

Please note that the total amount of a token sent to a deposit address must be greater than the gas relayer fee. If it's not, those deposits will wait in the queue until a future deposit brings the total above the fee.

The discrepancy you're seeing between the documentation and your local version could be due to changes in the network since the documentation was last updated. It's always best to query the current fees directly from the network.
undefined says Hello! When is interchain tokens feature expected to be launched on mainnets?
undefined says Great, thanks. So sounds like the summed gas estimates from `send` and `callContract` gives me a representation of the total gas cost. Is that right?
undefined says Following up to this, does anyone have any idea on this?
undefined says stucked tx https://axelarscan.io/transfer/0xb955fedbcd58dfe5a4719324c45bc4c19af92bea22eb0186397ba456966a7787
undefined says If you have a stuck transfer, please send in a support ticket via https://axelar.zendesk.com/hc/en-us/requests/new and also include your destination chain/address.
undefined says Greetings devs!  I am trying to figure out how to build an Axelar GMP gateway to connect a non-EVM and non-Cosmos chain.  Any advice would be much appreciated!
undefined says The official docs mainly discuss the use of Axelar's General Message Passing (GMP) for EVM and Cosmos chains. For GMP to work, both chains must be EVM or Cosmos with a deployed Axelar Gateway contract. 

However, it's mentioned that Axelar is adding new chains and chain technology stacks all the time.

Tagging @Idris Olubisi | Axelar for help with answering the question.
undefined says Thx Stefan!  @Idris Olubisi | Axelar  How can I adapt Axelar's GMP gateway for non-EVM and non-Cosmos chain that has rest API interface?
undefined says Hey @dr_kent_lau_main_dev_july2023 üëã

We don't currently fully support chains that aren't EVM or Cosmos, but with our upcoming AxelarVM releases, we'll be unblocking the community from adding these chains themselves.
undefined says Hey devs, doing some research into your liquidity. Do you plan to deepen your liquidity on BNB or Polygon in the foreseeable future, are there any liquidity privision incentives programs?
undefined says Hey all, which cosmos chain was the last one to implement the GMP middleware?
undefined says I am unfortunately not aware of plans concerning liquidity on BNB or Polygon.
undefined says I hope the team can clarify.
undefined says All Cosmos chains are automatically supported by default on the Axelar network. Adding GMP support is permissionless so we do not know which chain was the last one to implement it. (For a Cosmos blockchain to support receiving General Message Passing (GMP) messages, it should implement the appropriate middleware in Go as part of the consensus layer.)
undefined says Thank you ser. I'm really just looking for an example to follow üò≠ . I'm implementing the gmp middleware for cosmwasm wasmbindings<>GMP integration for the Jackal Protocol üôè . If you know of a chain that's definitely implemented it, please share--bless ‚ù§Ô∏è
undefined says Oh, I get it. I hope the Axelar team can help you with examples. In the meantime, here are some points but please feel free to reach out to the team for help. 

To implement General Message Passing (GMP) for a Cosmos chain, you need to implement the appropriate middleware in Go as part of the consensus layer. This will allow your Cosmos blockchain to support receiving GMP messages, either naively or via CosmWasm. Unfortunately, the extracts do not provide a specific example of how to implement this middleware.

Axelar has provided a **Cosmos GMP Example Project** (<https://github.com/axelarnetwork/evm-cosmos-gmp-sample/>) that you can refer to. This project includes examples of sending and receiving messages in all cases, which might be helpful for your implementation.

For sending a message from CosmWasm Rust code, you need to send a message to the Axelar Gateway via IBC. The payload should be encoded using **ethabi** (<https://github.com/rust-ethereum/ethabi>). Here's a code snippet that shows how to send a message to multiple recipients:

```rust
pub fn multi_send_to_evm(
 deps: DepsMut,
 env: Env,
 info: MessageInfo,
 destination_chain: String,
 destination_contract: String,
 recipients: Vec<String>,
 fee: Option<Fee>
) -> Result<Response, ContractError> {
 let config = CONFIG.load(deps.storage)?;
 
 let addresses = recipients
 .into_iter()
 .map(|s| {
 match s.parse::<H160>() {
 Ok(address) => Ok(Token::Address(Address::from(address))),
 Err(_) => Err(ContractError::InvalidRecipientAddress { address: s }),
 }
 })
 .collect::<Result<Vec<Token>, ContractError>>()?;
 let payload = encode(&[Token::Array(addresses)]);
 
 let msg = GeneralMessage {
 destination_chain,
 destination_address: destination_contract.clone(),
 payload,
 type_: 2,
 fee
 };
 
 let coin = cw_utils::one_coin(&info).unwrap();
 let ibc_transfer = MsgTransfer {
 source_port: "transfer".to_string(),
 source_channel: config.channel.to_string(),
 token: Some(coin.into()),
 sender: env.contract.address.to_string(),
 receiver: AXELAR_GATEWAY.to_string(),
 timeout_height: None,
 timeout_timestamp: Some(env.block.time.plus_seconds(604_800u64).nanos()),
 memo: to_string(&msg).unwrap(),
 };
 
 // Base response
 let response = Response::new()
 .add_attribute("status", "ibc_message_created")
 .add_attribute("ibc_message", format!("{:?}", ibc_transfer));
 
 return Ok(response.add_message(ibc_transfer));
}
```

This function sends a message to multiple recipients on an EVM chain from a CosmWasm contract. It creates a `GeneralMessage` with the destination chain, destination contract, payload, type, and fee, and then sends this message via IBC.

Remember to check out the **Axelar documentation** (<https://docs.axelar.dev/dev/general-message-passing/cosmos-gmp>) for more details.
undefined says Yes, I've been looking at all of that. Just keen on production code on a live chain for the go middleware part. Thank you. If any devs see this msg please come with the SOS üòÇ --appreciate it
undefined says Did you take a look at Osmosis?
undefined says Perhaps this helps...
undefined says yeh I've looked at their app.go quite a bit, no mention of "middleware" or "gmp"
undefined says same goes for persistence, cosmoshub, umee, scrt
undefined says I refuse to believe these guys haven't implemented it üòÇ
undefined says Maybe they're doing it differently--I don't know ü§∑‚Äç‚ôÇÔ∏è
undefined says honestly I could just start white knuckling it with the sample-middleware README--just trying to save valuable sweat equity you feel üòÑ
undefined says Ok, I'm tagging @Idris Olubisi | Axelar here for help!
undefined says aeeee ty ty ser
undefined says Thanks @Stefan, hightly appreciated! Who on the team can I reach out to for liquidity management plans?
undefined says Difficult to say as there is no direct contact for liquidity management. Feel free to reach out to Jason Ma | Axelar#9781 or Jake | Axelar#7393.
undefined says may i know how often the gas prices are updated?
undefined says anyone knows if calling `sendToken` directly on the gateway contract works for evm <> cosmos chains?
undefined says This is not specified in the docs. The only answer I was able to find about this was this response https://discord.com/channels/770814806105128977/955655587260170272/1099684430097948692

Here are the details on how estimate gas works:

The `estimateGasFee` method in the AxelarJS SDK is used to calculate the total cost of a transaction, including both the network base fee and the execution fee. The network base fee is fixed and covers three components of the transaction: validator confirmation voting on the Axelar Network, relaying of approval on the destination chain, and costs related to delivering any possible refund on the destination chain. The execution fee, on the other hand, is variable and depends on the complexity of your `_execute` method on the destination chain (<https://docs.axelar.dev/dev/reference/pricing>).

When you're estimating the gas for the `send` function, you're likely only considering the execution fee on the source chain (Ethereum in this case). However, when you're using `callContract`, you're also accounting for the network base fee and the execution fee on the destination chain (Arbitrum in this case). This could explain why the gas estimate for `callContract` is smaller than the gas estimate for the `send` function.

It's also worth noting that the `estimateGasFee` method allows you to specify an estimated gas limit. If you don't specify a gas limit, a default gas limit of 700,000 gas is used (<https://docs.axelar.dev/dev/reference/pricing>). This could also be affecting your gas estimates.

Finally, keep in mind that gas prices can be volatile, especially on certain EVM chains. To account for this, it's recommended to include certain buffers (i.e., pay additional gas upfront) to avoid transactions getting "stuck" in the pipeline because of out-of-gas issues  (<https://docs.axelar.dev/dev/reference/pricing>).
undefined says thank you for the prompt reply!
undefined says @Stefan do you know about my 2nd question? i'm trying to do a transfer from arbitrum (evm) -> carbon (cosmos)  via `sendToken`. I've sent a support ticket for details of testing tx that did not go through, but just wanted to check if it's supposed to even work
undefined says I hope the team can jump in here with help. Until then, I hope the following helps:

Calling `sendToken` directly on the Axelar Gateway contract should work for transferring tokens between EVM and Cosmos chains. The `sendToken` function is part of the `IAxelarGateway` interface implemented by the Axelar Gateway contract. This function is used to send tokens from one chain to another, including from EVM to Cosmos chains.

Here is the `sendToken` function signature:

```javascript
function sendToken(
 string memory destinationChain,
 string memory destinationAddress,
 string memory symbol,
 uint256 amount
) external;
```

You need to locate the Axelar Gateway contract on the source chain (in your case, Arbitrum), execute `approve` on the source chain (ERC-20), and then execute `sendToken` on the Gateway.

However, please note that the successful execution of this function depends on various factors, including the correct setup of the Gateway contract, the approval of the token transfer, and the correct input parameters for the `sendToken` function.

If your transaction did not go through, it could be due to a variety of reasons, such as insufficient gas, incorrect input parameters, or issues with the Gateway contract. It's good that you've sent a support ticket for further investigation.
undefined says thank you, i've did all the steps you've outlined, although i'm unsure whether i passed in the correct symbol for the destination chain. there doesn't seem to be a list of symbols for cosmos chains based chains in the docs
undefined says Has the multisig been updated as it has been advised  by the Bridge Assessment Committee launched by Uniswap?
undefined says Hey Stefan, my transfer from arbitrum (evm) -> carbon (cosmos) got processed successfully. Although may i ask why the transfer fee isn't shown in this link?  https://axelarscan.io/transfer/0xd50c9feff18fa8b76e164656bf3c33deaf7c615af24dbc3f3acabc850fb26167 And also, why does the transfer take > 4 hours to arrive at the destination chain? Are the txs flushed only every few hours?
undefined says The missing fee seems like a display issue on the new explorer for the `axlweth` asset. Thanks for bringing it up! cc @PJ @Sirapop
undefined says Thanks Rok!
undefined says How does relaying work for new EVM chains? What is responsibly for scanning them and picking up transfers to the gateway contract?
undefined says 
undefined says If I send a message over axelar to a contract on destination chain B, is there any way for that contract to verify the message came from me and not someone else?
undefined says Answered in #deleted-channel
undefined says Relaying for new EVM chains, or any chains connected to the Axelar network, is handled by relayers. Once a Gateway receives a message, it generates an event. Axelar runs relayer services which observe all connected chains, and these relayers pick up the event and submit it to the Axelar network for processing. These relayer services are a free, operational convenience provided by Axelar, and can be run by anyone who wishes to create and use their own relayer service instead.

After a message is approved by Axelar network validators, it needs to be authorized. The Gateway can only allow actions on the external chain if the number of validators holding key shares who authorize the action reaches a set threshold. Once a message is authorized, anyone can take this signed message and submit it to the destination chain for processing. Another set of relayer services monitors outgoing transaction queues containing cross-chain messages that are already approved and signed, and periodically submits these transactions to external chains.
undefined says It is loaded normally on my end. 
It could be a delay. I'll investigate it further. Thanks for flagging.
undefined says hey @Stefan I was trying out a GMP tx on arbitrum
do you know what it means for it to be stuck at Receive?
https://axelarscan.io/gmp/0xbe47467bec72ca9a3d129412e20a66b23bb293eb1cf6f26b047a0585ad576737
undefined says Could you please open a support ticket here https://axelar.zendesk.com/hc/en-us/requests/new and we'll take a look!
undefined says hey stefan, the request form seems to be for satellite queries only
undefined says my GMP tx does not have an asset
undefined says Sorry, I've only seen this error for Satellite transactions but not for GMP. I'm tagging @Idris Olubisi | Axelar here for help.
undefined says thank you stefan
undefined says Started a thread.
undefined says hey stefan, how do one get started in running our own relayers?
undefined says Running a relayer is permissionless, i.e. anyone can set one up. But only the validators in the active set are incentivized. Relayer nodes are not incentivized on the network.

However, the docs do not include specific instructions on how to set up and run your own relayer services on the Axelar network. The relayers are a different and completely permissionless activity on the network, so if one relayer goes down, anyone can step in and spin up a new connection to support the relaying services. Anyone can provide relaying services by calling APIs we‚Äôve exposed,  and you only really need 1 relayer for liveness.

What the docs mention is that anyone can run their own relayer services and submit events to Axelar network. These relayer services are a free, operational convenience Axelar provides, and can be run by anyone who wishes to create and use their own relayer service instead.

Feel free to reach out to Kalid (kalidax) if you are interested in learning more about setting up a relayer.
undefined says Hey Axelar Network frens! This is Fav from Hats Finance, the most cost-efficient crowd audit competition and on-chain bug bounty protocol. Who can i talk to regarding a potential partnership?
undefined says Axelar's code base is audited, you can find available audit reports here: https://github.com/axelarnetwork/audits. Please message elaipson#1578 for marketing inquiries and Jason Ma | Axelar#9781 or Jake | Axelar#7393 for business development related inquiries.
undefined says Thanks for the info and guidance fren!
undefined says Sure, anytime!
undefined says Hey guys. 

A couple of questions on the Interchain Token Service if you don‚Äôt mind (if I should ask elsewhere please do let me know and I‚Äôll redirect ‚ò∫Ô∏è)

1) I note from the Sushi testnet that Terra (cosmos chain) isn‚Äôt on the ‚Äúcoming soon‚Äù list. Is there any plans to integrate the same? 
2) what‚Äôs needed to access the ITS? There is a protocol called ‚Äúenterprise‚Äù on Terra and there are tokens that we would like to spread to Eth but are unable to do so absent ITS.
undefined says Let's see if we community members can help you. Feel free to let us know if not and we'll forward your questions to the team! 

1) I am not aware of plans to integrate Terra (Cosmos chain) into the Interchain Token Service (ITS), there were no announcements about it. 

2)  ITS supports any EVM-compatible blockchain that is integrated with the Axelar network.

To access the Interchain Token Service (ITS), you would need to deploy token managers as outlined here: https://docs.axelar.dev/dev/send-tokens/interchain-tokens#making-existing-tokens-interchain. You can also use https://testnet.interchain.axelar.dev/ to take your ERC-20 token interchain.

> If you already have an ERC-20 token on one or more blockchains, you can turn it into an Interchain Token by deploying Token Managers. Token Managers can be either Lock/Release or Mint/Burn. For Mint/Burn Token Managers, you''ll need to give the Token Manager permissions to mint and burn tokens on your behalf as tokens move between chains.

**Axelar docs** https://docs.axelar.dev/dev/send-tokens/interchain-tokens
undefined says Thanks Stefan. Grand, don't think there's much point with 2 unless 1 happens. Anyway to request Terra integration?
undefined says hi guys!, I'm very new in the axelar ecosystem and I have a question. I have two contracts one in avalanche and the other in polygon, I want to send a transaction on avalanche and execute the callContract function with destination to polygon, I need polygon update some data and return a boolean if this info was updated correctly, Can the `_execute` function on my avalanche contract catch that boolean or I need do something else? and in the payload just I have to send the name of the function and the parameters?
undefined says is there a timeline for when cosmwasm is expected to make it to mainnet?
undefined says maestro site is giving error
undefined says it s not working ?
undefined says Not sure if this is the right place to ask, found no mention of this on Github or Forums or Gitbook.

If an L1 team for a Substrate chain was interested in integrating with Axelar, e.g. to bridge into Ethereum, then

a) does Axelar currently work with Substrate chains? I saw Moonbeam was on there, but they also have an EVM shim over their validators, so may perhaps not be the same.
b) does the L1 team need to somehow update its own state machine to support Axelar?
c) does Axelar community/org/labs need to grant permission? Is there any public information on such a process?
undefined says I think the best approach would be to reach out to the team to request an integration.
undefined says Feel free to reach out to Jason Ma | Axelar#9781 or Jake | Axelar#7393
undefined says Awesomes, thank you... apols if this seems dumb but how does one do that?
undefined says Ignore me sir, would have helped if I scrolled down ü•≤
undefined says Awesome, and no worries!
undefined says Happy to help if you need any help!
undefined says Axelar's General Message Passing (GMP) allows a developer to call any function on any other connected chain. This means you can call a contract on Polygon (chain B) from Avalanche (chain A). However, the docs do not provide specific information on whether the `_execute` function on your Avalanche contract can catch a boolean returned from the Polygon contract. Sorry, I do not know this. I hope the team can jump in here.

The transaction flow involves sending a message from a smart contract on one chain (Moonbeam in the example) to a smart contract on another chain (Avalanche in the example), and updating a property on the latter. The process involves deploying a smart contract to all the EVM chains in the local developer environment, calculating the estimated gas cost of executing the method on the destination chain, invoking a method on the deployed smart contract on the source chain, and finally, the relay services detecting the gas paid on the source chain and executing the smart contract on the destination chain.

If a transaction fails to relay from the source chain into the Axelar network for processing, the Axelarscan UI will show that the transaction has not been `APPROVED`. It will show an option to "APPROVE" that will manually resubmit a request to the network. If the transaction fails to get executed on the destination chain, Axelarscan will provide the option for you to either manually execute a transfer on the destination chain or increase gas payment to the gas receiver on the source chain.

As for the payload, the docs do not provide specific information on what it should contain. However, it's reasonable to assume that it would need to include the necessary information for the transaction, such as the name of the function to be called and the parameters to be passed to it.
undefined says 
undefined says Axelar sandbox is down
undefined says @Stefan
undefined says 
undefined says Axelar testnet is down!!!
undefined says Interchain Service portal is also down
undefined says Hello! If I call `callContractWithToken` between two EVM chains and send USDC on one end, does it get automatically wrapped into axlUSDC on the other side? Or do I receive canonical USDC? 

I see that Ethereum mainnet doesn't have axlUSDC so lets assume that I'm sending USDC from mainnet to Polygon
undefined says also heads up, I was contacted via DM by what seems like a scammer: @Officer B (Won't Ask For Funds)
undefined says Thanks, banned! In the future feel free to report them also in the #üö®‚îÇscam-report channel.
undefined says Hello, I'm part of a project party for an upcoming EVM-based chain, who should I speak to for integration and support for EVM chain? Thank you! üôÇ
undefined says You can reach out to Jason Ma | Axelar#9781
undefined says The SDK does support wrap/unwrap. You can take a look here:
https://docs.axelar.dev/dev/axelarjs-sdk/token-transfer-dep-addr#3-send-native-tokens-from-a-evm-chain

In general, when you call `callContractWithToken` to send USDC from one chain to another, it does not automatically get wrapped into axlUSDC. The `callContractWithToken` function is used to call a contract on a destination chain from a source chain and attach some tokens along the way. The function requires the destination chain, the destination contract address, the payload bytes to pass to the destination contract, the symbol of the token to transfer, and the amount of the token to transfer.
undefined says scam @Technical Moderator
undefined says Thank you!
undefined says @Stefan  ?
undefined says @Idris Olubisi | Axelar
undefined says Where does the liquidity of USDC on the destination chain come from?
undefined says Sorry, I'm unable to answer a) and b) as this is not mentioned in the docs.
undefined says c) The docs mention that interchain apps built on Axelar are truly permissionless, meaning that their transactions cannot be censored by any oracle, relayer or validator.
undefined says Adding a new chain to Axelar is permissionless. It takes about 10 minutes to integrate a new blockchain. Here are the basic steps outlined by Axelar's co-founder Sergey: https://twitter.com/axelarcore/status/1499053636969709568. Making sure the chain has enough liquidity may be the difficult part. Feel free to reach out to Milap for help with this process.
undefined says Hello everyone, it's nice to be a part of this community. I work with BlockOn Group and we're organising Dubai Blockchain Month 2023. It's an aggregate of multiple events and would be a great opportunity to partner, network and find sponsorship. This platform would let you promote Web3 and Blockchain space.
I am trying to reach out to the Axelar team to discuss this unique opportunity. Could you please help me reach them? Thanks in advance.
undefined says thanks
undefined says hi everyone! mud here from singapore ‚ù§Ô∏è
undefined says building zabava labs
undefined says Sounds interesting! Welcome @mud to the ecosystem!
undefined says it will be a wrapped version of the canonical token, all of the supported tokens have an originating chain
undefined says Hi everyone how you doing? Im finding someone on Axelar to discuss about how to integrate the Bridge services for our new Subnet on Avalanche, anyone here to talk more about this?
undefined says Hey! Are you looking for some technical help for the integration or to connect with someone from BD?
undefined says thanks for having me
undefined says wondering is anyone building something between algorand and move chains
undefined says hey @Stefan do you know if interchain tokens will be able to use callContract and callContractWithToken methods? or are they only for supported tokens?
undefined says Interchain Tokens are ERC-20 tokens and you can interact with them identically on all chains, including sending, transferring, approving, and using all of the methods you are used to, such as `callContract` and `callContractWithToken` https://docs.axelar.dev/dev/send-tokens/interchain-tokens
undefined says hey i made an error in my question, callContract is just a generic GMP call so it doesn't make sense in my question.

i think my question is to clarify the following: 

can an interchain token be used as a token to be passed in `callContractWithToken`?
if yes, given that the following parameters are required for `callContractWithToken`, what would be the `symbol` to pass in?
```
function callContractWithToken(
    string memory destinationChain,
    string memory contractAddress,
    bytes memory payload,
    string memory symbol,
    uint256 amount
) external;
```
undefined says Hi - how does axelar enable gmp for L2 <> L2 cross chain transactions (eg. Optimism <> Arbitrum) ? How does it differ from L1 <> L2 transactions (eg. Ethereum <> Arbitrum)?
undefined says On running npm ci in root directory of examples-web I am getting an error please help
undefined says hey devs, not too sure if this channel is AXELAR specific/only/exclusive or not but have just published a smart contracts article that seems like it fits, would love ideas for the next & feedback of course: https://paragraph.xyz/@papajams.eth/the-smart-contract-development-platform-landscape
undefined says hey @here we've just published a micro developer survey on the #üîä‚îÇbuilder-announcements channel about the Interchain Token Service and we'd really appreciate if you could take a minute and help us out by reacting to the 3 questions we posted!

Here's the link: https://discord.com/channels/770814806105128977/1095650129140269117/1136672034387132518
undefined says Is there no tutorial for new recruits would be much easier so we could get started
undefined says hey @Stefan can i check are GMP transactions free up to the execution stage on the destination chain? does one have to pay gas while passing through the axelar blockchain?
undefined says the Interchain Token feature just went live and I hope tutorials will follow soon!
undefined says here are some resources that are available:
undefined says https://axelar.network/blog/how-to-create-an-interchain-token-with-axelar-in-4-steps
undefined says https://docs.axelar.dev/dev/send-tokens/interchain-tokens
undefined says https://axelar.network/blog/what-is-interchain-token-service
undefined says GMP transactions are not free up to the execution stage on the destination chain. Transactions using Axelar have costs associated at each stage of their journey, including the source chain, the Axelar network, and the destination chain. These costs are made up of four types:

1. Initiating the transaction on the source chain
2. Processing the transaction through the Axelar blockchain
3. Relaying to the gateway contract on the destination chain
4. Executing the destination smart contract with the payload

To simplify paying for transaction pricing through the pipeline, Axelar has two general solutions:

- For token transfers, a fixed "relayer fee" is deducted from the amount of assets being transferred cross-chain.
- For General Message Passing (`callContract` and `callContractWithToken`), a chain-agnostic gas relaying service is implemented to accept gas payments from users on the source chain in its native currency.

All costs can be seen on **Axelarscan** https://axelarscan.io by looking at a specific transaction.

For more details, you can refer to the **Axelar Pricing documentation** https://docs.axelar.dev/dev/reference/pricing
undefined says Thanks Stefan for the quick response. What if we want the user to pay the gas on the destination chain themselves?
How do we pay for only the axelar gas from the source?

The docs mention this is possible https://docs.axelar.dev/dev/general-message-passing/gas-services/intro#gas-receiver

But I'm unsure how we can pay for step 2 if that is the case
undefined says Axelar provides two ways to handle gas fees for cross-chain transactions:

1. **User Pays Gas on Destination Chain**: The user or application manually pays for the gas on the destination chain. This means that after the cross-chain payload is approved by the Axelar Gateway contract, the user or application needs to send it to the destination dApp or contract and execute it. This execution requires tokens of the destination chain to cover gas fee costs. This can be an inconvenient user experience, as it requires the user to acquire destination-chain and source-chain tokens -> https://docs.axelar.dev/learn/network/flow

2. **Axelar Pays Gas on Destination Chain**: Axelar offers Gas and Executor services to help make this easier. Axelar creates and deploys a smart contract called the Gas Receiver to all connected EVM chains. This Gas Receiver allows the user to pay for all transaction fees required throughout the entire journey of their cross-chain message in a one-time payment on the source chain, in the source chain's native token https://docs.axelar.dev/learn/network/flow

If you want to pay only for the Axelar gas, you can use the `estimateGasFee` method in the AxelarJS SDK to calculate the total cost for you. This method calculates the Network Base Fee and the Execution Fee. The Network Base Fee is the base fee for any transaction and is fixed based on the chains involved. The Execution Fee is variable depending on the chains involved, and the complexity of your `_execute` method https://docs.axelar.dev/dev/reference/pricing
undefined says Hi hi @Stefan , can you help me understand which instance of USDC on polygon mumabi testnet is the "canconical" USDC which can be used for `callContractWthToken`? 

The USDCs in the docs only call out aUSDC instances. However, in the reply above it sounds like using axelar USDC isn't required for cross-chain GMP calls. Is using canonical USDC supported on testnets?
undefined says Based on the docs, this is the case for testnets (i.e. https://docs.axelar.dev/dev/reference/testnet-contract-addresses only lists aUSDC). For mainnets, you can take a look at https://docs.axelar.dev/dev/reference/mainnet-contract-addresses which lists axlUSDC but also USDC. Consequently, I think you can only use aUSDC for testnets but both axlUSDC and USDC on mainnets.
undefined says Ok great
undefined says thanks for the clarfiication
undefined says Sorry one more question, is testnet capable of accepting tokens for gas payment? I.e. aUSDC on Mumbai to pay for a Goerli `callContractWithToken` request
undefined says we are currently seeing which to me looks like a wei value being compared to our specified usdc value. at least that's my current best guess given the order of magnitude difference.
undefined says https://testnet.axelarscan.io/gmp/0xa3b7cb8b81814f4ae5d58b681228c54655ce15fc2d0ea09f10371ea949b9bd5e
undefined says Yes, the testnet is capable of accepting tokens for gas payment. From the docs:

> This method receives any tokens for the relayer fee. The paid gas for this method must be in tokens Axelar supports. See the list of supported assets: Mainnet | Testnet 
> -> https://docs.axelar.dev/dev/gas-services/pay-gas. 

There is a method called `payGasForContractCallWithToken` that allows you to pay gas for relaying the `callContractWithToken`. This method receives any tokens for the relayer fee. However, the paid gas for this method must be in tokens Axelar supports. 

Here is the function signature:

```javascript
// This is called on the source chain before calling the gateway to execute a remote contract.
function payGasForContractCallWithToken(
 address sender,
 string calldata destinationChain,
 string calldata destinationAddress,
 bytes calldata payload,
 string calldata symbol,
 uint256 amount,
 address gasToken,
 uint256 gasFeeAmount,
 address refundAddress
) external;
```

As for the aUSDC token, it is listed as a supported asset on various chains including Ethereum Goerli and Polygon (Mumbai), you should be able to use aUSDC to pay for gas on these chains.

The gas fee amount should be specified in the smallest unit of the token (like wei for Ether). If you're seeing a discrepancy in the order of magnitude, it might be due to this.
undefined says can validators and relayers be the same entity in the axelar bridging system?
undefined says So to be clear interchain tokens are still in testnet? I though they were released to mainnet during July
undefined says If they are does anyone have a mainnet release?
undefined says Yes they're still in testnet and there's no information as to when this will be on mainnet
undefined says Hello guys üëã 
I am researching Axelar and don't quite understand at a lower level how relayers call the Axelar network validators to inform them of changes on a specific blockchain. Is there an API on the validator side?
And regarding validators, they also need to query that blockchain to check that the information is correct, so I am assuming that somewhere in the axelar-core go code there is an implementation for each blockchain?
undefined says Yes, you can run both a validator and a relayer. Relayer services are optional convenience services provided by Axelar. These tasks can be performed by anyone, and no form of trust is required to authorize or complete the task. Relayers are responsible for starting off the vote for the deposit confirmation and submitting events to the Axelar network for processing. They also monitor outgoing transaction queues containing cross-chain messages that are already approved and signed, and periodically submit these transactions to external chains source
undefined says I'm not aware of an API for relayer <> validator communication. Here are some infos about relayers and the tasks they perform, for more context.

1. **Event Observation and Submission**: Relayers observe events happening on external supported chains and submit cross-chain communication requests to the Axelar network for processing. Once a Gateway receives a message, it generates an event. Axelar's relayer services pick up this event and submit it to the Axelar network for processing.

2. **Starting Deposit Confirmation Votes**: During a cross-chain asset transfer, relayer services are responsible for starting off the vote for the deposit confirmation. After a deposit address is generated on a source chain, the relayer services take the deposit address and submit a request on the Axelar network for validators to monitor the deposit address for a deposit transaction.

3. **Submitting Messages to Destination Chains**: Relayers also monitor outgoing transaction queues containing cross-chain messages that are already approved and signed, and periodically submit these transactions to external chains.

4. **Gas Receiver**: The gas receiver is an example of Axelar relayer services. During General Message Passing, a cross-chain smart contract call is approved by Axelar network validators, and the approval is stored in the Axelar Gateway on the destination chain. Axelar relayer services will confirm the gas payment on the source chain, then automatically execute the smart contract call on the destination chain when it gets approved.
undefined says "Axelar's relayer services pick up this event and submit it to the Axelar network for processing." I am specifically interested in how the event is submitted to the Axelar network.
I saw that there is this repo containing a relayer but it seems to have old packages as dependencies:
https://github.com/axelarnetwork/evm-cosmos-relayer
Is this used on mainnet or is there a newer version?
undefined says I think this is not specifically detailed in the docs, unfortunately.
undefined says The process of submitting an event to the Axelar network involves several steps:
1. **Event Generation**: Once a Gateway receives a message from an external supported chain, it generates an event. 
2. **Event Pickup by Relayers**: Axelar runs relayer services which observe all connected chains. These relayers pick up the generated event.
3. **Event Submission to Axelar Network**: The relayers then submit the picked up event to the Axelar network for processing.
undefined says Hey need a token icon for axlEth on Celo, where can get this ?
undefined says Axelar does support Celo https://docs.axelar.dev/validator/external-chains. I'm tagging @Idris Olubisi | Axelar here for help with the link to the token icon as I did not find it in https://github.com/axelarnetwork/axelar-docs/blob/main/public/images/assets/
undefined says Hello pls I have a question how can I use the axelar deployed contract in the front-end do I just call the execute function written then pass the needed Parameters like destination address and chain and how exactly do I pass the data needed to be sent, this is my first time working with the axelar tool, loving it üòä
undefined says I was reading the doc about interchain token, in the doc you take ERC20 as exemple, but we agree that is possible to use the interchain token techno with ERC721 token ?
https://docs.axelar.dev/dev/send-tokens/interchain-tokens
undefined says Hi sers, I hope to get some clarity on fee estimation üôè 

I understand there's a need to pay for gas before making a cross chain call

```ts
function payGasForContractCallWithToken(
    //...other params
    address gasToken,
    uint256 gasFeeAmount,
) external;
```

In our use case, we need to use `aUSDC` as `gasToken` to execute contract `polygon --> ethereum`

I'm not sure though I understand the initial determination of `gasFeeAmount`(which I believe is denominated in `address gasToken`)

To determine `gasFeeAmount`: first, query axelarscan api `getFees` and get something like

```ts
//(simplified)
const result = {
  base_fee: 0.006172214373496391,
  source_base_fee: 0.006172214373496391,
  destination_base_fee: 0.32830787477019413,

  //and some info about tokens involved
  axelar_token: {},
  source_token: {},
  destination_native_token: {},
};
```

QUESTIONS:

1. is `base_fee`, and `destination_base_fee` denominated the same as `source_token` ? - therefore `totalFees = base + souce + dest`

2. if `1` is not the case - is using `token.usd_value` the correct way to denominate everything as `source_token`

```ts
const destinationFee_sourceTokenDenominated =
  destinationFee * (destination_token.usd_value / source_token.usd_value);
```

3.what are `express_fees` ? I feel like it need just be applied if `estimateResult.express_supported = true`

4. in case of `2` is `base_fee` denominated in `axelar_token` ? 

5. is this the case: once I determine the correct gasFee amount I can use this as ff. 
```ts
function payGasForContractCallWithToken(
    //...other params
    "0x2c852e740b62308c46dd29b982fbb650d063bd07", //gasToken (aUSDC) address
    6_000_000, // gasFeeAmount (6 aUSDC)
) external;
```
undefined says Hello! I'm having a hard time converting sourceAddress in string to an address type to compare it to an address value. 
Any help is appreciated.
undefined says Assuming you're attempting to make this conversion in your Solidity code then you can compare hashed version of the two values.
The toHexString variable is accessed via OpenZeppelin's  string lib
https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol
``` 
function compareValue(string memory stringValue, address addressValue) external {
        string memory addressString = Strings.toHexString(uint256(uint160(addressValue)), 20);
        if(keccak256(bytes(stringValue)) == keccak256(bytes(addressString))) {
            emit ValuesAreEqual();
        } 
    }
```
undefined says Thanks! But this didn't work. Converting string to address using this https://stackoverflow.com/a/69551561 and then comparing worked for me.
undefined says Hmm odd I had it working locally but glad to hear you got it working as well:). The .toHexString() I mentioned before was imported  directly from github (into remix)
```import "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol";```
And then just make sure you remix solidity version is the same as the version being imported in this link.
undefined says It still isn't working for meü•≤ . Wondering which one is more gas efficient.
undefined says Hello @Jesse 

You can find it at https://axelar.network/brand
undefined says As Stephen wrote to you in your thread:

> You'll need at least two smart contracts deployed (they can be the same code). One to the source chain where you want to send a message from, and one to the destination chain. Then from your front-end, you'll make a transaction to your source contract. The source contract will callContract and communicate with the gateway, and the axelar network will call your _execute method on the destination chain. 
> 
> All of the data to be sent will be encoded with abi.encode into a bytes object on the source chain. That payload will be given to your destination chain, where you can decode it based on the types you sent over.
undefined says I hope this has helped to clarify your questions
undefined says but please feel free to ask in your thread if you have any follow up questions
undefined says Yes, ERC721 is supported by Axelar. Here's a great tutorial video https://www.youtube.com/watch?v=pAxuQ7PIl8g. And Axelar's documentation on this: https://docs.axelar.dev/dev/guides/example-nft-linker

Example of the interchain transfer of NFTs originally minted on the source chain and sent to the destination chain: https://github.com/axelarnetwork/axelar-examples/tree/main/examples/evm/nft-linker

To see how it's implemented on the frontend, please check here: https://github.com/axelarnetwork/axelar-examples/blob/main/examples-web/src/pages/examples/nft-linker.tsx
undefined says Yes, you need to pay for gas before making a cross-chain call. (Please see this post for infos on the two ways Axelar provides for handling gas fees https://discord.com/channels/770814806105128977/955655587260170272/1138037782061776936).

The `payGasForContractCallWithToken` function is used for paying gas, where `gasToken` is the token you're using to pay for gas, and `gasFeeAmount` is the amount of gas you're paying. Keep in mind, we only support payments made with native gas tokens as mentioned by Idris from the team here: https://discord.com/channels/770814806105128977/1090343366975291464/1098725310830235668

To determine the `gasFeeAmount`, you need to use the `estimateGasFee` method provided by the AxelarJS SDK. This method gives you an estimate of the appropriate gas payment to be made to the gas receiver on the source chain. Here's how you can use it:

```javascript
const sdk = new AxelarQueryAPI({
 environment: "testnet",
});

// Use the estimateGasFee method
sdk.estimateGasFee(/* parameters */);
```
See also the docs here: https://docs.axelar.dev/dev/axelarjs-sdk/axelar-query-api

The `estimateGasFee` method takes into account these parameters: `gasLimit`, `minGasPrice`, and `gasMultipler`. They are used to calculate the total estimated gas required for the cross-chain call. The response to the method gives a single value (in `wei`) of the total estimated gas required for the cross-chain call.

Regarding your questions:

1. The `base_fee`, `source_base_fee`, and `destination_base_fee` are not necessarily denominated in the same token as `source_token`. The fees are calculated based on the chains involved and the complexity of your `_execute` method.

2. The `token.usd_value` might not be the correct way to denominate everything as `source_token`. The `estimateGasFee` method calculates the total cost for you, taking into account the current conversion rates to translate the gas paid on the source chain for the gas cost used by Axelar and the destination chains.
undefined says ---
undefined says I hope this helps but feel free to ask if you have any other questions.
undefined says You can also create a thread in the dev forum https://discord.com/channels/770814806105128977/1090341272243408916 and the team will take a look.
undefined says appreciated the response ser @Stefan ü´°   - I will make sense of these new infos and ask further questions üôè
undefined says Please do if you have any follow up questions
undefined says Hello, I want to look into becoming a validator. Where can I find information on reward mechanics?
undefined says Hey! Here is the link to the docs for setting up a validator
https://docs.axelar.dev/validator/setup/overview
On Axelar, validators are required to run nodes on each new EVM chain that's onboarded as the validators query their node to verify messages going between a source and destination chain. Regarding rewards it depends on the validator, the more nodes a validator has running for different blockchains (chains that are of course connected to axelar) the higher their reward will be.
undefined says Just to clarify, in order to run an active Axelar validator, I need to provide a RPC endpoint for all 12 of these chains?
undefined says You do not need to run a node for every evm chain that connects to axelar but the more chains you do run nodes for, the higher your rewards will be as a validator.
undefined says Makes sense, is there a calculator I could use to calculate the expected rewards based on X number of RPCs endpoints I support?
undefined says Yes sure
undefined says I'm not sure about a specific calculator I can circle back with you on that.
If you look at the axelar explorer however you can see some of the interesting stats for the live validators including their staking APR and which blockchains they have nodes on
https://axelarscan.io/validators
undefined says Awesome appreciate it this helps :Axelarthumbs:
undefined says Halo everyone, I have a question......which line of code in the execute function of AxelarGateway.sol marks cross-chain payload as approved? I don't understand. Please help me, love you all.
undefined says From my understanding based on the Axelar docs, the approval process seems to be handled before the `execute` function is called. The `execute` function is used to decode the payload and perform the necessary operations based on the decoded data.
undefined says Hey everyone, is possible with Axelar to do a ping pong call like on LayerZero?

By ping pong I mean:
- send data from source-chain to destination-chain
- destination-chain sends back sometinh to source-chain, depending on what was received
undefined says Yes! Please take a look at this example https://xchainbox.axelar.dev/?env=simulated&sample=ping-pong. The sample ping pong keeps sending a token and pays the gas between chain A and chain B until it's running out of gas.
undefined says can we get usdc on opbnb
undefined says DEX: https://www.binaryswap.io/#/swap
DOCS: https://binaryswap.gitbook.io/binaryswap/
undefined says Yes @LordGravity  , its possible and very easy üòä 

Check out one of our tutorials on how to make 2-Way Calls Using General Message Passing with the ping-pong example. https://www.youtube.com/watch?v=SjVJotyyAPg

Let us know if you have any other questions or feedback. We will be happy to help.
undefined says Hi all. I am new to Axelar. I have my cosmos sdk based testnet. What are the steps to register my testnet on Satellite TESTNET UI? I am aware of IBC transfers and relayers.
undefined says opbnb is presently not supported
undefined says As of now, the process of adding a new chain to Satellite (or Satellite on testnet) is permissioned. The supported tokens on Satellite are manually added by the Axelar team based on usage, demand, and liquidity projections. Feel free to reach out to the team to evaluate if your testnet can be included.
undefined says Ok. Thanks for the help. What is the best way to  reach the team for this?
undefined says Please reach out to Milap entangled_qubit for help with this.
undefined says make it supported pls
undefined says its needed
undefined says Adding a new chain to Axelar is permissionless. It takes about 10 minutes to integrate a new blockchain. Here are the basic steps outlined by Axelar's co-founder Sergey: https://twitter.com/axelarcore/status/1499053636969709568. Making sure the chain has enough liquidity may be the difficult part. Feel free to reach out to Milap for help with this process.
undefined says Awesome, thank you to both of you @Stefan @Idris Olubisi | Axelar üî•
undefined says add usdc to opbnb!!
undefined says and a bridge
undefined says psl
undefined says pls
undefined says Glad we could help you!
undefined says Let us know if you have any other questions!
undefined says Hey Stefan,

I have watched `2-Ways Call` video on Youtube and used the same code.

Though the callback always fails due to `insuficient gas` & `tx gas exceeds block gas limit` 

**From: Fantom to KAVA**

Transaction: https://testnet.axelarscan.io/gmp/0xb041f1ec24b6af6962dbeafb7897520bd5f0f9f2ae634be488375bd084e4b9e6

Code: *screenshot*
undefined says it works on: **FTM to BSC**

except for the **callback**, the **pong** is not sent to FTM
undefined says Tagging @Idris Olubisi | Axelar here for help!
undefined says Hello @LordGravity,  processing the transaction to and fro usually requires enough gas. This is considering that you are paying once on the source chain to facilitate this transaction.

I've checked the transaction link you shared: https://testnet.axelarscan.io/gmp/0xb041f1ec24b6af6962dbeafb7897520bd5f0f9f2ae634be488375bd084e4b9e6. It shows a similar error: "Insufficient gas for executing the transaction. Please try recovering it by manually increasing gas on the source chain or executing it on the destination chain."

Another thing to note when bumping the gas is that there is an automatic refund that occurs when there is excess gas back to the source chain.
undefined says 
undefined says I am not getting the quote on how much axlUSDC will I recieve on Arbitrum
undefined says How could one check this
undefined says Answered in #üîó‚îÇgeneral
undefined says Alright
undefined says Can anyone help me with resources for AVAX to Provenance bridge connection.
undefined says #üìö‚îÇresources
undefined says Hi @Tyweneüßëüîß , there is no wallet option for provenance chain available here https://testnet.interchain.axelar.dev/, can you suggest a way to establish connection so that mint/burn can happen on provenance chain?
undefined says Hello, who is familiar with the EVM Gateway contract, can somebody explain what is the difference between the 3 TokenType and how are these tokens handled by the contract?
https://github.com/axelarnetwork/axelar-cgp-solidity/blob/main/contracts/AxelarGateway.sol#L24

EDIT: @Idris Olubisi | Axelar Maybe you can help with an answer here.
undefined says There are no details about this specified in the docs, unfortunately. Please feel free to ping Idris from the team to get help!
undefined says @Idris Olubisi | Axelar can you help?
undefined says Hi
undefined says can any one tell me how to get wrapped usdc token for cross chain token sending
undefined says the mint function in polygon mumbai doesnt seem to work
undefined says @Rares | buidly Can you please clarify what you mean by "3 TokenType"?

The link you provided is for the Axelar Gateway contract, which serves as the gateway contract for cross-chain contract calls and token transfers within the Axelar Network. It is managed via the decentralized governance mechanism on the Axelar network.
undefined says I want to understand exactly what each of those 3 TokenTypes represent:
External - token is managed externally from my understanding, and such it is "stored" in contract (not minted/burned)?
InternalBurnableFrom - token can be burned/minted by gateway (or associated contract)?
InternalBurnable - ???

I don't understand exactly this token management part. I want to have a broader understanding of how tokens are managed so I know how these should be handled when integrating other chains.
undefined says Okay, now I get what you mean.

The 3 TokenTypes in the Axelar Gateway contract represent:

1. InternalBurnable - A token that was deployed by the Gateway itself, and implements the IBurnableMintableCappedERC20 interface. This allows the Gateway to directly call the mint and burn functions on the token contract.

2. InternalBurnableFrom - Similar to InternalBurnable, but the token contract also implements burnFrom, allowing the Gateway to burn tokens from any account, not just its own.

3. External - A token that was not deployed by the Gateway, so it doesn't have direct access to mint/burn functions. The Gateway has to use transfer and transferFrom to move these tokens.

It allows the Gateway to handle both its own tokens and arbitrary external tokens in the system.

When integrating other chains, you would need to follow similar patterns - either deploy tokens that the gateway can control, or integrate with external tokens through transfers. The Gateway needs some way to mint/burn tokens that are transferred cross-chain.

Let me know if this answers your question.
undefined says Thank you, that makes things more clear now.
One more question, can you detail what the `burnToken` command of the gateway does?
https://github.com/axelarnetwork/axelar-cgp-solidity/blob/main/contracts/AxelarGateway.sol#L631

I am having a hard time understanding what the `salt` parameter is used for (not an EVM developer). The `salt` somehow represents a user's address position of that ERC20 token?
undefined says The burnToken function in the Axelar Gateway contract is used to burn tokens that have been transferred from another chain.

When someone calls sendToken on the source chain to send tokens cross-chain, the Gateway on that chain needs to burn those tokens.

The burnToken function is called by the Axelar network to tell the destination Gateway to burn the tokens that were sent.

**Here's a quick breakdown of what it does:
**
- It takes the token symbol and a salt as parameters
- Checks that the token is registered with the Gateway

- If the token type is External:
      - It deploys a temporary DepositHandler contract
      - Transfers the Gateway's balance of that token to the DepositHandler
      - Calls destroy to delete the DepositHandler, burning the tokens

- If the token type is Internal:
     - Calls the burn function on the Internal token contract
     -  Passes the salt to associate the burn with the original send

This allows the Gateway to verifiably burn the tokens that were sent from the source chain.
undefined says But doesn't sendToken already burn the tokens since it calls `_burnTokensFrom`?
https://github.com/axelarnetwork/axelar-cgp-solidity/blob/main/contracts/AxelarGateway.sol#L767

Or that is only the first step of the process, and after the transaction is verified cross chain, the `burnToken` command needs to be executed? 

"The burnToken function is called by the Axelar network to tell the destination Gateway to burn the tokens that were sent." - I presume here you meant "to tell the SOURCE Gateway to burn the tokens" instead?
I think I may be misinterprating something here...
undefined says Yes, it informs the source gateway. You are correct, as _burnTokenFrom is already being called when sending the token. Tagging @Canh T and @PJ to confirm if this assumption about the correct flow.
undefined says üëç
undefined says HI. Does the connection between EVM testnet chains and Secret chain Testnet (cosmos) wotks at the momemnt ? @Idris Olubisi | Axelar 
who can help me ?
undefined says Yes, we have token transfer on testnet here: https://testnet.satellite.money/?source=ethereum&destination=secret&asset_denom=uaxl&destination_address=.
undefined says ‚ÄúIn order to allow for new stakeholders joining the validator set, the set will be rotated periodically. The threshold key needs to be updated upon such an update to the validator set and will then be shared across the new set. To prevent updating the threshold key frequently, validators are rotated every T blocks.‚Äù. Regarding this, isn‚Äôt it not possible to revoke existing key fragments? How does Axelar ensure that old validators are deleting their old keys properly?
undefined says Hi i am having some trouble calling sendToken on axelar devnet gateway contract, the tx reverts, is someone able to help?
https://testnet.snowtrace.io/tx/0x28fef674520a49a37439911f90e835ec5e40bf7ac9eca1f5d9caa4263cd0c4f8
i also tried callContractWithToken and it doesn't work, so far only callContract works
undefined says how does that help ü§î
undefined says i don't know what you are talking about. the tx i shared is an `avax fuji testnet tx` which was trying to call a `sendToken` via `axelar gateway` that is connected to `axelar devnet`
undefined says Axelar employs a multi-party cryptography scheme where each validator holds a piece of the key, called a key share. Validators agree through their confirmation votes to confirm a deposit and sign a transaction transferring the tokens to the user's address on chain B, which completes the asset transfer. Once enough key shares have agreed, the transaction can proceed.

To enhance security, Axelar has implemented a system of key rotations. Starting from `axelard` `v0.17.3+` and `tofnd` `v0.10.1+`, validators can generate a new `tofnd` mnemonic to slowly rotate out their old `tofnd` mnemonics for improved security. New Axelar key rotations will automatically use the most recent mnemonic generated. A key becomes *old* after `x` subsequent key rotations for that EVM chain. (Currently `x=7`.)

However, it's important to note that Axelar cannot enforce the deletion of old keys by validators. Validators are advised to keep their old `tofnd` mnemonics backed up as these mnemonics are still in use until the keys generated from them are considered "old" by the Axelar network. Validators are recommended to have processes in place to rotate their `tofnd` mnemonic once every 2 months.

In summary, while Axelar provides mechanisms for key rotation and encourages best practices, it ultimately relies on the validators to properly manage and delete their old keys.

Validator Docs https://docs.axelar.dev/validator/
undefined says Please be careful, I believe this may have been a scammer and we have banned the user.
undefined says Here are a few things you might want to check:

1. **Check the arguments you're passing to the functions**: Both `sendToken` and `callContractWithToken` require specific arguments. For `sendToken`, you need to provide the destination chain, destination address, token symbol, and amount. For `callContractWithToken`, you need to provide the destination chain, contract address, payload, token symbol, and amount. Make sure these arguments are correct and in the right order.

2. **Check the token you're trying to send**: Not all tokens are supported by Axelar. You can check the list of supported assets for **Mainnet** https://docs.axelar.dev/dev/reference/mainnet-contract-addresses and **Testnet** https://docs.axelar.dev/dev/reference/testnet-contract-addresses.

3. **Check the gas fee**: Executing these functions requires tokens of the destination chain to cover gas fee costs. If you're using `callContractWithToken`, you can use the `payGasForContractCallWithToken` function to pay the gas fee. Make sure you have enough tokens to cover the gas fee and that you've approved the `AxelarGasReceiver` with the appropriate amount.

4. **Check the contract you're calling**: If you're using `callContractWithToken`, the destination contract address must inherit from `AxelarExecutable`.

If you've checked all these things and you're still having trouble, it might be a good idea to reach out to the Axelar team directly for more specific help.
undefined says Hi Stefan thanks for the reply. The arguments should be correct. The token I am trying to send is correct as well i have verified it exist via the devnet node, I am using axelar devnet, so the docs are of no help.
undefined says How should I get help?
undefined says Tagging @Idris Olubisi | Axelar here for help!
undefined says I hope the team can help you!
undefined says Thanks for clarifying! Wouldn‚Äôt this create a vulnerability over time? A validator could accumulate old keys and eventually collect enough keys to sign a transaction. What prevents an old key from being valid?
undefined says My assumption is that the network does not accept old keys anylonger to prevent this attack vector.
undefined says Hi ! Will you update the SDK to support Linea soon ? I see that we can use Satellite to bridge to Linea but the SDK has not supported yet (Linea is still in the testnet list). Ty
undefined says Hey! Which SDK are you referring to AxelarJS? We're trying hard to update our docs as quickly as possible to cover as much as we can, I can tell you we are working on docs for devs in the Linea ecosystem as well:)
undefined says Yes it's Axelar JS. Thanks for the information
undefined says GM Developers, can I speak in Spanish with any of you who develop on Axelar about a project idea?
undefined says #üá™üá∏ÔΩúspanish 
Community.
You also open a #üß†‚îÇhackathons  and suggest
undefined says @Stefan  can you add me as a friend on discord
undefined says Hey! I'm representing Yel.finance , could I talk with someone to discuss our potential collaboration ?
undefined says Please feel free to reach out to Jason Ma | Axelar#9781 or Jake | Axelar#7393 to discuss your proposal.
undefined says üëç
undefined says Hey, trying to reach @Jake | Axelar as you advise , but couldn't get any respond.
undefined says Hey guys, I have a problem with `AxelarQueryAPI`. On which channel, can I ask about this?
undefined says This one or feel free to start a new post in #üíª‚îÇdevelopers
undefined says Here's my problem:
```
  const testnet = new AxelarQueryAPI({ environment: Environment.TESTNET });
  const mainnet = new AxelarQueryAPI({ environment: Environment.MAINNET });
  console.log(await testnet.getActiveChains()); // it returns testnet's chains
  console.log(await mainnet.getActiveChains()); // it returns testnet's chains (same as testnet)

// Another attempt
  const mainnet = new AxelarQueryAPI({ environment: Environment.MAINNET });
  const testnet = new AxelarQueryAPI({ environment: Environment.TESTNET });
  console.log(await testnet.getActiveChains()); // it returns mainnet's chains (same as mainnet)
  console.log(await mainnet.getActiveChains()); // it returns mainnet's chains
```
Once create `new AxelarQueryAPI`, chains are not refreshing. `loadChains()`function also not refreshing but `importChains()` works properly.
Any thoughts on this?
undefined says @Technical Moderator üëÜ
undefined says What is Environment in your code ? have you created this enum class somewhere ?

I just tried and it gives different chains

Testnet

[
  'acre',          'arbitrum',    'aura',
  'aurora',        'Avalanche',   'Axelarnet',
  'base',          'binance',     'burnt-2',
  'celo',          'ethereum-2',  'evmos',
  'Fantom',        'fetch',       'filecoin-2',
  'impacthub',     'kava',        'kujira',
  'linea',         'mantle',      'Moonbeam',
  'neutron',       'odin',        'optimism',
  'osmosis-6',     'persistence', 'Polygon',
  'polygon-zkevm', 'secret-snip', 'secret-snip-2',
  'sei-2',         'teritori',    'terra-3',
  'xpla'
]

Mainnet

[
  'acre',        'agoric',      'arbitrum',
  'archway',     'assetmantle', 'aura',
  'Avalanche',   'Axelarnet',   'base',
  'binance',     'carbon',      'celo',
  'comdex',      'cosmoshub',   'crescent',
  'e-money',     'Ethereum',    'evmos',
  'Fantom',      'fetch',       'filecoin',
  'injective',   'ixo',         'juno',
  'kava',        'ki',          'kujira',
  'linea',       'mantle',      'Moonbeam',
  'neutron',     'optimism',    'osmosis',
  'persistence', 'Polygon',     'provenance',
  'rebus',       'regen',       'secret',
  'secret-snip', 'sei',         'sommelier',
  'stargaze',    'stride',      'terra',
  'terra-2',     'umee',        'xpla'
]

Here is the quick test code that I ran


const { AxelarQueryAPI } = require('@axelar-network/axelarjs-sdk');

const sdk = new AxelarQueryAPI({
  environment: "mainnet",
});

async function main() {
  const activeChains = await sdk.getActiveChains();
  console.log(activeChains);
}

main()
  .then(() => console.log("Done"))
  .catch(error => {
    console.error("Error encountered:", error);
  });


Try passing the string, it might be your enum class

const sdk = new AxelarQueryAPI({
  environment: "testnet",
});

const sdk = new AxelarQueryAPI({
  environment: "mainnet",
});
undefined says @gabriel
undefined says My code is typescript. Environment.Mainnet is `mainnet`.
Btw, you did wrong.
As I said in my code, at first try, it returns testnet chains because testnet sdk is created before mainnet.
At second try, it returns mainnet chains because I created mainnet sdk before testnet.
It means, always later created sdk is not refreshing. But you're refreshing code every time by re-run.
If you try like that, it returns correctly. Please try mainnet and testnet simultaneously like my code.
undefined says Please try like this: @KingSuper @Technical Moderator 
```
const { AxelarQueryAPI } = require('@axelar-network/axelarjs-sdk');

const sdk = new AxelarQueryAPI({ environment: "mainnet" });  //
const sdk1 = new AxelarQueryAPI({ environment: "testnet" }); //

async function main() {
  const activeChains = await sdk.getActiveChains();
  const activeChains1 = await sdk1.getActiveChains();

  // It'll show same chain list for mainnet because mainnet sdk is created first
  console.log(activeChains, activeChains1);
}

main()
  .then(() => console.log("Done"))
  .catch(error => {
    console.error("Error encountered:", error);
  });
```
undefined says Hi, I'm looking into the GMPStatusResponse from the axelar API. I see the following status options. Do you have any more documentation into what each of these means, specifically in the context of making an ethereum transfer in/out of the Cosmos ecosystem?

export declare enum GMPStatus {
    SRC_GATEWAY_CALLED = "source_gateway_called",
    DEST_GATEWAY_APPROVED = "destination_gateway_approved",
    DEST_EXECUTED = "destination_executed",
    EXPRESS_EXECUTED = "express_executed",
    DEST_EXECUTE_ERROR = "error",
    DEST_EXECUTING = "executing",
    APPROVING = "approving",
    FORECALLED = "forecalled",
    FORECALLED_WITHOUT_GAS_PAID = "forecalled_without_gas_paid",
    NOT_EXECUTED = "not_executed",
    NOT_EXECUTED_WITHOUT_GAS_PAID = "not_executed_without_gas_paid",
    INSUFFICIENT_FEE = "insufficient_fee",
    UNKNOWN_ERROR = "unknown_error",
    CANNOT_FETCH_STATUS = "cannot_fetch_status",
    SRC_GATEWAY_CONFIRMED = "confirmed"
}
undefined says After some additional digging, the GMP is not really what I'm concerned about, I'm actually looking for Token Transfer status instead. Do you know of a way to query this or determine status similar to what is displayed here?
https://axelarscan.io/transfers/search
undefined says I didnt do wrong, thats what I understood from your question you didnt clearly mentioned that it was the ordering issue I thought you are saying it always prints just one chain randomly, its always better to explain the exact issue in detail

I understand your issue now, I just tried it and yes it does that, I think there might be some internal state management or caching issue within the AxelarQueryAPI function or maybe its is like that on purpose, something like a singleton class, so that people dont define multiple instance of axelar sdk all over the code, I think the latter is more likely because why would you wanna define two sdk instances, environments variable should be fetched from a config, its rarely that we run test and production environment on the same app
undefined says I sugest you check AxelarQueryAPI implementation and see if its is on purpose like that, if they are checking for an existing instance in its implementation before creating a new one, understand that it is on purpose

Usually people run different app separately for different environment and thats what you should do, basic code sanity stuff, dont mix environments in just one code, thats why there are configs so one can edit the configs, change environments and redeploy the app for another environment
undefined says Thanks for your reply
undefined says Could you help me resolve a question? I want to query Axelar data to gain insights into interchain transfers. Is it possible to obtain comprehensive information about these transfers solely through querying Axelar data? Aside from blocks and transactions, which RPC methods are available and useful for this task? For example, where can I get the transaction activities from (using RPCs)?
undefined says Hello There is a layerzero bridge to bridge cyber token from op bsc to erc tokens. Is anyone here who can do that by remix or anything?
undefined says Tag Stefan he can help you out
undefined says Is this Axelar related? Happy to ping the team for this.
undefined says For general stats, you can use https://axelarscan.io/.
undefined says Another option would be to reach out to the creators of the stats dashboard (CoinHippo) to ask them how they query Axearl data.
undefined says Hello, is there some more documentation regarding the https://github.com/axelarnetwork/axelar-amplifier CosmWasm contracts? Maybe some basic steps to follow when wanting to write these contracts for a new chain or maybe how to deploy the contracts on devnet?
undefined says I am trying to deploy a hello world wasm contract following this tutorial:
https://bright-ambert-2bd.notion.site/Axelar-CosmWasm-Devnet-Development-885a966bf4764151a7e4c1fde68a04a2

But I get a gas error: "insufficient fees; got: 13463uaxl required: 97uwasm: insufficient fee"
`axelard tx wasm store artifacts/cw_tpl_osmosis.wasm --from test --gas auto --gas-adjustment 2 -y --output json -b block --chain-id devnet-wasm --node=http://devnet.rpc.axelar.dev:26657`

From what I understand, `uaxl` token is used on the current testnet and `uwasm` on the wasm devnet, but I am specifying the correct chain id and not sure what I am doing wrong
undefined says It could be that you're encountering an issue with insufficient gas fees. Difficult to troubleshoot...

In general, when you encounter an "insufficient fee" error, it means that the prepaid gas is not enough to relay the transaction. You can increase the gas payment to recover the transaction. If you're using the Axelar CLI, you can manually set the gas using the following flags: `--gas=auto --gas-adjustment=1.5`.
undefined says If this does not help you, please ping me again and I'll forward to the team!
undefined says Tried with different gas adjustments, but the problem is that it wants to use `uaxl` token for gas instead of `uwasm`...
undefined says Tagging @Idris Olubisi | Axelar here for help!
undefined says Taking a look.
undefined says Thank you Idris!
undefined says Managed to fix my problem by adding `--gas-prices 0.1uwasm` to the command.
Is there any explorer website for Axelar WASM available yet so I can easily see the transactions?
undefined says Started a thread.
undefined says Hey @lpecina! It really depends where you're making the query. If you're trying to query information about the tx from your contract you are limited to only querying data available from the transaction itself that is available on the blockchain or data that is passed in via a gmp message. If you're querying from outside the scope of a contract you can look into using the AxelarJS sdk
https://docs.axelar.dev/dev/axelarjs-sdk/intro
undefined says Is it possible to integrate a chain which is already using Gravity Bridge to Axelar?

 I'm assuming this would result in two different contract addresses on Ethereum?
undefined says Thanks @Sachin for reaching out. I have forwarded this internally to the team. I hope someone can help you really soon.

In general, adding a new chain to Axelar is permissionless. It takes about 10 minutes to integrate a new blockchain. Here are the basic steps outlined by Axelar's co-founder Sergey: https://twitter.com/axelarcore/status/1499053636969709568.
undefined says What is the difference between the 2 secret network testnet chain names? https://docs.axelar.dev/dev/reference/testnet-chain-names
undefined says Secret-SNIP-2 is an upgraded testnet of Secret-SNIP with new features and improvements. This includes supports for secret contracts, performance etc.

The chain names are used for token transfers and General Message Passing calls like `callContract` and `callContractWithToken` and they are case-sensitive.
undefined says Amazing. thank you!
undefined says @Idris Olubisi | Axelar Hi! Secret deprecated pulsar-2 testnet on August 30, is there GMP for Secret on pulsar-3 yet? Asking because I want to create a tutorial for devs asap.
undefined says There isn't a Pulsar-3 yet, but I will confirm internally if there are any plans for integration.

In the meantime, you can find all the supported chains for the testnet and mainnet here:

https://docs.axelar.dev/dev/reference/testnet-chain-names

https://docs.axelar.dev/dev/reference/mainnet-chain-names
undefined says @Sachin did you find the basic steps outlined in the video to integrate a new blockchain helpful ?

Did you have any additional questions ?
undefined says Okay please let me know.  Someone from Secret Labs should have reached out to Axelar. We are going to add this integration to our docs as soon as axelar gmp on pulsar-3 is live
undefined says Hey, this is regarding connecting a Cosmos chain so those steps may not be relevant. I am specifically interested to know how Axelar would behave when connecting to a chain which already has a connection to Ethereum through the Gravity Bridge. 

I saw that Umee completed migrated away from using Gravity Bridge to Axelar, so was wondering if it's because of incompatibility
undefined says I am not very familiar with the Gravity bridge, and I am unsure how it works. Do you have a short walkthrough or information on the connection with Gravity so that I can assist with the next steps?

I am happy to jump on a call to discuss if there are specific requirements.
undefined says Hey, Axelar team... I see you have a javascript SDK. Unfortunately my backend is in Python and I'm hoping to call `queryTransactionStatus` without needing to use JS.

Is there any documentation for the underlying GMP API? it looks like it should be easy enough to make the request manually from Python.
undefined says Hi Axelar team,
Am new to Axelar. Looks like Axelar does not use any standard consensus like Tendermint. What exactly is the consensus protocol that builds the blockchain?
undefined says Axelar is built using cosmos-sdk and tendermint consensus
undefined says The docs only cover the usage of the AxelarJS SDK for querying the status of General Message Passing (GMP) transactions. There's no mention of a Python SDK or the underlying GMP API that could be used directly from Python. However, feel free to reach out to the team Idris Olubisi | Axelar to find a solution for your specific case.
undefined says @Idris Olubisi | Axelar @alanrsoares I am going through the docs here:  https://github.com/axelarnetwork/evm-cosmos-gmp-sample/tree/main/cosmwasm-integration/send-receive

When I run the following with osmosisd it works: 

```
osmosisd tx wasm execute osmo12uds53qp285w68vzq9wx5kjjfj0evvsy7k0e2srx9mchj29h7urq3rtuuc '{"send_message_evm": {"destination_chain": "Avalanche", "destination_address":"0xa88B3843E895988D423efFc4Ecc2E982f398a3Ab","message":"YOUR_MESSAGE_HERE"}}' --amount 1uosmo --from wallet --gas-prices 0.1uosmo --gas auto --gas-adjustment 1.3 -y -b block
```

But when I try to do it with JS I receive the error: Error calling the VM: Error executing Wasm: Wasmer runtime error: RuntimeError: Aborted: panicked at 'called `Result::unwrap()` on an `Err` value: NoFunds'

This is my js code, any thoughts? My osmosis wallet has funds btw. Could it have to do with the amount variable? 

```js
let send_message_evm = async () => {
  const res = await client.execute(
    myAddress,
    contractAddress,
    {
      send_message_evm: {
        destination_chain: "Avalanche",
        destination_address: "0xa88B3843E895988D423efFc4Ecc2E982f398a3Ab",
        message: "YOUR_MESSAGE_HERE",
      },
    },
    "auto"
  );

  console.log(res);
};

send_message_evm();
```
undefined says Hey guys sorry for the noob question but I'm having trouble trying to figure out how to deploy a contract across multiple chains figured this be thee right place to ask lol
undefined says No worries. What's the challenge? Which development kit (Foundry, Hardhat, or Truffle) are you using? Can you walk me through the process?
undefined says hi ! I have a question did Axelar provide a SDK or API if we want to make a bridge for EVM blockchain not available in Axelar to another one ?
undefined says I mean implement our solution from a EVM blockchain to another one by myself using SDK ?
undefined says Do you want to add your own EVM blockchain to Axelar? Or do you want to add your app hosted on an EVM blockchain?

**Adding a blockchain**
In general, adding a new chain to Axelar is permissionless. It takes about 10 minutes to integrate a new blockchain. Here are the basic steps outlined by Axelar's co-founder Sergey: https://twitter.com/axelarcore/status/1499053636969709568.

**Adding your dApp**
Axelar provides a suite of APIs and an SDK that can be used to add cross-chain functionality to your applications. 

This includes the ability to send messages containing arbitrary data cross-chain, from the source chain to the destination chain. This can be done by interacting with the Axelar Gateway, an Axelar-operated installation on the source chain, which contains the functions and logic needed for initiating and processing any cross-chain messages.

For transferring tokens cross-chain, you can use the AxelarJS SDK. There are three ways to do this:

1. Call `sendToken` on an Axelar gateway EVM contract.
2. Get a deposit address using the AxelarJS SDK.
3. For tokens not natively supported, build your own Interchain Token **source** (<https://docs.axelar.dev/dev/send-tokens/overview>).

Here is an example of how to use the AxelarJS SDK to generate a deposit address:

```javascript
const sdk = new AxelarAssetTransfer({ environment: "testnet" });
 
const fromChain = CHAINS.TESTNET.AVALANCHE, 
 toChain = CHAINS.TESTNET.POLYGON,
 destinationAddress = "0xF16DfB26e1FEc993E085092563ECFAEaDa7eD7fD",
 asset = "avax"
 
const depositAddress = await sdk.getDepositAddress({
 fromChain, 
 toChain, 
 destinationAddress, 
 asset
});
```
More info here -> https://docs.axelar.dev/dev/axelarjs-sdk/token-transfer-dep-addr
undefined says Thanks @Rodin10 (Will never DM first!) 
I didn't see this part in any docs. Can you share a link to the docs that state this?
undefined says Here you go üòä https://docs.axelar.dev/validator/operations/monitoring
undefined says Hey @Seanrad what is the client variable you are using here? Just curious if there is a spot to pass a gas info the way you are with `osmosisid`
undefined says @ben-weinberg thank you for your response!

```js
let wallet = await Secp256k1HdWallet.fromMnemonic(mnemonic, {
    prefix: "osmo",
  });
  let gas = GasPrice.fromString("0.025uosmo");
  let client = await SigningCosmWasmClient.connectWithSigner(
    rpcEndpoint,
    wallet,
    { gasPrice: gas }
  );
```
undefined says Ok... making progress, below is the correct js fee structure in case it's helpful for anyone. Now I'm running into Error: Broadcasting transaction failed with code 13 (codespace: sdk). Log: insufficient fees; got: 1uosmo which converts to 1uosmo. required: 500uosmo: insufficient fee

@ben-weinberg a cosmos -> evm contract call shouldnt cost 500uosmo right?? 

```js
let gas = GasPrice.fromString("0.1uosmo");

let wallet = await Secp256k1HdWallet.fromMnemonic(mnemonic, {
  prefix: "osmo",
});

let client = await SigningCosmWasmClient.connectWithSigner(
  rpcEndpoint,
  wallet,
  { gasPrice: gas }
);

let send_message_evm = async () => {
  const fee = {
    amount: coins(1, "uosmo"),
    gas: "200000",
  };
  const res = await client.execute(
    myAddress,
    contractAddress,
    {
      send_message_evm: {
        destination_chain: "Polygon",
        destination_address: "0xC3830fbaf165aa833A5FFaC35F1aB661BA144962",
        message: "SEANRAD",
      },
    },
    fee
  );

  console.log(res);
};

send_message_evm();
```
undefined says thank you very much ! very usefull informations
undefined says I have not personally transacted from osmos before so hard for me to give an estimate here. For typical gas costs though I'd say its easiest to look at the axelarscan explorer and just see txs coming from osmosi to see how much users are typically paying for a tx. 
https://axelarscan.io/gmp/search?sourceChain=osmosis
Just out of curiosity if you do pass in the 500 uosmo they're requesting does the tx go through?
undefined says Error: Broadcasting transaction failed with code 13 (codespace: sdk). Log: insufficient fees; got: 1uosmo which converts to 1uosmo. required: 375uosmo: insufficient fee at SigningCosmWasmClient.broadcastTx
undefined says I try to use sendTokens to send some DAI from mainnet to Arbitrum but its showing that I do not have enough transfer fee. Where to find out how much fee I need and how do I put the fee in as params?
https://axelarscan.io/transfer/0x811b8c3b0a997587edffd6ee5394783e3737da5b34fb31650b40810a99564d08
undefined says I call the contract directly
undefined says Yes now I see that squid does it by swapping to USDC first then bridge the token across
undefined says If I do not want to proceed with the bridging because the transfer fee is too high, is there any way I could cancel the bridging?
undefined says thanks. can you dm me first?
undefined says Hello everyone, I'm having trouble using Interchain Tokens
.Debugging it tenderly shows thatüëá
undefined says I don't understand what's going on, can someone please explain to me what's happening
undefined says https://github.com/OdionOseiwe/CROSS-CHAIN-BRIDGE
undefined says This is the repo üëÜ
undefined says https://testnet.axelarscan.io/gmp/0x751b380dde264a490ef4d8ebd435f4ee537649603a8f224cf635ad7f6e2a9c27
undefined says hey, taking a look thx for flagging
undefined says Hey we do not have an sdk akin to axelarjs for python but if you're trying to query a tx you could try use the axelarscan api instead. Let me know if this has what you're looking for thx! https://docs.axelarscan.io/interchain/searchGMP
undefined says quick follow up on this: what is the address of the token manager on the destination chain? was there a manager that was ever registed on polygon zkevm? thx:)
undefined says @ben-weinberg Now I'm trying to send EVM to Cosmos message with these docs https://github.com/axelarnetwork/evm-cosmos-gmp-sample/tree/main/cosmwasm-integration/send-receive and running into issues. I deployed my GMP contract to polygon testnet & instantiated with polygon chainname, + polygon gateway and gas service contracts. But when I execute the contract, the transaction goes through, but  there is no message to query with ```storedMessage()```

Here is my polygon GMP contract (it is uploaded exactly as is in the docs above): https://mumbai.polygonscan.com/address/0x9eb197156c6d2C2f14d64e85eCC01f4357Db1199
undefined says @ben-weinberg I figured this out! I needed to add an additional "base fee" on axelarscan. Is there a way to do that in Remix? I am a cosmos dev and am going to make a tutorial for EVM + Cosmos devs of all experience levels
undefined says awesome glad to hear, do you mean how to send funds along with the tx? If I'm understanding you correctly on remix you need to make sure you're running injected web3 then make sure your wallet is pointed to the right network. Then to send funds with the tx simply input a value in the value text field (locate under gas limit) 
This is awesome though very excited about this, feel free to keep me updated on this tutorial. Cheers!
undefined says Thanks! this works well for me
undefined says yes there is 0x3E8eE61417812766EFd5a488631eAE47A0F9e760 and it was set
undefined says :13_gm: Builders!

:axelarblue: The Axelar governance vote passed yesterday, and the pool started running ~ 19 hours ago. 

KYVE has now archived 77250 blocks of Axelar chain on Arweave = 0.05 GB and should be at the latest state in ~108 days.
You can start accessing the data that has already been uploaded to start building & perform data analytics with it.

:arrow: KYVE is a decentralized datalake, archiving data from genesis to the latest state in a decentralized way on any decentralized storage solution like Arweave. You can think of it as a decentralized archival node storing everything in the block and the block result. You can access this data for free since it's on Arweave and permanently stored. You can then query the data using KYVE's ELT pipeline that support more than 50 datawarehouse (Snowflake, Mygraphsqql, SQL, Postgress, etc..) or through Rest API. This data can also be used to block sync or state sync a node (for validators mostly).

:cosmos: KYVE has already archived Cosmos Hub, Archway and are archiving also Osmosis ~22.80%.

> Some example use cases are: 
> - Historical Data Analysis
> - Auditing and Compliance
> - Resilience and Redundancy
> - dApp Development
> - Blockchain Analysis Tools

:Axelarstrong: Want to start building? Read more @here: https://x.com/KYVENetwork/status/1703754423409799347
undefined says Hi, I wanna know that AXELAR support the packet forward middleware. How can I know that? How can I contact the dev team?
undefined says Please stop pinging members randomly
undefined says @Danny
undefined says Feel free to reach out to Idris for technical questions.
undefined says Not exactly sure what you mean by "packet forward middleware"
undefined says I mean the "next_memo" function in "memo"
undefined says Alexar chain support memo in middleware?
undefined says @Danny Hello! I didn't find such information in our documentation, so I believe you need to wait for the response from Idris
undefined says Okay, thanks.
undefined says We are always at your service! and thanks for your patience and cooperation!
undefined says @Danny Could you please clarify what you mean by "Alexar chain support memo in middleware"? Is there any additional context you would like to provide? What are you trying to achieve?
undefined says I wanna swap axlUSDC on osmosis and send it to my chain. for that I have to use cross-chain-swap on osmosis, if swap finished, then the swapped axlUSDC must be sent to Axelar, if the Axelar chain support memo in ibc middleware(meaning process memo in ibc hook), then I can receive axlUSDC using `memo`. Is it possible?
undefined says Thanks for providing additional context.

Currently, Axelar does not offer support for the memo feature in IBC protocol. You can refer to the list of IBC channels supported by Axelar here: https://docs.axelar.dev/resources/mainnet#ibc-channels. I will share this information internally to explore the possibility of including this feature in our roadmap.

In addition, if you are looking for cross-chain swaps, we recommend utilizing https://docs.squidrouter.com/. Squid facilitates seamless swaps through Axelar's versatile message-passing system, making it possible for users to conduct one-click transactions across various applications and assets.

Feel free to let me know if you have any further questions or if this is helpful to you.
undefined says I want the token on my chain to axlUSDC. to do that, I'll send token to osmosis and there, the swap will be processed, then, the swapped token will transfer via Axelar chain to my chain. That can be possible without memo in ibc protocol? I'm sure that other tokens are possible, but not sure with axlUSDC cause I don't know Axelar support memo in IBC protocol.
undefined says Okay so looks like your issue is on the destination chain. The tx works fine leaving Celo but does not work on PolygonZKEVM. Quick question did you deploy a token and remote token manager on the polygon zkEVM? If so can you show me the tx where you did this? thx
undefined says https://testnet-zkevm.polygonscan.com/tx/0xb57945f7e344b50ce2106bc9530413656f700d80fd222360fd2c06f01da53c95
undefined says https://testnet-zkevm.polygonscan.com/address/0x2129402adFD31CBfdb60c47E382Bd4Df72BE11aa
undefined says https://testnet.axelarscan.io/gmp/0xa215355684a82a33c0b8a4abd53640b66ba2220ddbc68387ee53d496296ce296
undefined says I tried doing the transaction on different networks and it gave me the same error
undefined says I'm confused üò≠
undefined says Hey guys do we have a working websocket for teh testnet?
undefined says I am getting an error when trying to use the websocket thats in teh docs `supervisor.init_subscriptions: failed to subscribe to events of axelar-testnet-lisbon-3: event source error: failed to create WebSocket driver for chain axelar-testnet-lisbon-3 with address ws://rpc-axelar-testnet.imperator.co/wss`
undefined says Hello üëã So sorry  for the error.

I haven't tried this before, I will try it out and reach out internally to confirm if we support websocket for that endpoint.
undefined says Thanks! I ended up setting up my own archive node and using it as websocket source
undefined says i am using this for IBC (hermes)
undefined says Hey guys, Alex here from FS.

I was redirected here from a support ticket I opened a while ago.

We at FS were affected by Multichain situation as we were using them to bridge our token - FS - from Fantom to multiple EVM networks, and now we are looking at bridging again. 

I used the Interchain portal and bridged on testnet and the experience was fine, we would like to start bridging to mainnet.

Can someone from the team help us with access to that?
undefined says Best to contact @james_friel | Axelar
undefined says NICE
undefined
undefined says :Light: **Hackathons **:Light: 
This channel is for news and updates about Axelar-related hackathons.
Feel free to ask in here if you are looking for a team mate.
Happy hacking :axelar: :axelarblue:
undefined says Pinned a message.
undefined says @Axelar Builder ICYMI: 

:axelar:  Axelar is excited to be participating in the Encode x Aurora Hackathon, kicking off next week! :axelarblue: 

**Start date: **Tuesday, 30th May 2023
**Submission date:** Sunday, 25th June 2023
**Finale and Prizegiving:** Wednesday, 12th July 2023

:Axelarstrong:  **Axelar's Bounty:** Use Axelar's GMP for sending Interchain Messages  or Tokens!

> Use Axelar in your project to build a DApp that takes advantage of the ability to interact with contracts across multiple chains using Axelar‚Äôs General Message Passing.

:takemymoney:  **Prizes:**

1st Place - $3k

2nd Place - $2k

3rd Place - $1k

üñáÔ∏è  Link to register: https://www.encode.club/aurora-hackathon
undefined says :UWBC:  Axelar wrapped up Olympihacks, Waterloo Blockchain Club's first ever hackathon this weekend and we were blown away by the submissions! :UWBC:

ü•á In first place we had Glue, introducing abstraction contracts on target chains. Inheriting from AxelarGateway, these contracts allow developers to extend the reach of their own contracts across multiple blockchains:

‚öôÔ∏è  https://devpost.com/software/glue-efjb72

ü•à In second place we had Intergalactic PioNEARing with Axelar, which combines  Near XCC (cross- contract calls from within Aurora EVM) with the power of Axelar's GMP to allow users in any EVM or Cosmos chain to make a cross-chain call to NEAR smart contracts:

‚öôÔ∏è https://devpost.com/software/intergalactic-pionearing-with-axelar

ü•â In third place we had BeSafe, a secure and trustless cross-chain estate planning service for any EVM compatible chain on the Axelar network: 

‚öôÔ∏è https://devpost.com/software/besafe-ecpqlr

:rainbowcat: And, last but not least the Grand Prize winner of the main Olympihacks track was also build using Axelar! :Axelarstrong: 

InterPal won big, using Axelar to send interchain messages, tokens, and mint NFTs across 13 chains through chat! InterPal simplifies everything blockchain with an intuitive chatbot with cross-chain interoperability: 

‚öôÔ∏è https://devpost.com/software/interpal
undefined says Axelar is excited to be participating in the The OSCAFest23 Hackathon! :Axelarstrong: 

You can participate in this hybrid hackathon for the opportunity to win up to $5000 from the prize pool and other amazing prizes! 

:axelarblue:  Axelar's bounties focus on Building InterChain Messages/Tokens with Axelar GMP :axelarblue: 

:5385twitter: https://twitter.com/oscafest/status/1660693775847440404?s=46&t=vTlVxoqUfv5auN9ifxE4Rw

üìç Register here: https://docs.google.com/forms/d/e/1FAIpQLSdCinbuR2D0QcvGJpeqESI0I_6IDP4dcwEqcx3Gs_IwJhjLPQ/viewform
undefined says :herdao: @Axelar Builder Axelar is excited to be sponsoring the upcoming H.E.R. DAO HD Games Hackathon! 

:alert: What's this hackathon all about?  HD Games is a 2 day hybrid hackathon- half IRL and half online! Sign up today for the HDGAMES Hackathon, powered by H.E.R. DAO, Womenhack and Aves Lair :9323cuteyes: 

:axelarblue: Axelar's bounties: Using Axelar GMP for sending Interchain Messages / Tokens - Prize Pool: $5k USDC

:Axelarstrong: AND each winning Axelar team will have priority access to $25,000 each worth of grants for continuing building :7784cuteomg: 

:3214flowerpink: Ready to hack? Learn more and register here: https://dorahacks.io/hackathon/hdgames/detail
undefined says @Axelar Builder Reminder that today at 1pm EST/5pm UTC we'll be live for Axelar's first ever Demo Day!

:UWBC:  We'll be showcasing the projects submitted from the winning teams from Waterloo Blockchain's Olympihacks :UWBC:

Tune in to learn more about what they built, how they leveraged GMP in their projects, and to get some inspiration for tour next hackathon project!

:Black: We're also offering a free OAT, powered by Galxe, for anyone who tunes in!

:White:  Claim your OAT: https://galxe.com/axelar/campaign/GCQjNUNxyo

‚öôÔ∏è  Tune in live: https://www.youtube.com/watch?v=2x3yQwpS7Yc
undefined says Hey @Axelar Builder :Axelarstrong:

:typingpeped:  Thinking of joining an upcoming hackathon but not sure where to start? We've got you covered!

:UWBC:  You can check out our latest blog post on the inning projects from Waterloo Blockchain's Olympihacks, including their MVPs and Github repos here: https://axelar.network/blog/u-waterloo-olympihacks-hackathon-2023

:bigbrain:  And if you want to see the teams demo their projects live and give a deep dive into how they used Axelar in their code, check out our Demo Day from last week: https://www.youtube.com/live/2x3yQwpS7Yc?feature=share
undefined says Yes! I like to practice Axelar. It's great if I know about the next hackathon!
undefined says Hey ! idk if its normal but we can write here
undefined says We've got the next 2 hackathons we're participating in linked in the above messages!
undefined says Yep! This is meant to be an interactive channel for hackers to find teams, keep up to date with the past winners projects, all upcoming events and ask their questions :Shakehands:
undefined says Is there any new documentation on Interchain NFTs? I've seen the demo video online. I'm trying to create an NFT that exists on both Moonbeam and Fantom.
undefined says Have you worked through the GMP docs? If not I'd start there: https://docs.axelar.dev/dev/general-message-passing/gmp-messages

There's also a public repo of InterPal, a hackathon project built for Olympihacks where they minted and sent NFTs cross chain, you can check it out here: https://devpost.com/software/interpal
undefined says Hello @Axelar Network regarding the oscafest23 hackathon
How would the prizes shared amongst winners?
undefined says I can't find a breakdown 
Don't know if I'm looking at the wrong place
undefined says Probably best to check their Discord or ask the question there if the information is not available there!
undefined says You can find the breakdown here: https://blog.oscafrica.org/a-guide-to-the-axelar-web3-hackathon
undefined says Thanks @Idris Olubisi | Axelar
undefined says Hey hackathon organizers, I had a doubt, my team built a project for FVM dataverse hackathon and we won a bounty from Axelar. 
We are wishing to participate in this hackathon and if we do, we are planning to use the project we built there and make significant changes on the front end side, we have planned a complete migration to website for frontend purpose. 

Please let us know if we are allowed to use and build over a project which already won Axelar bounty in the past before we start building. @Idris Olubisi | Axelar
undefined says Tagging @Axelar Network here for visibility.
undefined says Which hackathon are you planning to attend?
undefined says You could check the rules until Axelar can clarify.
undefined says My general assumption would be that new works need to be submitted, especially if your project has already won a bounty from Axelar.
undefined says Hope the team can clarify!
undefined says We will confirm with the team today- apologies for the delay on this
undefined says oscafest23 hackathon
undefined says @Axelar Network
undefined says Just confirming- you will be using the codebase from the FVM hacakthon and only migrating the front end to a website? Will you be adding or updating and of the backend you used from the previous hacakthon for this entry?
undefined says our project is chrome extension based, we have plans to migrate it to a website based application, we won't be making any changes to the backend, that's what I know for now @Axelar Network
undefined says Will have to get the judging team's feedback, as novel code may be a requirement. Will update here by EOD
undefined says we will only proceed after we get confirmation on this, or we won't. Thank you for your consideration!
undefined says Hello, you can proceed with the existing code, but please note that you will be evaluated on the frontend component that you build out only as the backend has already been written!
undefined says The form in this URL asks only one member of the team to fill the second part of the form but actually all it's field are marked as required so what are other members of the team supposed to do? 
@Axelar Network
undefined says Can you link the form here? Not sure which one you're referring to
undefined says @Axelar Builder we're 30 minutes out from the BNB Chain Zero 2 Hero Hackathon Winners Demo Day! :816456169920004137: 

:826852331253530624: Join the winning teams as they shine a spotlight on what they build, how they built it and how Axelar helped power their wins!

:arrow: Tune in here at 5pm UTC/1pm EST: https://www.youtube.com/watch?v=xH_agqwIXGY
undefined says üî•üî•üî•
undefined says :Axelarheart:
undefined says :axelar:
undefined says @Idris Olubisi | Axelar good day sir, please when is the deadline to submit this hackathon today?
undefined says This is still ongoing, an announcement was made at the event about deadline extension.
undefined says Alright thank you for the update sir
undefined says I trust you enjoyed oscafestü´°
undefined says hey, are you gonna be at ethglobal waterloo?
undefined says Axelar already organized a hackathon in Waterloo in June https://discord.com/channels/770814806105128977/1110622693461598308/1115322250397237379.
undefined says I have no information if reps will visit ETHglobal in Waterloo as well but I think it may be possible.
undefined says Does Axelar support Mantle?
undefined says Not yet
undefined says GM - Came across the community you're building. Consensys (makers of Metamask) is running a global hack (US$100K+ Prize). Keen to feat your logo on their page as their official community partner? I'm scouting for interesting groups to onboard. lmk
undefined says Thank you for your interest, forwarded your inquiry to the team.
undefined says Started a thread.
undefined says any updates about the results?
undefined says Winners will be announced on the H.E.R. DAO site once they've all been selected!
undefined says :cdaologo: @Axelar Builder we're excited to announce "Axelathon: Axelar Online Hackathon 2023" hosted by our long time friends at ContributionDAO :cdaoheart: 

:cdaowork:  This is much more than a hackathon- it's an opportunity for those in Southeast Asia to build their knowledge base and portfolio, learn new skills and of course for the chance to win big! 

Leading up to the main event, workshops will be held over 2 months, starting from July 6, 2023, to September 3, 2023, and will provide:

:axelar:  Beginner friendly Resources
:axelarblue:  Online articles & tutorials
:axelar:  3 IRL workshops
:axelarblue: Mentorship, advice & support

:cdaomoon:Our goal is to ensure that anyone can participate in the hackathon without needing any prior knowledge of Axelar, and to provide hands on experience building blockchain dApps, cross-chain calls, and other fundamental knowledge related to Ethereum, Cosmos, and Axelar.

:4563rainbow100:  Now for the most important past- the prizes!

A Grand Prize of 15,000 USD :pepewow: 

1st MVP: $4,000 
2nd MVP: $2,000 
3rd MVP: $1,000 
4th MVP: $500 
5th MVP: $500 

:Axelarstrong:  In addition to the cash prize of 520,000 THB, the winning team will have the opportunity to participate in the Axelar Grants directly, a special program offering $60 million for builders who can lead the next gen of interoperable Web3 use cases!

:alert: The conclusion of the Axelathon will take place on September 3, 2023, at "DISTRICTX," a hub for blockchain innovations in Asia, located in the heart of Bangkok.

:typingpeped: Learn more and register here: 

Website: https://axelathon.contributiondao.com
Devfolio: https://axelathon2023.devfolio.co
Twitter: https://twitter.com/contributedao
Facebook: https://facebook.com/groups/axelarthai
Telegram: https://t.me/axelardeveloper
undefined says An update from the team: 

üìå We are still judging submissions since the hackathon got extended, but winners should be finalized by next week.

We are still waiting on getting emails and names for all teams that submitted.
undefined says Pinned a message.
undefined says @Axelar Builder thinking of participating in an upcoming hackathon but not sure what to build  :typingpeped: 

Looking for some inspiration to thing outside the box for your next project :peepo_big_brain: 

:5393binancecoin: Check out our blog posts covering the winning projects from the BNB Chain Zero 2 Hero Hackathon!

:arrow: https://axelar.network/blog/bnb-chain-hackathon-winners
undefined says Can one participate remotely?
undefined says @Thepleb | ContributionDAO
undefined says Is this hackathon still running @Kate | Axelar
undefined says No, the hackathon has been wrapped up in June.
undefined says @Stefan oh
undefined says @england(Will never DM you first) do you know if folks can participate remotely?
undefined says yesss! they can
undefined says everyone around the world are free to join
undefined says üëÜ
undefined says alright thanks
undefined says Is anybody from the axelar team available at the EthParis venue?
undefined says There are a few members from the BD team there, as far as I'm aware.
undefined says Sorry we missed this fren- we‚Äôre always manning the #üíª‚îÇdevelopers and #üåê‚îÇdev-tavern channels and the hackathon‚Äôs dedicated Discord channel!
undefined says :cdaologo: The first workshop in the Axelathon series hosted by ContributionDAO was a huge success! 

:cdaowork:  This is the first of 3 in-person workshops that build on the technical skills from the last, leading up the Axelathon Hackathon this fall!

With over 80 participants we can't wait to keep building with our amazing Thai community of Axelarators :Axelarstrong: 

:twitter:  https://twitter.com/contributedao/status/1682784835738415105?s=46&t=1eRehTENYqLDtu_hAKBblA
undefined says Haha, we actually met him at EthGlobal Paris. He had posted that message earlier before the meeting took place.
undefined says Nice!! We‚Äôre too good üòÇ
undefined says Thanks to all the teams who joined us in Paris for the ETHGlobal hackathon last week :Axelarstrong: 

üá´üá∑ It was great to meet with builders in the beautiful Palais Brongniart in the heart of Paris! 

We‚Äôre excited to share the winners here: 

ü•á 1st place for $3000:  Web3 Soundbox

ü•à Second place for $1500:  Ratatouille500 

ü•â Third place for $500 PaySplit

üîó You can see demos of all the projects here: https://ethglobal.com/showcase?events=paris2023
undefined says thats amazing! couldnt go paris, but we are mostly based in singapore/indonesia so see u all at token üôÇ
undefined says Hi Kate - I noticed Axelar is a sponsor at ETH Toronto, are they integrating into Shibarium? I would like to see this. I have a couple projects to look at there.
undefined says Hi All Axelar Builders!
Axelathon | Axelathon Online Hackathon 2023 
üîñ Application Open: July 6, 2023-August 31, 2023
üèÜ Demo Day: Sunday, September 3, 2023
üéñÔ∏è Prize: $15,000
Interested in participating?
Register: axelathon.contributiondao.com
undefined says There are no plans as of now, but if there's enough community interest we can look into it!
undefined says Hey @Axelar Builder :Axelartip: 

:herdao:  We're excited to host the winning team of the HD Games x H.E.R. DAO Hackathon on a YouTube livestream, which will also be streamed to Twitter! 

:typingpeped:  The stream will feature a live demo, a deep dive into the code to explore how the team used Axelar's tools and SDK to power their win as well as which features they leveraged, and next steps for the project! :Axelarstrong: 


> ‚è≤Ô∏è  2pm EST / 6pm UTC
> 
> üìÖ  Today! August 3rd


Follow the links below to tune in, hope to see you there! :minecraftheart: 

:youtube: https://www.youtube.com/watch?v=LfsUpBkQOH4

 :Twitter:  https://twitter.com/axl_ecosystem/status/1686830986749952000?s=46&t=e7yfEP7AsUOK6ns473IHTw
undefined says winner announcement blog post wen? üëâ üëà
undefined says We've got the FVM winners blog post coming out this week, and HD Games x H.E.R. DAO will be next week!
undefined says :alert: @here We'll be live TODAY in **1 hour at 5pm UTC/1pm EST** for this week's Hackathon Winner Demo Day! :alert: 

The two winning teams from the OSCAFEST 2023 by Open Source Community Africa, the biggest Open-Source Festival in Africa will walk us through their projects and designs :2167africa: 

:peepolaptoppopcorn:  The teams from SUVe and DePay will walk through a live demo of their projects, followed by a deep dive into their code and how they leveraged Axelar's General Message Passing to go cross-chain :Axelarstrong: 

:Youtube:  Link to the stream: https://www.youtube.com/watch?v=J8VDCHUoIXo
undefined says Happy Friday @Axelar Builder :Axelarstrong: 

The latest blog post is up featuring the üóÑÔ∏è FVM Dataverse Hackathon Winners üóÉÔ∏è 

üèÜ  We detail the top 3 submissions featuring bridging, treasury and asset management and DAO based use cases! 

Read about the projects and dive into the code here: 

üñáÔ∏è https://axelar.network/blog/fvm-dataverse-axelar-hackathon-winners
undefined says Hey, where do we submit for this hackathon? Saw it on DoraHacks and Devfolio
undefined says Sorry for the delay here- it's on Devfolio: https://axelathon2023.devfolio.co/
undefined says no worries, appreciate the update
undefined says here is Matteo from urbe.eth, a web3 community in Rome, we would like to talk with you about ETHRome, an hackathon based on Governance and zk/privacy.

https://ethrome.org/

Who I can talk with ?
undefined says Feel free to reach out to Jason Ma | Axelar#9781 or Jake | Axelar#7393
undefined says thanks! I've sent a friend request to @Jason Ma | Axelar
undefined says Pls can I get the axelar past hackathon wining project repo
undefined says Hey! All the past winners repos are linked in the blog posts we've published on them. We've linked them all here if you scroll up through the channel
undefined says Okay thanks
undefined says GM @Axelar Builder :Axelarstrong: 

:alert: Don't miss  this week's Hackathon Winner's Demo Day happening today! :alert: 

üóìÔ∏è TODAY, August 24th 

‚è≤Ô∏è  1pm EST/ 5pm UTC

:eth: Featuring the winning projects from the ETHGlobal Paris Hackathon!

Tune in to learn about what the teams built and how, and to get some inspiration for your next hackathon project!

:Youtube:  https://www.youtube.com/watch?v=cK02KLYsYsE
undefined says @Axelar Builder the latest blog post is up featuring the winners from the OSCAFEST Hackathon :2167africa: 

üèÜ  We cover the 2 winning projects from SUVe | Interchain Vaccine Verification, and DePay :Axelarstrong: 

üñáÔ∏è  Dive into the code and watch the demos here: https://axelar.network/blog/meet-the-axelar-bounty-winners-from-lagos-oscafest
undefined says Hello I have a question regarding the axelathon hackathon
undefined says @Axelar Network
undefined says Hey, let us know! The Axelar team as well as the ContributionDAO team are here to help
undefined says The project I want to submit to the hackathon, was submitted to an hackathon but was built during this hack also. Hope that doesn‚Äôt affect, it‚Äôs a react native mobile app and I‚Äôm having issues deploying to the play stores
undefined says Can I still submit?
undefined says Not quite sure what you mean- the project was built during this hackathon and you want to reuse the code for another hackathon, or you're using code from a previous hackathon to submit to this one?
undefined says It a project I built the same time during this hack but I just submitted the project to another hack also
undefined says What do you say
undefined says We can't speak for the other hackathon if we aren't involved in it- we can only judge or comment on projects submitted to the Axelathon Hackathon
undefined says Hey is there a chance of deadline increase @Axelar Network
undefined says Hey, for which hackathon? Please note that Axelar doesn't organize the hackathons we participate in, we just host bounties, so you would need to reach out to the organizers.
undefined says Axelathon @Axelar Network
undefined says Contribution DAO is running this hackathon, @Thepleb | ContributionDAO can confirm but it is very unlikely any extensions can be given out unfortunately.
undefined says also is there any exchange on test netwroks goerli or polygon where ausdc swap pool is available @Axelar Network
undefined says @Thepleb | ContributionDAO
undefined says I have submitted although I didn‚Äôt have the chance to deploy some contracts, could I quickly deploy and make the changes to github or I should I just leave it alone since the deadline has passed?
undefined says Since the deadline has passed any work submitted afterwards unfortunately won't be considered in the judging
undefined says Okay thanks
undefined says any updates yet?
undefined says Hey- we published the FVM Dataverse blog post a few weeks go: https://axelar.network/blog/fvm-dataverse-axelar-hackathon-winners

Here's the announcement link: https://discord.com/channels/770814806105128977/1110622693461598308/1139572670795612160
undefined says I meant to ask for the HD games hackathon
undefined says This is the latest update on the HD Games Hackathon that I'm aware of https://discord.com/channels/770814806105128977/1110622693461598308/1113185533909274644
undefined says Gm are the results for axelathon out yet?
undefined says Hi Axelar Fam! Congratulations to Axelathon 5 MVPs üî•
https://x.com/contributedao/status/1698848449763119123?s=46&t=1eRehTENYqLDtu_hAKBblA
undefined says This one is coming this week- either today or tomorrow. Hackathon winners blog posts come out 1x a week!
undefined says Hey when we will get prize money for axelar hackathon
undefined says Hello @Coder 

Which hackathon? 

Axelar doesn't organize the hackathons we participate in, we just host bounties. You might need to reach out to the organizers of the hackathon.
undefined says Axelathon @Thepleb | ContributionDAO
undefined says Please reach out to the organizers of the hackathon.
undefined says :eth: Hey @Axelar Builder we were thrilled to host a bounty in last week's ETHcon Korea :eth: 

üá∞üá∑  The team was on-site to give a workshop, mentor hackers and evaluate all the submissions!

We're excited to share the track winners: 

:axelarblue: Multi chain Mutation Dino, 

:axelar: Simperby, 

:axelarblue: Dexperience

Congrats to all the teams who participated and to our winners! 

:eth:  https://2023.ethcon.kr/
undefined says :eth: We also just wrapped up Ethereum Singapore, a huge thanks to everyone who came out and hacked on Axelar's bounty  üá∏üá¨ 

‚è≥ We will announce the winners shorty... good luck! 

:axelarblue: https://www.ethereumsingapore.com/hackathon
undefined says :13_gm: and Happy Friday @Axelar Builder!  

:herdao: The latest blog post on the HD Games Hackathon winners is up :7784cuteomg: 

:axelarblue: Read all about the winning team, check out their demos and dive into the code here: https://axelar.network/blog/meet-the-axelar-bounty-winners-from-the-hdgames-hackathon
undefined says @Shivansh üëÜ
undefined says hi, sorry for the repost from general. just found this channel. 
i participated in a hackathon and i'm supposed to get a bounty from Axelar. it was for ETHToronto/ETHWomen (team is partytricks). The event organizers have been totally unresponsive and I tried to reach the Axelar contact through email without success. Can someone from the team nudge the person responsible for bounties? Thank you!
undefined says Please try to reach out to the event organizers directly. Axelar only provided the prize but it needs to be distributed by the organizers.
undefined says If unable to reach them, please try to reach out to Kate.
undefined says Thanks @Stefan! I‚Äôm going to reach out to Kate now since the organizers have been unresponsive for 2 weeks ü´†
undefined says üëç
undefined says I hope you can get your price soon!
undefined says @Kate | Axelar hi Kate, I‚Äôm not able to dm you. Would you prefer to speak in this channel? The events lead at Axelar was cc‚Äôd on the email for the Ethtoronto bounty, but she hasn‚Äôt responded to it yet. Would you mind giving her a nudge if possible?
undefined says Responded in the main channel- will get you some answers on this and continue the conversation over email! Sorry again for dropping the ball on this.
undefined says I am not able to reach out, there has been no comunication, can you please let me know any email or something to reach out the contribution dao team